if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5337__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__5336 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5336) : cljs.core.into_array.call(null, G__5336);
      }());
    };
    var G__5337 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__5338__i = 0, G__5338__a = new Array(arguments.length - 0);
        while (G__5338__i < G__5338__a.length) {
          G__5338__a[G__5338__i] = arguments[G__5338__i + 0];
          ++G__5338__i;
        }
        args = new cljs.core.IndexedSeq(G__5338__a, 0);
      }
      return G__5337__delegate.call(this, args);
    };
    G__5337.cljs$lang$maxFixedArity = 0;
    G__5337.cljs$lang$applyTo = function(arglist__5339) {
      var args = cljs.core.seq(arglist__5339);
      return G__5337__delegate(args);
    };
    G__5337.cljs$core$IFn$_invoke$arity$variadic = G__5337__delegate;
    return G__5337;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__5341 = x;
  return goog.isString(G__5341);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__5343 = x__$1;
    return goog.typeOf(G__5343);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3822__auto__ = ty;
    if (cljs.core.truth_(and__3822__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3822__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__5345 = obj;
    return goog.typeOf(G__5345);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__5347 = Symbol;
  return goog.typeOf(G__5347);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4721__auto___5349 = len;
  var i_5350 = 0;
  while (true) {
    if (i_5350 < n__4721__auto___5349) {
      new_arr[i_5350] = arr[i_5350];
      var G__5351 = i_5350 + 1;
      i_5350 = G__5351;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__5352 = i + 1;
      i = G__5352;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__5361__delegate = function(array, i, idxs) {
      var G__5358 = aget;
      var G__5359 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__5360 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5358, G__5359, G__5360) : cljs.core.apply.call(null, G__5358, G__5359, G__5360);
    };
    var G__5361 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__5362__i = 0, G__5362__a = new Array(arguments.length - 2);
        while (G__5362__i < G__5362__a.length) {
          G__5362__a[G__5362__i] = arguments[G__5362__i + 2];
          ++G__5362__i;
        }
        idxs = new cljs.core.IndexedSeq(G__5362__a, 0);
      }
      return G__5361__delegate.call(this, array, i, idxs);
    };
    G__5361.cljs$lang$maxFixedArity = 2;
    G__5361.cljs$lang$applyTo = function(arglist__5363) {
      var array = cljs.core.first(arglist__5363);
      arglist__5363 = cljs.core.next(arglist__5363);
      var i = cljs.core.first(arglist__5363);
      var idxs = cljs.core.rest(arglist__5363);
      return G__5361__delegate(array, i, idxs);
    };
    G__5361.cljs$core$IFn$_invoke$arity$variadic = G__5361__delegate;
    return G__5361;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__5364 = null;
        if (arguments.length > 2) {
          var G__5365__i = 0, G__5365__a = new Array(arguments.length - 2);
          while (G__5365__i < G__5365__a.length) {
            G__5365__a[G__5365__i] = arguments[G__5365__i + 2];
            ++G__5365__i;
          }
          G__5364 = new cljs.core.IndexedSeq(G__5365__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__5364);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__5374__delegate = function(array, idx, idx2, idxv) {
      var G__5370 = aset;
      var G__5371 = array[idx];
      var G__5372 = idx2;
      var G__5373 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5370, G__5371, G__5372, G__5373) : cljs.core.apply.call(null, G__5370, G__5371, G__5372, G__5373);
    };
    var G__5374 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__5375__i = 0, G__5375__a = new Array(arguments.length - 3);
        while (G__5375__i < G__5375__a.length) {
          G__5375__a[G__5375__i] = arguments[G__5375__i + 3];
          ++G__5375__i;
        }
        idxv = new cljs.core.IndexedSeq(G__5375__a, 0);
      }
      return G__5374__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5374.cljs$lang$maxFixedArity = 3;
    G__5374.cljs$lang$applyTo = function(arglist__5376) {
      var array = cljs.core.first(arglist__5376);
      arglist__5376 = cljs.core.next(arglist__5376);
      var idx = cljs.core.first(arglist__5376);
      arglist__5376 = cljs.core.next(arglist__5376);
      var idx2 = cljs.core.first(arglist__5376);
      var idxv = cljs.core.rest(arglist__5376);
      return G__5374__delegate(array, idx, idx2, idxv);
    };
    G__5374.cljs$core$IFn$_invoke$arity$variadic = G__5374__delegate;
    return G__5374;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__5377 = null;
        if (arguments.length > 3) {
          var G__5378__i = 0, G__5378__a = new Array(arguments.length - 3);
          while (G__5378__i < G__5378__a.length) {
            G__5378__a[G__5378__i] = arguments[G__5378__i + 3];
            ++G__5378__i;
          }
          G__5377 = new cljs.core.IndexedSeq(G__5378__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__5377);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__5384 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__5385 = [];
    var G__5386 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5384, G__5385, G__5386) : cljs.core.reduce.call(null, G__5384, G__5385, G__5386);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__5387__i = 0, G__5387__a = new Array(arguments.length - 2);
      while (G__5387__i < G__5387__a.length) {
        G__5387__a[G__5387__i] = arguments[G__5387__i + 2];
        ++G__5387__i;
      }
      args = new cljs.core.IndexedSeq(G__5387__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__5388) {
    var obj = cljs.core.first(arglist__5388);
    arglist__5388 = cljs.core.next(arglist__5388);
    var s = cljs.core.first(arglist__5388);
    var args = cljs.core.rest(arglist__5388);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj5390 = {};
  return obj5390;
}();
cljs.core.IFn = function() {
  var obj5392 = {};
  return obj5392;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5438 = x__4478__auto__;
          return goog.typeOf(G__5438);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5440 = x__4478__auto__;
          return goog.typeOf(G__5440);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5442 = x__4478__auto__;
          return goog.typeOf(G__5442);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5444 = x__4478__auto__;
          return goog.typeOf(G__5444);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5446 = x__4478__auto__;
          return goog.typeOf(G__5446);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5448 = x__4478__auto__;
          return goog.typeOf(G__5448);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5450 = x__4478__auto__;
          return goog.typeOf(G__5450);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5452 = x__4478__auto__;
          return goog.typeOf(G__5452);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5454 = x__4478__auto__;
          return goog.typeOf(G__5454);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5456 = x__4478__auto__;
          return goog.typeOf(G__5456);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5458 = x__4478__auto__;
          return goog.typeOf(G__5458);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5460 = x__4478__auto__;
          return goog.typeOf(G__5460);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5462 = x__4478__auto__;
          return goog.typeOf(G__5462);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5464 = x__4478__auto__;
          return goog.typeOf(G__5464);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5466 = x__4478__auto__;
          return goog.typeOf(G__5466);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5468 = x__4478__auto__;
          return goog.typeOf(G__5468);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5470 = x__4478__auto__;
          return goog.typeOf(G__5470);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5472 = x__4478__auto__;
          return goog.typeOf(G__5472);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5474 = x__4478__auto__;
          return goog.typeOf(G__5474);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5476 = x__4478__auto__;
          return goog.typeOf(G__5476);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5478 = x__4478__auto__;
          return goog.typeOf(G__5478);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3822__auto__ = this$;
      if (and__3822__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4478__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3834__auto__ = cljs.core._invoke[function() {
          var G__5480 = x__4478__auto__;
          return goog.typeOf(G__5480);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._invoke["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5482 = {};
  return obj5482;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3822__auto__ = value;
    if (and__3822__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4478__auto__ = value == null ? null : value;
    return function() {
      var or__3834__auto__ = cljs.core._clone[function() {
        var G__5486 = x__4478__auto__;
        return goog.typeOf(G__5486);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._clone["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5488 = {};
  return obj5488;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._count[function() {
        var G__5492 = x__4478__auto__;
        return goog.typeOf(G__5492);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._count["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5494 = {};
  return obj5494;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._empty[function() {
        var G__5498 = x__4478__auto__;
        return goog.typeOf(G__5498);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._empty["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5500 = {};
  return obj5500;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._conj[function() {
        var G__5504 = x__4478__auto__;
        return goog.typeOf(G__5504);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._conj["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5506 = {};
  return obj5506;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3822__auto__ = coll;
      if (and__3822__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4478__auto__ = coll == null ? null : coll;
      return function() {
        var or__3834__auto__ = cljs.core._nth[function() {
          var G__5512 = x__4478__auto__;
          return goog.typeOf(G__5512);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._nth["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3822__auto__ = coll;
      if (and__3822__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4478__auto__ = coll == null ? null : coll;
      return function() {
        var or__3834__auto__ = cljs.core._nth[function() {
          var G__5514 = x__4478__auto__;
          return goog.typeOf(G__5514);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._nth["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5516 = {};
  return obj5516;
}();
cljs.core.ISeq = function() {
  var obj5518 = {};
  return obj5518;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._first[function() {
        var G__5522 = x__4478__auto__;
        return goog.typeOf(G__5522);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._first["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._rest[function() {
        var G__5526 = x__4478__auto__;
        return goog.typeOf(G__5526);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._rest["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5528 = {};
  return obj5528;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._next[function() {
        var G__5532 = x__4478__auto__;
        return goog.typeOf(G__5532);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._next["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5534 = {};
  return obj5534;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3822__auto__ = o;
      if (and__3822__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4478__auto__ = o == null ? null : o;
      return function() {
        var or__3834__auto__ = cljs.core._lookup[function() {
          var G__5540 = x__4478__auto__;
          return goog.typeOf(G__5540);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._lookup["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3822__auto__ = o;
      if (and__3822__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4478__auto__ = o == null ? null : o;
      return function() {
        var or__3834__auto__ = cljs.core._lookup[function() {
          var G__5542 = x__4478__auto__;
          return goog.typeOf(G__5542);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._lookup["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5544 = {};
  return obj5544;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__5548 = x__4478__auto__;
        return goog.typeOf(G__5548);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._assoc[function() {
        var G__5552 = x__4478__auto__;
        return goog.typeOf(G__5552);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._assoc["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5554 = {};
  return obj5554;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._dissoc[function() {
        var G__5558 = x__4478__auto__;
        return goog.typeOf(G__5558);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._dissoc["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5560 = {};
  return obj5560;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._key[function() {
        var G__5564 = x__4478__auto__;
        return goog.typeOf(G__5564);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._key["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._val[function() {
        var G__5568 = x__4478__auto__;
        return goog.typeOf(G__5568);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._val["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5570 = {};
  return obj5570;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._disjoin[function() {
        var G__5574 = x__4478__auto__;
        return goog.typeOf(G__5574);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._disjoin["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5576 = {};
  return obj5576;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._peek[function() {
        var G__5580 = x__4478__auto__;
        return goog.typeOf(G__5580);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._peek["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._pop[function() {
        var G__5584 = x__4478__auto__;
        return goog.typeOf(G__5584);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._pop["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5586 = {};
  return obj5586;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._assoc_n[function() {
        var G__5590 = x__4478__auto__;
        return goog.typeOf(G__5590);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5592 = {};
  return obj5592;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._deref[function() {
        var G__5596 = x__4478__auto__;
        return goog.typeOf(G__5596);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._deref["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5598 = {};
  return obj5598;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._deref_with_timeout[function() {
        var G__5602 = x__4478__auto__;
        return goog.typeOf(G__5602);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5604 = {};
  return obj5604;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._meta[function() {
        var G__5608 = x__4478__auto__;
        return goog.typeOf(G__5608);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._meta["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5610 = {};
  return obj5610;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._with_meta[function() {
        var G__5614 = x__4478__auto__;
        return goog.typeOf(G__5614);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._with_meta["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5616 = {};
  return obj5616;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3822__auto__ = coll;
      if (and__3822__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4478__auto__ = coll == null ? null : coll;
      return function() {
        var or__3834__auto__ = cljs.core._reduce[function() {
          var G__5622 = x__4478__auto__;
          return goog.typeOf(G__5622);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._reduce["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3822__auto__ = coll;
      if (and__3822__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4478__auto__ = coll == null ? null : coll;
      return function() {
        var or__3834__auto__ = cljs.core._reduce[function() {
          var G__5624 = x__4478__auto__;
          return goog.typeOf(G__5624);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._reduce["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5626 = {};
  return obj5626;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._kv_reduce[function() {
        var G__5630 = x__4478__auto__;
        return goog.typeOf(G__5630);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5632 = {};
  return obj5632;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._equiv[function() {
        var G__5636 = x__4478__auto__;
        return goog.typeOf(G__5636);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._equiv["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5638 = {};
  return obj5638;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._hash[function() {
        var G__5642 = x__4478__auto__;
        return goog.typeOf(G__5642);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._hash["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5644 = {};
  return obj5644;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._seq[function() {
        var G__5648 = x__4478__auto__;
        return goog.typeOf(G__5648);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._seq["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5650 = {};
  return obj5650;
}();
cljs.core.IList = function() {
  var obj5652 = {};
  return obj5652;
}();
cljs.core.IRecord = function() {
  var obj5654 = {};
  return obj5654;
}();
cljs.core.IReversible = function() {
  var obj5656 = {};
  return obj5656;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._rseq[function() {
        var G__5660 = x__4478__auto__;
        return goog.typeOf(G__5660);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._rseq["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5662 = {};
  return obj5662;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._sorted_seq[function() {
        var G__5666 = x__4478__auto__;
        return goog.typeOf(G__5666);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._sorted_seq_from[function() {
        var G__5670 = x__4478__auto__;
        return goog.typeOf(G__5670);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._entry_key[function() {
        var G__5674 = x__4478__auto__;
        return goog.typeOf(G__5674);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._entry_key["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._comparator[function() {
        var G__5678 = x__4478__auto__;
        return goog.typeOf(G__5678);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._comparator["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5680 = {};
  return obj5680;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3822__auto__ = writer;
    if (and__3822__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4478__auto__ = writer == null ? null : writer;
    return function() {
      var or__3834__auto__ = cljs.core._write[function() {
        var G__5684 = x__4478__auto__;
        return goog.typeOf(G__5684);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._write["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3822__auto__ = writer;
    if (and__3822__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4478__auto__ = writer == null ? null : writer;
    return function() {
      var or__3834__auto__ = cljs.core._flush[function() {
        var G__5688 = x__4478__auto__;
        return goog.typeOf(G__5688);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._flush["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5690 = {};
  return obj5690;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._pr_writer[function() {
        var G__5694 = x__4478__auto__;
        return goog.typeOf(G__5694);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5696 = {};
  return obj5696;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3822__auto__ = d;
    if (and__3822__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4478__auto__ = d == null ? null : d;
    return function() {
      var or__3834__auto__ = cljs.core._realized_QMARK_[function() {
        var G__5700 = x__4478__auto__;
        return goog.typeOf(G__5700);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5702 = {};
  return obj5702;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3822__auto__ = this$;
    if (and__3822__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4478__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3834__auto__ = cljs.core._notify_watches[function() {
        var G__5706 = x__4478__auto__;
        return goog.typeOf(G__5706);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3822__auto__ = this$;
    if (and__3822__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4478__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3834__auto__ = cljs.core._add_watch[function() {
        var G__5710 = x__4478__auto__;
        return goog.typeOf(G__5710);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._add_watch["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3822__auto__ = this$;
    if (and__3822__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4478__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3834__auto__ = cljs.core._remove_watch[function() {
        var G__5714 = x__4478__auto__;
        return goog.typeOf(G__5714);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5716 = {};
  return obj5716;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._as_transient[function() {
        var G__5720 = x__4478__auto__;
        return goog.typeOf(G__5720);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._as_transient["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5722 = {};
  return obj5722;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3822__auto__ = tcoll;
    if (and__3822__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4478__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3834__auto__ = cljs.core._conj_BANG_[function() {
        var G__5726 = x__4478__auto__;
        return goog.typeOf(G__5726);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3822__auto__ = tcoll;
    if (and__3822__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4478__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3834__auto__ = cljs.core._persistent_BANG_[function() {
        var G__5730 = x__4478__auto__;
        return goog.typeOf(G__5730);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5732 = {};
  return obj5732;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3822__auto__ = tcoll;
    if (and__3822__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4478__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3834__auto__ = cljs.core._assoc_BANG_[function() {
        var G__5736 = x__4478__auto__;
        return goog.typeOf(G__5736);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5738 = {};
  return obj5738;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3822__auto__ = tcoll;
    if (and__3822__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4478__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3834__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__5742 = x__4478__auto__;
        return goog.typeOf(G__5742);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5744 = {};
  return obj5744;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3822__auto__ = tcoll;
    if (and__3822__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4478__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3834__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__5748 = x__4478__auto__;
        return goog.typeOf(G__5748);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3822__auto__ = tcoll;
    if (and__3822__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4478__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3834__auto__ = cljs.core._pop_BANG_[function() {
        var G__5752 = x__4478__auto__;
        return goog.typeOf(G__5752);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5754 = {};
  return obj5754;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3822__auto__ = tcoll;
    if (and__3822__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4478__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3834__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__5758 = x__4478__auto__;
        return goog.typeOf(G__5758);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5760 = {};
  return obj5760;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3822__auto__ = x;
    if (and__3822__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4478__auto__ = x == null ? null : x;
    return function() {
      var or__3834__auto__ = cljs.core._compare[function() {
        var G__5764 = x__4478__auto__;
        return goog.typeOf(G__5764);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._compare["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5766 = {};
  return obj5766;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._drop_first[function() {
        var G__5770 = x__4478__auto__;
        return goog.typeOf(G__5770);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._drop_first["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5772 = {};
  return obj5772;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._chunked_first[function() {
        var G__5776 = x__4478__auto__;
        return goog.typeOf(G__5776);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._chunked_rest[function() {
        var G__5780 = x__4478__auto__;
        return goog.typeOf(G__5780);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5782 = {};
  return obj5782;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._chunked_next[function() {
        var G__5786 = x__4478__auto__;
        return goog.typeOf(G__5786);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5788 = {};
  return obj5788;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3822__auto__ = x;
    if (and__3822__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4478__auto__ = x == null ? null : x;
    return function() {
      var or__3834__auto__ = cljs.core._name[function() {
        var G__5792 = x__4478__auto__;
        return goog.typeOf(G__5792);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._name["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3822__auto__ = x;
    if (and__3822__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4478__auto__ = x == null ? null : x;
    return function() {
      var or__3834__auto__ = cljs.core._namespace[function() {
        var G__5796 = x__4478__auto__;
        return goog.typeOf(G__5796);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._namespace["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj5798 = {};
  return obj5798;
}();
cljs.core.IReset = function() {
  var obj5800 = {};
  return obj5800;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._reset_BANG_[function() {
        var G__5804 = x__4478__auto__;
        return goog.typeOf(G__5804);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj5806 = {};
  return obj5806;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3822__auto__ = o;
      if (and__3822__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4478__auto__ = o == null ? null : o;
      return function() {
        var or__3834__auto__ = cljs.core._swap_BANG_[function() {
          var G__5816 = x__4478__auto__;
          return goog.typeOf(G__5816);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3822__auto__ = o;
      if (and__3822__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4478__auto__ = o == null ? null : o;
      return function() {
        var or__3834__auto__ = cljs.core._swap_BANG_[function() {
          var G__5818 = x__4478__auto__;
          return goog.typeOf(G__5818);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3822__auto__ = o;
      if (and__3822__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4478__auto__ = o == null ? null : o;
      return function() {
        var or__3834__auto__ = cljs.core._swap_BANG_[function() {
          var G__5820 = x__4478__auto__;
          return goog.typeOf(G__5820);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3822__auto__ = o;
      if (and__3822__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3822__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4478__auto__ = o == null ? null : o;
      return function() {
        var or__3834__auto__ = cljs.core._swap_BANG_[function() {
          var G__5822 = x__4478__auto__;
          return goog.typeOf(G__5822);
        }()];
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3834__auto____$1) {
            return or__3834__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj5824 = {};
  return obj5824;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3822__auto__ = o;
    if (and__3822__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4478__auto__ = o == null ? null : o;
    return function() {
      var or__3834__auto__ = cljs.core._vreset_BANG_[function() {
        var G__5828 = x__4478__auto__;
        return goog.typeOf(G__5828);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj5830 = {};
  return obj5830;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3822__auto__ = coll;
    if (and__3822__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4478__auto__ = coll == null ? null : coll;
    return function() {
      var or__3834__auto__ = cljs.core._iterator[function() {
        var G__5834 = x__4478__auto__;
        return goog.typeOf(G__5834);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._iterator["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__5837 = 4294967295;
  var G__5838 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5837, G__5838) : Math.imul.call(null, G__5837, G__5838);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__5841 = a;
    var G__5842 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5841, G__5842) : Math.imul.call(null, G__5841, G__5842);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__5843 = i + 2;
        var G__5844 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__5843;
        h1 = G__5844;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj5846 = {};
  return obj5846;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__5847 = i + 1;
          var G__5848 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__5847;
          hash = G__5848;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj5852 = {};
      return obj5852;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__5855 = o;
    if (G__5855) {
      var bit__4508__auto__ = G__5855.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4508__auto__ || G__5855.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__5856 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5856) : Math.floor.call(null, G__5856);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3822__auto__ = cljs.core.not(a.ns);
      if (and__3822__auto__) {
        return b.ns;
      } else {
        return and__3822__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__5863 = a.ns;
            var G__5864 = b.ns;
            return goog.array.defaultCompare(G__5863, G__5864);
          }();
          if (0 === nsc) {
            var G__5865 = a.name;
            var G__5866 = b.name;
            return goog.array.defaultCompare(G__5865, G__5866);
          } else {
            return nsc;
          }
        }
      } else {
        var G__5867 = a.name;
        var G__5868 = b.name;
        return goog.array.defaultCompare(G__5867, G__5868);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4255__auto__ = self__._hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5870 = null;
  var G__5870__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__5870__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__5870 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5870__2.call(this, self__, coll);
      case 3:
        return G__5870__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5870.cljs$core$IFn$_invoke$arity$2 = G__5870__2;
  G__5870.cljs$core$IFn$_invoke$arity$3 = G__5870__3;
  return G__5870;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5869) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5869)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__5918 = null;
  var G__5918__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__5918__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__5918__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__5918__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__5918__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__5918__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__5918__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__5918__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__5918__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__5918__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__5918__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__5918__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__5918__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__5918__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__5918__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__5918__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__5918__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__5918__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__5918__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__5918__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__5918__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__5918__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5874 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__5875 = a;
    var G__5876 = b;
    var G__5877 = c;
    var G__5878 = d;
    var G__5879 = e;
    var G__5880 = f;
    var G__5881 = g;
    var G__5882 = h;
    var G__5883 = i;
    var G__5884 = j;
    var G__5885 = k;
    var G__5886 = l;
    var G__5887 = m;
    var G__5888 = n;
    var G__5889 = o;
    var G__5890 = p;
    var G__5891 = q;
    var G__5892 = r;
    var G__5893 = s;
    var G__5894 = t;
    var G__5895 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5874, G__5875, G__5876, G__5877, G__5878, G__5879, G__5880, G__5881, G__5882, G__5883, G__5884, G__5885, G__5886, G__5887, G__5888, G__5889, G__5890, G__5891, G__5892, G__5893, G__5894, G__5895) : cljs.core.apply.call(null, G__5874, G__5875, G__5876, G__5877, G__5878, G__5879, G__5880, G__5881, G__5882, G__5883, G__5884, G__5885, G__5886, G__5887, G__5888, G__5889, G__5890, G__5891, G__5892, 
    G__5893, G__5894, G__5895);
  };
  G__5918 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__5918__1.call(this, self__);
      case 2:
        return G__5918__2.call(this, self__, a);
      case 3:
        return G__5918__3.call(this, self__, a, b);
      case 4:
        return G__5918__4.call(this, self__, a, b, c);
      case 5:
        return G__5918__5.call(this, self__, a, b, c, d);
      case 6:
        return G__5918__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__5918__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__5918__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__5918__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__5918__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__5918__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__5918__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__5918__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__5918__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__5918__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__5918__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__5918__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__5918__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__5918__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__5918__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__5918__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__5918__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5918.cljs$core$IFn$_invoke$arity$1 = G__5918__1;
  G__5918.cljs$core$IFn$_invoke$arity$2 = G__5918__2;
  G__5918.cljs$core$IFn$_invoke$arity$3 = G__5918__3;
  G__5918.cljs$core$IFn$_invoke$arity$4 = G__5918__4;
  G__5918.cljs$core$IFn$_invoke$arity$5 = G__5918__5;
  G__5918.cljs$core$IFn$_invoke$arity$6 = G__5918__6;
  G__5918.cljs$core$IFn$_invoke$arity$7 = G__5918__7;
  G__5918.cljs$core$IFn$_invoke$arity$8 = G__5918__8;
  G__5918.cljs$core$IFn$_invoke$arity$9 = G__5918__9;
  G__5918.cljs$core$IFn$_invoke$arity$10 = G__5918__10;
  G__5918.cljs$core$IFn$_invoke$arity$11 = G__5918__11;
  G__5918.cljs$core$IFn$_invoke$arity$12 = G__5918__12;
  G__5918.cljs$core$IFn$_invoke$arity$13 = G__5918__13;
  G__5918.cljs$core$IFn$_invoke$arity$14 = G__5918__14;
  G__5918.cljs$core$IFn$_invoke$arity$15 = G__5918__15;
  G__5918.cljs$core$IFn$_invoke$arity$16 = G__5918__16;
  G__5918.cljs$core$IFn$_invoke$arity$17 = G__5918__17;
  G__5918.cljs$core$IFn$_invoke$arity$18 = G__5918__18;
  G__5918.cljs$core$IFn$_invoke$arity$19 = G__5918__19;
  G__5918.cljs$core$IFn$_invoke$arity$20 = G__5918__20;
  G__5918.cljs$core$IFn$_invoke$arity$21 = G__5918__21;
  G__5918.cljs$core$IFn$_invoke$arity$22 = G__5918__22;
  return G__5918;
}();
cljs.core.Var.prototype.apply = function(self__, args5873) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5873)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__5896 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__5897 = a;
  var G__5898 = b;
  var G__5899 = c;
  var G__5900 = d;
  var G__5901 = e;
  var G__5902 = f;
  var G__5903 = g;
  var G__5904 = h;
  var G__5905 = i;
  var G__5906 = j;
  var G__5907 = k;
  var G__5908 = l;
  var G__5909 = m;
  var G__5910 = n;
  var G__5911 = o;
  var G__5912 = p;
  var G__5913 = q;
  var G__5914 = r;
  var G__5915 = s;
  var G__5916 = t;
  var G__5917 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5896, G__5897, G__5898, G__5899, G__5900, G__5901, G__5902, G__5903, G__5904, G__5905, G__5906, G__5907, G__5908, G__5909, G__5910, G__5911, G__5912, G__5913, G__5914, G__5915, G__5916, G__5917) : cljs.core.apply.call(null, G__5896, G__5897, G__5898, G__5899, G__5900, G__5901, G__5902, G__5903, G__5904, G__5905, G__5906, G__5907, G__5908, G__5909, G__5910, G__5911, G__5912, G__5913, G__5914, 
  G__5915, G__5916, G__5917);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__5920 = x;
  if (G__5920) {
    var bit__4515__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3834__auto__ = bit__4515__auto__;
      if (cljs.core.truth_(or__3834__auto__)) {
        return or__3834__auto__;
      } else {
        return G__5920.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__5920.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5920);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5920);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__5922 = value;
  if (G__5922) {
    var bit__4515__auto__ = G__5922.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4515__auto__ || G__5922.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5922.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5922);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5922);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5924 = coll;
      if (G__5924) {
        var bit__4508__auto__ = G__5924.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4508__auto__ || G__5924.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5926 = coll;
      if (G__5926) {
        var bit__4508__auto__ = G__5926.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4508__auto__ || G__5926.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5928 = coll;
      if (G__5928) {
        var bit__4508__auto__ = G__5928.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4508__auto__ || G__5928.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5930 = coll;
      if (G__5930) {
        var bit__4508__auto__ = G__5930.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4508__auto__ || G__5930.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__5935__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__5936 = y;
            var G__5937 = cljs.core.first(more);
            var G__5938 = cljs.core.next(more);
            x = G__5936;
            y = G__5937;
            more = G__5938;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5935 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__5939__i = 0, G__5939__a = new Array(arguments.length - 2);
        while (G__5939__i < G__5939__a.length) {
          G__5939__a[G__5939__i] = arguments[G__5939__i + 2];
          ++G__5939__i;
        }
        more = new cljs.core.IndexedSeq(G__5939__a, 0);
      }
      return G__5935__delegate.call(this, x, y, more);
    };
    G__5935.cljs$lang$maxFixedArity = 2;
    G__5935.cljs$lang$applyTo = function(arglist__5940) {
      var x = cljs.core.first(arglist__5940);
      arglist__5940 = cljs.core.next(arglist__5940);
      var y = cljs.core.first(arglist__5940);
      var more = cljs.core.rest(arglist__5940);
      return G__5935__delegate(x, y, more);
    };
    G__5935.cljs$core$IFn$_invoke$arity$variadic = G__5935__delegate;
    return G__5935;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__5941 = null;
        if (arguments.length > 2) {
          var G__5942__i = 0, G__5942__a = new Array(arguments.length - 2);
          while (G__5942__i < G__5942__a.length) {
            G__5942__a[G__5942__i] = arguments[G__5942__i + 2];
            ++G__5942__i;
          }
          G__5941 = new cljs.core.IndexedSeq(G__5942__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__5941);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__5943 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5943) : cljs.core.es6_iterator_seq.call(null, G__5943);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5944 = n + 1;
      var G__5945 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5946 = cljs.core.next(coll__$1);
      n = G__5944;
      hash_code = G__5945;
      coll__$1 = G__5946;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5947 = n + 1;
      var G__5948 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5949 = cljs.core.next(coll__$1);
      n = G__5947;
      hash_code = G__5948;
      coll__$1 = G__5949;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__5950 = o;
  return goog.getUid(G__5950);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__5952 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5952) : cljs.core.deref.call(null, G__5952);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5959 = val;
            var G__5960 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5959, G__5960) : f.call(null, G__5959, G__5960);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5965 = nval;
            var G__5966 = n + 1;
            val = G__5965;
            n = G__5966;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5961 = val__$1;
          var G__5962 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5961, G__5962) : f.call(null, G__5961, G__5962);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5967 = nval;
          var G__5968 = n + 1;
          val__$1 = G__5967;
          n = G__5968;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5963 = val__$1;
          var G__5964 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5963, G__5964) : f.call(null, G__5963, G__5964);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5969 = nval;
          var G__5970 = n + 1;
          val__$1 = G__5969;
          n = G__5970;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5977 = val;
            var G__5978 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5977, G__5978) : f.call(null, G__5977, G__5978);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5983 = nval;
            var G__5984 = n + 1;
            val = G__5983;
            n = G__5984;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5979 = val__$1;
          var G__5980 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5979, G__5980) : f.call(null, G__5979, G__5980);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5985 = nval;
          var G__5986 = n + 1;
          val__$1 = G__5985;
          n = G__5986;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5981 = val__$1;
          var G__5982 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5981, G__5982) : f.call(null, G__5981, G__5982);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5987 = nval;
          var G__5988 = n + 1;
          val__$1 = G__5987;
          n = G__5988;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5990 = x;
  if (G__5990) {
    var bit__4515__auto__ = G__5990.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4515__auto__ || G__5990.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5990.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5990);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5990);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5992 = x;
  if (G__5992) {
    var bit__4515__auto__ = G__5992.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4515__auto__ || G__5992.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5992.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5992);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5992);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5993 = coll__$1;
  var G__5994 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5993, G__5994) : cljs.core.equiv_sequential.call(null, G__5993, G__5994);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5995 = o;
  var G__5996 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5995, G__5996) : cljs.core.cons.call(null, G__5995, G__5996);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5999 = coll__$1;
  var G__6000 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5999, G__6000) : cljs.core.equiv_sequential.call(null, G__5999, G__6000);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__6001 = cljs.core.List.EMPTY;
  var G__6002 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6001, G__6002) : cljs.core.with_meta.call(null, G__6001, G__6002);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__6003 = f;
  var G__6004 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6003, G__6004) : cljs.core.seq_reduce.call(null, G__6003, G__6004);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__6005 = f;
  var G__6006 = start;
  var G__6007 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6005, G__6006, G__6007) : cljs.core.seq_reduce.call(null, G__6005, G__6006, G__6007);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__6008 = o;
  var G__6009 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6008, G__6009) : cljs.core.cons.call(null, G__6008, G__6009);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__6010 = sn;
      s = G__6010;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__6015__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__6016 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__6017 = cljs.core.first(xs);
          var G__6018 = cljs.core.next(xs);
          coll = G__6016;
          x = G__6017;
          xs = G__6018;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__6015 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__6019__i = 0, G__6019__a = new Array(arguments.length - 2);
        while (G__6019__i < G__6019__a.length) {
          G__6019__a[G__6019__i] = arguments[G__6019__i + 2];
          ++G__6019__i;
        }
        xs = new cljs.core.IndexedSeq(G__6019__a, 0);
      }
      return G__6015__delegate.call(this, coll, x, xs);
    };
    G__6015.cljs$lang$maxFixedArity = 2;
    G__6015.cljs$lang$applyTo = function(arglist__6020) {
      var coll = cljs.core.first(arglist__6020);
      arglist__6020 = cljs.core.next(arglist__6020);
      var x = cljs.core.first(arglist__6020);
      var xs = cljs.core.rest(arglist__6020);
      return G__6015__delegate(coll, x, xs);
    };
    G__6015.cljs$core$IFn$_invoke$arity$variadic = G__6015__delegate;
    return G__6015;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__6021 = null;
        if (arguments.length > 2) {
          var G__6022__i = 0, G__6022__a = new Array(arguments.length - 2);
          while (G__6022__i < G__6022__a.length) {
            G__6022__a[G__6022__i] = arguments[G__6022__i + 2];
            ++G__6022__i;
          }
          G__6021 = new cljs.core.IndexedSeq(G__6022__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__6021);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__6023 = cljs.core.next(s);
      var G__6024 = acc + 1;
      s = G__6023;
      acc = G__6024;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6026 = coll;
      if (G__6026) {
        var bit__4508__auto__ = G__6026.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4508__auto__ || G__6026.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__6027 = cljs.core.next(coll);
              var G__6028 = n - 1;
              coll = G__6027;
              n = G__6028;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__6029 = cljs.core.next(coll);
              var G__6030 = n - 1;
              var G__6031 = not_found;
              coll = G__6029;
              n = G__6030;
              not_found = G__6031;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__6036 = coll;
          if (G__6036) {
            var bit__4508__auto__ = G__6036.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4508__auto__ || G__6036.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__6037 = coll;
                  if (G__6037) {
                    var bit__4515__auto__ = G__6037.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4515__auto__ || G__6037.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6037.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6037);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6037);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__6038 = coll;
          if (G__6038) {
            var bit__4508__auto__ = G__6038.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4508__auto__ || G__6038.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__6039 = coll;
                  if (G__6039) {
                    var bit__4515__auto__ = G__6039.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4515__auto__ || G__6039.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6039.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6039);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6039);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__6040 = n__$1 - 1;
      var G__6041 = cljs.core.rest(xs);
      n__$1 = G__6040;
      xs = G__6041;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__6044 = o;
        if (G__6044) {
          var bit__4508__auto__ = G__6044.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4508__auto__ || G__6044.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__6045 = o;
        if (G__6045) {
          var bit__4508__auto__ = G__6045.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4508__auto__ || G__6045.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__6049__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__6050 = ret;
          var G__6051 = cljs.core.first(kvs);
          var G__6052 = cljs.core.second(kvs);
          var G__6053 = cljs.core.nnext(kvs);
          coll = G__6050;
          k = G__6051;
          v = G__6052;
          kvs = G__6053;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__6049 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__6054__i = 0, G__6054__a = new Array(arguments.length - 3);
        while (G__6054__i < G__6054__a.length) {
          G__6054__a[G__6054__i] = arguments[G__6054__i + 3];
          ++G__6054__i;
        }
        kvs = new cljs.core.IndexedSeq(G__6054__a, 0);
      }
      return G__6049__delegate.call(this, coll, k, v, kvs);
    };
    G__6049.cljs$lang$maxFixedArity = 3;
    G__6049.cljs$lang$applyTo = function(arglist__6055) {
      var coll = cljs.core.first(arglist__6055);
      arglist__6055 = cljs.core.next(arglist__6055);
      var k = cljs.core.first(arglist__6055);
      arglist__6055 = cljs.core.next(arglist__6055);
      var v = cljs.core.first(arglist__6055);
      var kvs = cljs.core.rest(arglist__6055);
      return G__6049__delegate(coll, k, v, kvs);
    };
    G__6049.cljs$core$IFn$_invoke$arity$variadic = G__6049__delegate;
    return G__6049;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__6056 = null;
        if (arguments.length > 3) {
          var G__6057__i = 0, G__6057__a = new Array(arguments.length - 3);
          while (G__6057__i < G__6057__a.length) {
            G__6057__a[G__6057__i] = arguments[G__6057__i + 3];
            ++G__6057__i;
          }
          G__6056 = new cljs.core.IndexedSeq(G__6057__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__6056);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__6060__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6061 = ret;
            var G__6062 = cljs.core.first(ks);
            var G__6063 = cljs.core.next(ks);
            coll = G__6061;
            k = G__6062;
            ks = G__6063;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6060 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6064__i = 0, G__6064__a = new Array(arguments.length - 2);
        while (G__6064__i < G__6064__a.length) {
          G__6064__a[G__6064__i] = arguments[G__6064__i + 2];
          ++G__6064__i;
        }
        ks = new cljs.core.IndexedSeq(G__6064__a, 0);
      }
      return G__6060__delegate.call(this, coll, k, ks);
    };
    G__6060.cljs$lang$maxFixedArity = 2;
    G__6060.cljs$lang$applyTo = function(arglist__6065) {
      var coll = cljs.core.first(arglist__6065);
      arglist__6065 = cljs.core.next(arglist__6065);
      var k = cljs.core.first(arglist__6065);
      var ks = cljs.core.rest(arglist__6065);
      return G__6060__delegate(coll, k, ks);
    };
    G__6060.cljs$core$IFn$_invoke$arity$variadic = G__6060__delegate;
    return G__6060;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__6066 = null;
        if (arguments.length > 2) {
          var G__6067__i = 0, G__6067__a = new Array(arguments.length - 2);
          while (G__6067__i < G__6067__a.length) {
            G__6067__a[G__6067__i] = arguments[G__6067__i + 2];
            ++G__6067__i;
          }
          G__6066 = new cljs.core.IndexedSeq(G__6067__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__6066);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3834__auto__ = function() {
    var G__6072 = f;
    return goog.isFunction(G__6072);
  }();
  if (cljs.core.truth_(or__3834__auto__)) {
    return or__3834__auto__;
  } else {
    var G__6073 = f;
    if (G__6073) {
      var bit__4515__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3834__auto____$1 = bit__4515__auto__;
        if (cljs.core.truth_(or__3834__auto____$1)) {
          return or__3834__auto____$1;
        } else {
          return G__6073.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__6073.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__6073);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__6073);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__6539 = null;
  var G__6539__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6539__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6075 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6075) : self__.afn.call(null, G__6075);
  };
  var G__6539__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6076 = a;
    var G__6077 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6076, G__6077) : self__.afn.call(null, G__6076, G__6077);
  };
  var G__6539__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6078 = a;
    var G__6079 = b;
    var G__6080 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6078, G__6079, G__6080) : self__.afn.call(null, G__6078, G__6079, G__6080);
  };
  var G__6539__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6081 = a;
    var G__6082 = b;
    var G__6083 = c;
    var G__6084 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6081, G__6082, G__6083, G__6084) : self__.afn.call(null, G__6081, G__6082, G__6083, G__6084);
  };
  var G__6539__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6085 = a;
    var G__6086 = b;
    var G__6087 = c;
    var G__6088 = d;
    var G__6089 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6085, G__6086, G__6087, G__6088, G__6089) : self__.afn.call(null, G__6085, G__6086, G__6087, G__6088, G__6089);
  };
  var G__6539__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6090 = a;
    var G__6091 = b;
    var G__6092 = c;
    var G__6093 = d;
    var G__6094 = e;
    var G__6095 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6090, G__6091, G__6092, G__6093, G__6094, G__6095) : self__.afn.call(null, G__6090, G__6091, G__6092, G__6093, G__6094, G__6095);
  };
  var G__6539__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6096 = a;
    var G__6097 = b;
    var G__6098 = c;
    var G__6099 = d;
    var G__6100 = e;
    var G__6101 = f;
    var G__6102 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6096, G__6097, G__6098, G__6099, G__6100, G__6101, G__6102) : self__.afn.call(null, G__6096, G__6097, G__6098, G__6099, G__6100, G__6101, G__6102);
  };
  var G__6539__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6103 = a;
    var G__6104 = b;
    var G__6105 = c;
    var G__6106 = d;
    var G__6107 = e;
    var G__6108 = f;
    var G__6109 = g;
    var G__6110 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6103, G__6104, G__6105, G__6106, G__6107, G__6108, G__6109, G__6110) : self__.afn.call(null, G__6103, G__6104, G__6105, G__6106, G__6107, G__6108, G__6109, G__6110);
  };
  var G__6539__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6111 = a;
    var G__6112 = b;
    var G__6113 = c;
    var G__6114 = d;
    var G__6115 = e;
    var G__6116 = f;
    var G__6117 = g;
    var G__6118 = h;
    var G__6119 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6111, G__6112, G__6113, G__6114, G__6115, G__6116, G__6117, G__6118, G__6119) : self__.afn.call(null, G__6111, G__6112, G__6113, G__6114, G__6115, G__6116, G__6117, G__6118, G__6119);
  };
  var G__6539__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6120 = a;
    var G__6121 = b;
    var G__6122 = c;
    var G__6123 = d;
    var G__6124 = e;
    var G__6125 = f;
    var G__6126 = g;
    var G__6127 = h;
    var G__6128 = i;
    var G__6129 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6120, G__6121, G__6122, G__6123, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129) : self__.afn.call(null, G__6120, G__6121, G__6122, G__6123, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129);
  };
  var G__6539__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6130 = a;
    var G__6131 = b;
    var G__6132 = c;
    var G__6133 = d;
    var G__6134 = e;
    var G__6135 = f;
    var G__6136 = g;
    var G__6137 = h;
    var G__6138 = i;
    var G__6139 = j;
    var G__6140 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6130, G__6131, G__6132, G__6133, G__6134, G__6135, G__6136, G__6137, G__6138, G__6139, G__6140) : self__.afn.call(null, G__6130, G__6131, G__6132, G__6133, G__6134, G__6135, G__6136, G__6137, G__6138, G__6139, G__6140);
  };
  var G__6539__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6141 = a;
    var G__6142 = b;
    var G__6143 = c;
    var G__6144 = d;
    var G__6145 = e;
    var G__6146 = f;
    var G__6147 = g;
    var G__6148 = h;
    var G__6149 = i;
    var G__6150 = j;
    var G__6151 = k;
    var G__6152 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6141, G__6142, G__6143, G__6144, G__6145, G__6146, G__6147, G__6148, G__6149, G__6150, G__6151, G__6152) : self__.afn.call(null, G__6141, G__6142, G__6143, G__6144, G__6145, G__6146, G__6147, G__6148, G__6149, G__6150, G__6151, G__6152);
  };
  var G__6539__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6153 = a;
    var G__6154 = b;
    var G__6155 = c;
    var G__6156 = d;
    var G__6157 = e;
    var G__6158 = f;
    var G__6159 = g;
    var G__6160 = h;
    var G__6161 = i;
    var G__6162 = j;
    var G__6163 = k;
    var G__6164 = l;
    var G__6165 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6153, G__6154, G__6155, G__6156, G__6157, G__6158, G__6159, G__6160, G__6161, G__6162, G__6163, G__6164, G__6165) : self__.afn.call(null, G__6153, G__6154, G__6155, G__6156, G__6157, G__6158, G__6159, G__6160, G__6161, G__6162, G__6163, G__6164, G__6165);
  };
  var G__6539__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6166 = a;
    var G__6167 = b;
    var G__6168 = c;
    var G__6169 = d;
    var G__6170 = e;
    var G__6171 = f;
    var G__6172 = g;
    var G__6173 = h;
    var G__6174 = i;
    var G__6175 = j;
    var G__6176 = k;
    var G__6177 = l;
    var G__6178 = m;
    var G__6179 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6166, G__6167, G__6168, G__6169, G__6170, G__6171, G__6172, G__6173, G__6174, G__6175, G__6176, G__6177, G__6178, G__6179) : self__.afn.call(null, G__6166, G__6167, G__6168, G__6169, G__6170, G__6171, G__6172, G__6173, G__6174, G__6175, G__6176, G__6177, G__6178, G__6179);
  };
  var G__6539__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6180 = a;
    var G__6181 = b;
    var G__6182 = c;
    var G__6183 = d;
    var G__6184 = e;
    var G__6185 = f;
    var G__6186 = g;
    var G__6187 = h;
    var G__6188 = i;
    var G__6189 = j;
    var G__6190 = k;
    var G__6191 = l;
    var G__6192 = m;
    var G__6193 = n;
    var G__6194 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6180, G__6181, G__6182, G__6183, G__6184, G__6185, G__6186, G__6187, G__6188, G__6189, G__6190, G__6191, G__6192, G__6193, G__6194) : self__.afn.call(null, G__6180, G__6181, G__6182, G__6183, G__6184, G__6185, G__6186, G__6187, G__6188, G__6189, G__6190, G__6191, G__6192, G__6193, G__6194);
  };
  var G__6539__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6195 = a;
    var G__6196 = b;
    var G__6197 = c;
    var G__6198 = d;
    var G__6199 = e;
    var G__6200 = f;
    var G__6201 = g;
    var G__6202 = h;
    var G__6203 = i;
    var G__6204 = j;
    var G__6205 = k;
    var G__6206 = l;
    var G__6207 = m;
    var G__6208 = n;
    var G__6209 = o;
    var G__6210 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6195, G__6196, G__6197, G__6198, G__6199, G__6200, G__6201, G__6202, G__6203, G__6204, G__6205, G__6206, G__6207, G__6208, G__6209, G__6210) : self__.afn.call(null, G__6195, G__6196, G__6197, G__6198, G__6199, G__6200, G__6201, G__6202, G__6203, G__6204, G__6205, G__6206, G__6207, G__6208, G__6209, G__6210);
  };
  var G__6539__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6211 = a;
    var G__6212 = b;
    var G__6213 = c;
    var G__6214 = d;
    var G__6215 = e;
    var G__6216 = f;
    var G__6217 = g;
    var G__6218 = h;
    var G__6219 = i;
    var G__6220 = j;
    var G__6221 = k;
    var G__6222 = l;
    var G__6223 = m;
    var G__6224 = n;
    var G__6225 = o;
    var G__6226 = p;
    var G__6227 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6211, G__6212, G__6213, G__6214, G__6215, G__6216, G__6217, G__6218, G__6219, G__6220, G__6221, G__6222, G__6223, G__6224, G__6225, G__6226, G__6227) : self__.afn.call(null, G__6211, G__6212, G__6213, G__6214, G__6215, G__6216, G__6217, G__6218, G__6219, G__6220, G__6221, G__6222, G__6223, G__6224, G__6225, G__6226, G__6227);
  };
  var G__6539__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6228 = a;
    var G__6229 = b;
    var G__6230 = c;
    var G__6231 = d;
    var G__6232 = e;
    var G__6233 = f;
    var G__6234 = g;
    var G__6235 = h;
    var G__6236 = i;
    var G__6237 = j;
    var G__6238 = k;
    var G__6239 = l;
    var G__6240 = m;
    var G__6241 = n;
    var G__6242 = o;
    var G__6243 = p;
    var G__6244 = q;
    var G__6245 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6228, G__6229, G__6230, G__6231, G__6232, G__6233, G__6234, G__6235, G__6236, G__6237, G__6238, G__6239, G__6240, G__6241, G__6242, G__6243, G__6244, G__6245) : self__.afn.call(null, G__6228, G__6229, G__6230, G__6231, G__6232, G__6233, G__6234, G__6235, G__6236, G__6237, G__6238, G__6239, G__6240, G__6241, G__6242, G__6243, G__6244, G__6245);
  };
  var G__6539__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6246 = a;
    var G__6247 = b;
    var G__6248 = c;
    var G__6249 = d;
    var G__6250 = e;
    var G__6251 = f;
    var G__6252 = g;
    var G__6253 = h;
    var G__6254 = i;
    var G__6255 = j;
    var G__6256 = k;
    var G__6257 = l;
    var G__6258 = m;
    var G__6259 = n;
    var G__6260 = o;
    var G__6261 = p;
    var G__6262 = q;
    var G__6263 = r;
    var G__6264 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6246, G__6247, G__6248, G__6249, G__6250, G__6251, G__6252, G__6253, G__6254, G__6255, G__6256, G__6257, G__6258, G__6259, G__6260, G__6261, G__6262, G__6263, G__6264) : self__.afn.call(null, G__6246, G__6247, G__6248, G__6249, G__6250, G__6251, G__6252, G__6253, G__6254, G__6255, G__6256, G__6257, G__6258, G__6259, G__6260, G__6261, G__6262, G__6263, G__6264);
  };
  var G__6539__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6265 = a;
    var G__6266 = b;
    var G__6267 = c;
    var G__6268 = d;
    var G__6269 = e;
    var G__6270 = f;
    var G__6271 = g;
    var G__6272 = h;
    var G__6273 = i;
    var G__6274 = j;
    var G__6275 = k;
    var G__6276 = l;
    var G__6277 = m;
    var G__6278 = n;
    var G__6279 = o;
    var G__6280 = p;
    var G__6281 = q;
    var G__6282 = r;
    var G__6283 = s;
    var G__6284 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6265, G__6266, G__6267, G__6268, G__6269, G__6270, G__6271, G__6272, G__6273, G__6274, G__6275, G__6276, G__6277, G__6278, G__6279, G__6280, G__6281, G__6282, G__6283, G__6284) : self__.afn.call(null, G__6265, G__6266, G__6267, G__6268, G__6269, G__6270, G__6271, G__6272, G__6273, G__6274, G__6275, G__6276, G__6277, G__6278, G__6279, G__6280, G__6281, G__6282, G__6283, G__6284);
  };
  var G__6539__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6285 = self__.afn;
    var G__6286 = a;
    var G__6287 = b;
    var G__6288 = c;
    var G__6289 = d;
    var G__6290 = e;
    var G__6291 = f;
    var G__6292 = g;
    var G__6293 = h;
    var G__6294 = i;
    var G__6295 = j;
    var G__6296 = k;
    var G__6297 = l;
    var G__6298 = m;
    var G__6299 = n;
    var G__6300 = o;
    var G__6301 = p;
    var G__6302 = q;
    var G__6303 = r;
    var G__6304 = s;
    var G__6305 = t;
    var G__6306 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6285, G__6286, G__6287, G__6288, G__6289, G__6290, G__6291, G__6292, G__6293, G__6294, G__6295, G__6296, G__6297, G__6298, G__6299, G__6300, G__6301, G__6302, G__6303, G__6304, G__6305, G__6306) : cljs.core.apply.call(null, G__6285, G__6286, G__6287, G__6288, G__6289, G__6290, G__6291, G__6292, G__6293, G__6294, G__6295, G__6296, G__6297, G__6298, G__6299, G__6300, G__6301, G__6302, G__6303, 
    G__6304, G__6305, G__6306);
  };
  G__6539 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6539__1.call(this, self__);
      case 2:
        return G__6539__2.call(this, self__, a);
      case 3:
        return G__6539__3.call(this, self__, a, b);
      case 4:
        return G__6539__4.call(this, self__, a, b, c);
      case 5:
        return G__6539__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6539__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6539__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6539__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6539__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6539__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6539__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6539__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6539__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6539__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6539__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6539__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6539__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6539__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6539__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6539__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6539__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6539__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6539.cljs$core$IFn$_invoke$arity$1 = G__6539__1;
  G__6539.cljs$core$IFn$_invoke$arity$2 = G__6539__2;
  G__6539.cljs$core$IFn$_invoke$arity$3 = G__6539__3;
  G__6539.cljs$core$IFn$_invoke$arity$4 = G__6539__4;
  G__6539.cljs$core$IFn$_invoke$arity$5 = G__6539__5;
  G__6539.cljs$core$IFn$_invoke$arity$6 = G__6539__6;
  G__6539.cljs$core$IFn$_invoke$arity$7 = G__6539__7;
  G__6539.cljs$core$IFn$_invoke$arity$8 = G__6539__8;
  G__6539.cljs$core$IFn$_invoke$arity$9 = G__6539__9;
  G__6539.cljs$core$IFn$_invoke$arity$10 = G__6539__10;
  G__6539.cljs$core$IFn$_invoke$arity$11 = G__6539__11;
  G__6539.cljs$core$IFn$_invoke$arity$12 = G__6539__12;
  G__6539.cljs$core$IFn$_invoke$arity$13 = G__6539__13;
  G__6539.cljs$core$IFn$_invoke$arity$14 = G__6539__14;
  G__6539.cljs$core$IFn$_invoke$arity$15 = G__6539__15;
  G__6539.cljs$core$IFn$_invoke$arity$16 = G__6539__16;
  G__6539.cljs$core$IFn$_invoke$arity$17 = G__6539__17;
  G__6539.cljs$core$IFn$_invoke$arity$18 = G__6539__18;
  G__6539.cljs$core$IFn$_invoke$arity$19 = G__6539__19;
  G__6539.cljs$core$IFn$_invoke$arity$20 = G__6539__20;
  G__6539.cljs$core$IFn$_invoke$arity$21 = G__6539__21;
  G__6539.cljs$core$IFn$_invoke$arity$22 = G__6539__22;
  return G__6539;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6074) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6074)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__6307 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6307) : self__.afn.call(null, G__6307);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__6308 = a;
  var G__6309 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6308, G__6309) : self__.afn.call(null, G__6308, G__6309);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__6310 = a;
  var G__6311 = b;
  var G__6312 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6310, G__6311, G__6312) : self__.afn.call(null, G__6310, G__6311, G__6312);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__6313 = a;
  var G__6314 = b;
  var G__6315 = c;
  var G__6316 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6313, G__6314, G__6315, G__6316) : self__.afn.call(null, G__6313, G__6314, G__6315, G__6316);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__6317 = a;
  var G__6318 = b;
  var G__6319 = c;
  var G__6320 = d;
  var G__6321 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6317, G__6318, G__6319, G__6320, G__6321) : self__.afn.call(null, G__6317, G__6318, G__6319, G__6320, G__6321);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__6322 = a;
  var G__6323 = b;
  var G__6324 = c;
  var G__6325 = d;
  var G__6326 = e;
  var G__6327 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6322, G__6323, G__6324, G__6325, G__6326, G__6327) : self__.afn.call(null, G__6322, G__6323, G__6324, G__6325, G__6326, G__6327);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__6328 = a;
  var G__6329 = b;
  var G__6330 = c;
  var G__6331 = d;
  var G__6332 = e;
  var G__6333 = f;
  var G__6334 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6328, G__6329, G__6330, G__6331, G__6332, G__6333, G__6334) : self__.afn.call(null, G__6328, G__6329, G__6330, G__6331, G__6332, G__6333, G__6334);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__6335 = a;
  var G__6336 = b;
  var G__6337 = c;
  var G__6338 = d;
  var G__6339 = e;
  var G__6340 = f;
  var G__6341 = g;
  var G__6342 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6335, G__6336, G__6337, G__6338, G__6339, G__6340, G__6341, G__6342) : self__.afn.call(null, G__6335, G__6336, G__6337, G__6338, G__6339, G__6340, G__6341, G__6342);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__6343 = a;
  var G__6344 = b;
  var G__6345 = c;
  var G__6346 = d;
  var G__6347 = e;
  var G__6348 = f;
  var G__6349 = g;
  var G__6350 = h;
  var G__6351 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6343, G__6344, G__6345, G__6346, G__6347, G__6348, G__6349, G__6350, G__6351) : self__.afn.call(null, G__6343, G__6344, G__6345, G__6346, G__6347, G__6348, G__6349, G__6350, G__6351);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__6352 = a;
  var G__6353 = b;
  var G__6354 = c;
  var G__6355 = d;
  var G__6356 = e;
  var G__6357 = f;
  var G__6358 = g;
  var G__6359 = h;
  var G__6360 = i;
  var G__6361 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6352, G__6353, G__6354, G__6355, G__6356, G__6357, G__6358, G__6359, G__6360, G__6361) : self__.afn.call(null, G__6352, G__6353, G__6354, G__6355, G__6356, G__6357, G__6358, G__6359, G__6360, G__6361);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__6362 = a;
  var G__6363 = b;
  var G__6364 = c;
  var G__6365 = d;
  var G__6366 = e;
  var G__6367 = f;
  var G__6368 = g;
  var G__6369 = h;
  var G__6370 = i;
  var G__6371 = j;
  var G__6372 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6362, G__6363, G__6364, G__6365, G__6366, G__6367, G__6368, G__6369, G__6370, G__6371, G__6372) : self__.afn.call(null, G__6362, G__6363, G__6364, G__6365, G__6366, G__6367, G__6368, G__6369, G__6370, G__6371, G__6372);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__6373 = a;
  var G__6374 = b;
  var G__6375 = c;
  var G__6376 = d;
  var G__6377 = e;
  var G__6378 = f;
  var G__6379 = g;
  var G__6380 = h;
  var G__6381 = i;
  var G__6382 = j;
  var G__6383 = k;
  var G__6384 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6373, G__6374, G__6375, G__6376, G__6377, G__6378, G__6379, G__6380, G__6381, G__6382, G__6383, G__6384) : self__.afn.call(null, G__6373, G__6374, G__6375, G__6376, G__6377, G__6378, G__6379, G__6380, G__6381, G__6382, G__6383, G__6384);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__6385 = a;
  var G__6386 = b;
  var G__6387 = c;
  var G__6388 = d;
  var G__6389 = e;
  var G__6390 = f;
  var G__6391 = g;
  var G__6392 = h;
  var G__6393 = i;
  var G__6394 = j;
  var G__6395 = k;
  var G__6396 = l;
  var G__6397 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6385, G__6386, G__6387, G__6388, G__6389, G__6390, G__6391, G__6392, G__6393, G__6394, G__6395, G__6396, G__6397) : self__.afn.call(null, G__6385, G__6386, G__6387, G__6388, G__6389, G__6390, G__6391, G__6392, G__6393, G__6394, G__6395, G__6396, G__6397);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__6398 = a;
  var G__6399 = b;
  var G__6400 = c;
  var G__6401 = d;
  var G__6402 = e;
  var G__6403 = f;
  var G__6404 = g;
  var G__6405 = h;
  var G__6406 = i;
  var G__6407 = j;
  var G__6408 = k;
  var G__6409 = l;
  var G__6410 = m;
  var G__6411 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6398, G__6399, G__6400, G__6401, G__6402, G__6403, G__6404, G__6405, G__6406, G__6407, G__6408, G__6409, G__6410, G__6411) : self__.afn.call(null, G__6398, G__6399, G__6400, G__6401, G__6402, G__6403, G__6404, G__6405, G__6406, G__6407, G__6408, G__6409, G__6410, G__6411);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__6412 = a;
  var G__6413 = b;
  var G__6414 = c;
  var G__6415 = d;
  var G__6416 = e;
  var G__6417 = f;
  var G__6418 = g;
  var G__6419 = h;
  var G__6420 = i;
  var G__6421 = j;
  var G__6422 = k;
  var G__6423 = l;
  var G__6424 = m;
  var G__6425 = n;
  var G__6426 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6412, G__6413, G__6414, G__6415, G__6416, G__6417, G__6418, G__6419, G__6420, G__6421, G__6422, G__6423, G__6424, G__6425, G__6426) : self__.afn.call(null, G__6412, G__6413, G__6414, G__6415, G__6416, G__6417, G__6418, G__6419, G__6420, G__6421, G__6422, G__6423, G__6424, G__6425, G__6426);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__6427 = a;
  var G__6428 = b;
  var G__6429 = c;
  var G__6430 = d;
  var G__6431 = e;
  var G__6432 = f;
  var G__6433 = g;
  var G__6434 = h;
  var G__6435 = i;
  var G__6436 = j;
  var G__6437 = k;
  var G__6438 = l;
  var G__6439 = m;
  var G__6440 = n;
  var G__6441 = o;
  var G__6442 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6427, G__6428, G__6429, G__6430, G__6431, G__6432, G__6433, G__6434, G__6435, G__6436, G__6437, G__6438, G__6439, G__6440, G__6441, G__6442) : self__.afn.call(null, G__6427, G__6428, G__6429, G__6430, G__6431, G__6432, G__6433, G__6434, G__6435, G__6436, G__6437, G__6438, G__6439, G__6440, G__6441, G__6442);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__6443 = a;
  var G__6444 = b;
  var G__6445 = c;
  var G__6446 = d;
  var G__6447 = e;
  var G__6448 = f;
  var G__6449 = g;
  var G__6450 = h;
  var G__6451 = i;
  var G__6452 = j;
  var G__6453 = k;
  var G__6454 = l;
  var G__6455 = m;
  var G__6456 = n;
  var G__6457 = o;
  var G__6458 = p;
  var G__6459 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6443, G__6444, G__6445, G__6446, G__6447, G__6448, G__6449, G__6450, G__6451, G__6452, G__6453, G__6454, G__6455, G__6456, G__6457, G__6458, G__6459) : self__.afn.call(null, G__6443, G__6444, G__6445, G__6446, G__6447, G__6448, G__6449, G__6450, G__6451, G__6452, G__6453, G__6454, G__6455, G__6456, G__6457, G__6458, G__6459);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__6460 = a;
  var G__6461 = b;
  var G__6462 = c;
  var G__6463 = d;
  var G__6464 = e;
  var G__6465 = f;
  var G__6466 = g;
  var G__6467 = h;
  var G__6468 = i;
  var G__6469 = j;
  var G__6470 = k;
  var G__6471 = l;
  var G__6472 = m;
  var G__6473 = n;
  var G__6474 = o;
  var G__6475 = p;
  var G__6476 = q;
  var G__6477 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6460, G__6461, G__6462, G__6463, G__6464, G__6465, G__6466, G__6467, G__6468, G__6469, G__6470, G__6471, G__6472, G__6473, G__6474, G__6475, G__6476, G__6477) : self__.afn.call(null, G__6460, G__6461, G__6462, G__6463, G__6464, G__6465, G__6466, G__6467, G__6468, G__6469, G__6470, G__6471, G__6472, G__6473, G__6474, G__6475, G__6476, G__6477);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__6478 = a;
  var G__6479 = b;
  var G__6480 = c;
  var G__6481 = d;
  var G__6482 = e;
  var G__6483 = f;
  var G__6484 = g;
  var G__6485 = h;
  var G__6486 = i;
  var G__6487 = j;
  var G__6488 = k;
  var G__6489 = l;
  var G__6490 = m;
  var G__6491 = n;
  var G__6492 = o;
  var G__6493 = p;
  var G__6494 = q;
  var G__6495 = r;
  var G__6496 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6478, G__6479, G__6480, G__6481, G__6482, G__6483, G__6484, G__6485, G__6486, G__6487, G__6488, G__6489, G__6490, G__6491, G__6492, G__6493, G__6494, G__6495, G__6496) : self__.afn.call(null, G__6478, G__6479, G__6480, G__6481, G__6482, G__6483, G__6484, G__6485, G__6486, G__6487, G__6488, G__6489, G__6490, G__6491, G__6492, G__6493, G__6494, G__6495, G__6496);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__6497 = a;
  var G__6498 = b;
  var G__6499 = c;
  var G__6500 = d;
  var G__6501 = e;
  var G__6502 = f;
  var G__6503 = g;
  var G__6504 = h;
  var G__6505 = i;
  var G__6506 = j;
  var G__6507 = k;
  var G__6508 = l;
  var G__6509 = m;
  var G__6510 = n;
  var G__6511 = o;
  var G__6512 = p;
  var G__6513 = q;
  var G__6514 = r;
  var G__6515 = s;
  var G__6516 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6497, G__6498, G__6499, G__6500, G__6501, G__6502, G__6503, G__6504, G__6505, G__6506, G__6507, G__6508, G__6509, G__6510, G__6511, G__6512, G__6513, G__6514, G__6515, G__6516) : self__.afn.call(null, G__6497, G__6498, G__6499, G__6500, G__6501, G__6502, G__6503, G__6504, G__6505, G__6506, G__6507, G__6508, G__6509, G__6510, G__6511, G__6512, G__6513, G__6514, G__6515, G__6516);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6517 = self__.afn;
  var G__6518 = a;
  var G__6519 = b;
  var G__6520 = c;
  var G__6521 = d;
  var G__6522 = e;
  var G__6523 = f;
  var G__6524 = g;
  var G__6525 = h;
  var G__6526 = i;
  var G__6527 = j;
  var G__6528 = k;
  var G__6529 = l;
  var G__6530 = m;
  var G__6531 = n;
  var G__6532 = o;
  var G__6533 = p;
  var G__6534 = q;
  var G__6535 = r;
  var G__6536 = s;
  var G__6537 = t;
  var G__6538 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6517, G__6518, G__6519, G__6520, G__6521, G__6522, G__6523, G__6524, G__6525, G__6526, G__6527, G__6528, G__6529, G__6530, G__6531, G__6532, G__6533, G__6534, G__6535, G__6536, G__6537, G__6538) : cljs.core.apply.call(null, G__6517, G__6518, G__6519, G__6520, G__6521, G__6522, G__6523, G__6524, G__6525, G__6526, G__6527, G__6528, G__6529, G__6530, G__6531, G__6532, G__6533, G__6534, G__6535, 
  G__6536, G__6537, G__6538);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__6543 = o;
    if (G__6543) {
      var bit__4515__auto__ = G__6543.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4515__auto__ || G__6543.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6543.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6543);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6543);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3822__auto__ = !(o == null);
    if (and__3822__auto__) {
      var G__6547 = o;
      if (G__6547) {
        var bit__4515__auto__ = G__6547.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4515__auto__ || G__6547.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6547.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6547);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6547);
      }
    } else {
      return and__3822__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__6550__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6551 = ret;
            var G__6552 = cljs.core.first(ks);
            var G__6553 = cljs.core.next(ks);
            coll = G__6551;
            k = G__6552;
            ks = G__6553;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6550 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6554__i = 0, G__6554__a = new Array(arguments.length - 2);
        while (G__6554__i < G__6554__a.length) {
          G__6554__a[G__6554__i] = arguments[G__6554__i + 2];
          ++G__6554__i;
        }
        ks = new cljs.core.IndexedSeq(G__6554__a, 0);
      }
      return G__6550__delegate.call(this, coll, k, ks);
    };
    G__6550.cljs$lang$maxFixedArity = 2;
    G__6550.cljs$lang$applyTo = function(arglist__6555) {
      var coll = cljs.core.first(arglist__6555);
      arglist__6555 = cljs.core.next(arglist__6555);
      var k = cljs.core.first(arglist__6555);
      var ks = cljs.core.rest(arglist__6555);
      return G__6550__delegate(coll, k, ks);
    };
    G__6550.cljs$core$IFn$_invoke$arity$variadic = G__6550__delegate;
    return G__6550;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__6556 = null;
        if (arguments.length > 2) {
          var G__6557__i = 0, G__6557__a = new Array(arguments.length - 2);
          while (G__6557__i < G__6557__a.length) {
            G__6557__a[G__6557__i] = arguments[G__6557__i + 2];
            ++G__6557__i;
          }
          G__6556 = new cljs.core.IndexedSeq(G__6557__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__6556);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6559 = x;
    if (G__6559) {
      var bit__4515__auto__ = G__6559.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4515__auto__ || G__6559.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6559.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6559);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6559);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6561 = x;
    if (G__6561) {
      var bit__4515__auto__ = G__6561.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4515__auto__ || G__6561.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6561.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6561);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6561);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6563 = x;
  if (G__6563) {
    var bit__4515__auto__ = G__6563.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4515__auto__ || G__6563.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6563.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6563);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6563);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6565 = x;
  if (G__6565) {
    var bit__4515__auto__ = G__6565.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4515__auto__ || G__6565.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6565.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6565);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6565);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__6567 = x;
  if (G__6567) {
    var bit__4515__auto__ = G__6567.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4515__auto__ || G__6567.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6567.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6567);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6567);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6569 = x;
  if (G__6569) {
    var bit__4515__auto__ = G__6569.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4515__auto__ || G__6569.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6569.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6569);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6569);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6571 = x;
    if (G__6571) {
      var bit__4515__auto__ = G__6571.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4515__auto__ || G__6571.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6571.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6571);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6571);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6573 = x;
  if (G__6573) {
    var bit__4515__auto__ = G__6573.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4515__auto__ || G__6573.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6573.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6573);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6573);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__6575 = x;
  if (G__6575) {
    var bit__4508__auto__ = G__6575.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4508__auto__ || G__6575.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj6581 = {};
    return obj6581;
  };
  var js_obj__1 = function() {
    var G__6584__delegate = function(keyvals) {
      var G__6582 = goog.object.create;
      var G__6583 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6582, G__6583) : cljs.core.apply.call(null, G__6582, G__6583);
    };
    var G__6584 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__6585__i = 0, G__6585__a = new Array(arguments.length - 0);
        while (G__6585__i < G__6585__a.length) {
          G__6585__a[G__6585__i] = arguments[G__6585__i + 0];
          ++G__6585__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__6585__a, 0);
      }
      return G__6584__delegate.call(this, keyvals);
    };
    G__6584.cljs$lang$maxFixedArity = 0;
    G__6584.cljs$lang$applyTo = function(arglist__6586) {
      var keyvals = cljs.core.seq(arglist__6586);
      return G__6584__delegate(keyvals);
    };
    G__6584.cljs$core$IFn$_invoke$arity$variadic = G__6584__delegate;
    return G__6584;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__6587 = null;
        if (arguments.length > 0) {
          var G__6588__i = 0, G__6588__a = new Array(arguments.length - 0);
          while (G__6588__i < G__6588__a.length) {
            G__6588__a[G__6588__i] = arguments[G__6588__i + 0];
            ++G__6588__i;
          }
          G__6587 = new cljs.core.IndexedSeq(G__6588__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6587);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__6591_6593 = obj;
  var G__6592_6594 = function(G__6591_6593, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__6591_6593, keys);
  goog.object.forEach(G__6591_6593, G__6592_6594);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6595 = i__$1 + 1;
      var G__6596 = j__$1 + 1;
      var G__6597 = len__$1 - 1;
      i__$1 = G__6595;
      j__$1 = G__6596;
      len__$1 = G__6597;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6598 = i__$1 - 1;
      var G__6599 = j__$1 - 1;
      var G__6600 = len__$1 - 1;
      i__$1 = G__6598;
      j__$1 = G__6599;
      len__$1 = G__6600;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6602 = {};
  return obj6602;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6604 = s;
    if (G__6604) {
      var bit__4515__auto__ = G__6604.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4515__auto__ || G__6604.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6604.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6604);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6604);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6606 = s;
  if (G__6606) {
    var bit__4515__auto__ = G__6606.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4515__auto__ || G__6606.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6606.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6606);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6606);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3834__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3834__auto__) {
    return or__3834__auto__;
  } else {
    var G__6610 = f;
    if (G__6610) {
      var bit__4515__auto__ = G__6610.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4515__auto__ || G__6610.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6610.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6610);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6610);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__6623 = n;
    return isNaN(G__6623);
  }()) && !(n === Infinity) && function() {
    var G__6624 = n;
    return parseFloat(G__6624);
  }() === function() {
    var G__6625 = n;
    var G__6626 = 10;
    return parseInt(G__6625, G__6626);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__6627__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__6628 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__6629 = etc;
              s = G__6628;
              xs = G__6629;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6627 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6630__i = 0, G__6630__a = new Array(arguments.length - 2);
        while (G__6630__i < G__6630__a.length) {
          G__6630__a[G__6630__i] = arguments[G__6630__i + 2];
          ++G__6630__i;
        }
        more = new cljs.core.IndexedSeq(G__6630__a, 0);
      }
      return G__6627__delegate.call(this, x, y, more);
    };
    G__6627.cljs$lang$maxFixedArity = 2;
    G__6627.cljs$lang$applyTo = function(arglist__6631) {
      var x = cljs.core.first(arglist__6631);
      arglist__6631 = cljs.core.next(arglist__6631);
      var y = cljs.core.first(arglist__6631);
      var more = cljs.core.rest(arglist__6631);
      return G__6627__delegate(x, y, more);
    };
    G__6627.cljs$core$IFn$_invoke$arity$variadic = G__6627__delegate;
    return G__6627;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__6632 = null;
        if (arguments.length > 2) {
          var G__6633__i = 0, G__6633__a = new Array(arguments.length - 2);
          while (G__6633__i < G__6633__a.length) {
            G__6633__a[G__6633__i] = arguments[G__6633__i + 2];
            ++G__6633__i;
          }
          G__6632 = new cljs.core.IndexedSeq(G__6633__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6632);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__6637 = x;
            if (G__6637) {
              var bit__4508__auto__ = G__6637.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4508__auto__ || G__6637.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__6638 = x;
            var G__6639 = y;
            return goog.array.defaultCompare(G__6638, G__6639);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6644 = xs;
        var G__6645 = ys;
        var G__6646 = len;
        var G__6647 = n + 1;
        xs = G__6644;
        ys = G__6645;
        len = G__6646;
        n = G__6647;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__6652 = x;
        var G__6653 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6652, G__6653) : f.call(null, G__6652, G__6653);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__6654 = y;
            var G__6655 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6654, G__6655) : f.call(null, G__6654, G__6655);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__6661 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6661) : cljs.core.to_array.call(null, G__6661);
      }();
      var G__6662_6664 = a;
      var G__6663_6665 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__6662_6664, G__6663_6665);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__6671 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6671) : keyfn.call(null, G__6671);
      }(), function() {
        var G__6672 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6672) : keyfn.call(null, G__6672);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__6678 = f;
      var G__6679 = cljs.core.first(s);
      var G__6680 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6678, G__6679, G__6680) : cljs.core.reduce.call(null, G__6678, G__6679, G__6680);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__6681 = val__$1;
          var G__6682 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6681, G__6682) : f.call(null, G__6681, G__6682);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6683 = nval;
          var G__6684 = cljs.core.next(coll__$1);
          val__$1 = G__6683;
          coll__$1 = G__6684;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__6688 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6688) : cljs.core.to_array.call(null, G__6688);
  }();
  var G__6689_6691 = a;
  goog.array.shuffle(G__6689_6691);
  var G__6690 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6690) : cljs.core.vec.call(null, G__6690);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__6694 = coll;
      if (G__6694) {
        var bit__4508__auto__ = G__6694.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4508__auto__ || G__6694.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6695 = coll;
      if (G__6695) {
        var bit__4508__auto__ = G__6695.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4508__auto__ || G__6695.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__6704 = null;
      var G__6704__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__6704__1 = function(x) {
        var G__6701 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6701) : cf.call(null, G__6701);
      };
      var G__6704__2 = function(x, y) {
        var G__6702 = x;
        var G__6703 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6702, G__6703) : f.call(null, G__6702, G__6703);
      };
      G__6704 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__6704__0.call(this);
          case 1:
            return G__6704__1.call(this, x);
          case 2:
            return G__6704__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6704.cljs$core$IFn$_invoke$arity$0 = G__6704__0;
      G__6704.cljs$core$IFn$_invoke$arity$1 = G__6704__1;
      G__6704.cljs$core$IFn$_invoke$arity$2 = G__6704__2;
      return G__6704;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__6711 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6711) : xform.call(null, G__6711);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__6712 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6712) : f__$1.call(null, G__6712);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__6713__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__6713 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6714__i = 0, G__6714__a = new Array(arguments.length - 2);
        while (G__6714__i < G__6714__a.length) {
          G__6714__a[G__6714__i] = arguments[G__6714__i + 2];
          ++G__6714__i;
        }
        more = new cljs.core.IndexedSeq(G__6714__a, 0);
      }
      return G__6713__delegate.call(this, x, y, more);
    };
    G__6713.cljs$lang$maxFixedArity = 2;
    G__6713.cljs$lang$applyTo = function(arglist__6715) {
      var x = cljs.core.first(arglist__6715);
      arglist__6715 = cljs.core.next(arglist__6715);
      var y = cljs.core.first(arglist__6715);
      var more = cljs.core.rest(arglist__6715);
      return G__6713__delegate(x, y, more);
    };
    G__6713.cljs$core$IFn$_invoke$arity$variadic = G__6713__delegate;
    return G__6713;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__6716 = null;
        if (arguments.length > 2) {
          var G__6717__i = 0, G__6717__a = new Array(arguments.length - 2);
          while (G__6717__i < G__6717__a.length) {
            G__6717__a[G__6717__i] = arguments[G__6717__i + 2];
            ++G__6717__i;
          }
          G__6716 = new cljs.core.IndexedSeq(G__6717__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6716);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__6718__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__6718 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6719__i = 0, G__6719__a = new Array(arguments.length - 2);
        while (G__6719__i < G__6719__a.length) {
          G__6719__a[G__6719__i] = arguments[G__6719__i + 2];
          ++G__6719__i;
        }
        more = new cljs.core.IndexedSeq(G__6719__a, 0);
      }
      return G__6718__delegate.call(this, x, y, more);
    };
    G__6718.cljs$lang$maxFixedArity = 2;
    G__6718.cljs$lang$applyTo = function(arglist__6720) {
      var x = cljs.core.first(arglist__6720);
      arglist__6720 = cljs.core.next(arglist__6720);
      var y = cljs.core.first(arglist__6720);
      var more = cljs.core.rest(arglist__6720);
      return G__6718__delegate(x, y, more);
    };
    G__6718.cljs$core$IFn$_invoke$arity$variadic = G__6718__delegate;
    return G__6718;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__6721 = null;
        if (arguments.length > 2) {
          var G__6722__i = 0, G__6722__a = new Array(arguments.length - 2);
          while (G__6722__i < G__6722__a.length) {
            G__6722__a[G__6722__i] = arguments[G__6722__i + 2];
            ++G__6722__i;
          }
          G__6721 = new cljs.core.IndexedSeq(G__6722__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6721);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__6723__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__6723 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6724__i = 0, G__6724__a = new Array(arguments.length - 2);
        while (G__6724__i < G__6724__a.length) {
          G__6724__a[G__6724__i] = arguments[G__6724__i + 2];
          ++G__6724__i;
        }
        more = new cljs.core.IndexedSeq(G__6724__a, 0);
      }
      return G__6723__delegate.call(this, x, y, more);
    };
    G__6723.cljs$lang$maxFixedArity = 2;
    G__6723.cljs$lang$applyTo = function(arglist__6725) {
      var x = cljs.core.first(arglist__6725);
      arglist__6725 = cljs.core.next(arglist__6725);
      var y = cljs.core.first(arglist__6725);
      var more = cljs.core.rest(arglist__6725);
      return G__6723__delegate(x, y, more);
    };
    G__6723.cljs$core$IFn$_invoke$arity$variadic = G__6723__delegate;
    return G__6723;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__6726 = null;
        if (arguments.length > 2) {
          var G__6727__i = 0, G__6727__a = new Array(arguments.length - 2);
          while (G__6727__i < G__6727__a.length) {
            G__6727__a[G__6727__i] = arguments[G__6727__i + 2];
            ++G__6727__i;
          }
          G__6726 = new cljs.core.IndexedSeq(G__6727__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6726);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__6732__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6732 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6733__i = 0, G__6733__a = new Array(arguments.length - 2);
        while (G__6733__i < G__6733__a.length) {
          G__6733__a[G__6733__i] = arguments[G__6733__i + 2];
          ++G__6733__i;
        }
        more = new cljs.core.IndexedSeq(G__6733__a, 0);
      }
      return G__6732__delegate.call(this, x, y, more);
    };
    G__6732.cljs$lang$maxFixedArity = 2;
    G__6732.cljs$lang$applyTo = function(arglist__6734) {
      var x = cljs.core.first(arglist__6734);
      arglist__6734 = cljs.core.next(arglist__6734);
      var y = cljs.core.first(arglist__6734);
      var more = cljs.core.rest(arglist__6734);
      return G__6732__delegate(x, y, more);
    };
    G__6732.cljs$core$IFn$_invoke$arity$variadic = G__6732__delegate;
    return G__6732;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__6735 = null;
        if (arguments.length > 2) {
          var G__6736__i = 0, G__6736__a = new Array(arguments.length - 2);
          while (G__6736__i < G__6736__a.length) {
            G__6736__a[G__6736__i] = arguments[G__6736__i + 2];
            ++G__6736__i;
          }
          G__6735 = new cljs.core.IndexedSeq(G__6736__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6735);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__6737__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__6738 = y;
            var G__6739 = cljs.core.first(more);
            var G__6740 = cljs.core.next(more);
            x = G__6738;
            y = G__6739;
            more = G__6740;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6737 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6741__i = 0, G__6741__a = new Array(arguments.length - 2);
        while (G__6741__i < G__6741__a.length) {
          G__6741__a[G__6741__i] = arguments[G__6741__i + 2];
          ++G__6741__i;
        }
        more = new cljs.core.IndexedSeq(G__6741__a, 0);
      }
      return G__6737__delegate.call(this, x, y, more);
    };
    G__6737.cljs$lang$maxFixedArity = 2;
    G__6737.cljs$lang$applyTo = function(arglist__6742) {
      var x = cljs.core.first(arglist__6742);
      arglist__6742 = cljs.core.next(arglist__6742);
      var y = cljs.core.first(arglist__6742);
      var more = cljs.core.rest(arglist__6742);
      return G__6737__delegate(x, y, more);
    };
    G__6737.cljs$core$IFn$_invoke$arity$variadic = G__6737__delegate;
    return G__6737;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__6743 = null;
        if (arguments.length > 2) {
          var G__6744__i = 0, G__6744__a = new Array(arguments.length - 2);
          while (G__6744__i < G__6744__a.length) {
            G__6744__a[G__6744__i] = arguments[G__6744__i + 2];
            ++G__6744__i;
          }
          G__6743 = new cljs.core.IndexedSeq(G__6744__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6743);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__6745__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__6746 = y;
            var G__6747 = cljs.core.first(more);
            var G__6748 = cljs.core.next(more);
            x = G__6746;
            y = G__6747;
            more = G__6748;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6745 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6749__i = 0, G__6749__a = new Array(arguments.length - 2);
        while (G__6749__i < G__6749__a.length) {
          G__6749__a[G__6749__i] = arguments[G__6749__i + 2];
          ++G__6749__i;
        }
        more = new cljs.core.IndexedSeq(G__6749__a, 0);
      }
      return G__6745__delegate.call(this, x, y, more);
    };
    G__6745.cljs$lang$maxFixedArity = 2;
    G__6745.cljs$lang$applyTo = function(arglist__6750) {
      var x = cljs.core.first(arglist__6750);
      arglist__6750 = cljs.core.next(arglist__6750);
      var y = cljs.core.first(arglist__6750);
      var more = cljs.core.rest(arglist__6750);
      return G__6745__delegate(x, y, more);
    };
    G__6745.cljs$core$IFn$_invoke$arity$variadic = G__6745__delegate;
    return G__6745;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__6751 = null;
        if (arguments.length > 2) {
          var G__6752__i = 0, G__6752__a = new Array(arguments.length - 2);
          while (G__6752__i < G__6752__a.length) {
            G__6752__a[G__6752__i] = arguments[G__6752__i + 2];
            ++G__6752__i;
          }
          G__6751 = new cljs.core.IndexedSeq(G__6752__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6751);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__6753__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__6754 = y;
            var G__6755 = cljs.core.first(more);
            var G__6756 = cljs.core.next(more);
            x = G__6754;
            y = G__6755;
            more = G__6756;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6753 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6757__i = 0, G__6757__a = new Array(arguments.length - 2);
        while (G__6757__i < G__6757__a.length) {
          G__6757__a[G__6757__i] = arguments[G__6757__i + 2];
          ++G__6757__i;
        }
        more = new cljs.core.IndexedSeq(G__6757__a, 0);
      }
      return G__6753__delegate.call(this, x, y, more);
    };
    G__6753.cljs$lang$maxFixedArity = 2;
    G__6753.cljs$lang$applyTo = function(arglist__6758) {
      var x = cljs.core.first(arglist__6758);
      arglist__6758 = cljs.core.next(arglist__6758);
      var y = cljs.core.first(arglist__6758);
      var more = cljs.core.rest(arglist__6758);
      return G__6753__delegate(x, y, more);
    };
    G__6753.cljs$core$IFn$_invoke$arity$variadic = G__6753__delegate;
    return G__6753;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__6759 = null;
        if (arguments.length > 2) {
          var G__6760__i = 0, G__6760__a = new Array(arguments.length - 2);
          while (G__6760__i < G__6760__a.length) {
            G__6760__a[G__6760__i] = arguments[G__6760__i + 2];
            ++G__6760__i;
          }
          G__6759 = new cljs.core.IndexedSeq(G__6760__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6759);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__6761__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__6762 = y;
            var G__6763 = cljs.core.first(more);
            var G__6764 = cljs.core.next(more);
            x = G__6762;
            y = G__6763;
            more = G__6764;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6761 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6765__i = 0, G__6765__a = new Array(arguments.length - 2);
        while (G__6765__i < G__6765__a.length) {
          G__6765__a[G__6765__i] = arguments[G__6765__i + 2];
          ++G__6765__i;
        }
        more = new cljs.core.IndexedSeq(G__6765__a, 0);
      }
      return G__6761__delegate.call(this, x, y, more);
    };
    G__6761.cljs$lang$maxFixedArity = 2;
    G__6761.cljs$lang$applyTo = function(arglist__6766) {
      var x = cljs.core.first(arglist__6766);
      arglist__6766 = cljs.core.next(arglist__6766);
      var y = cljs.core.first(arglist__6766);
      var more = cljs.core.rest(arglist__6766);
      return G__6761__delegate(x, y, more);
    };
    G__6761.cljs$core$IFn$_invoke$arity$variadic = G__6761__delegate;
    return G__6761;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__6767 = null;
        if (arguments.length > 2) {
          var G__6768__i = 0, G__6768__a = new Array(arguments.length - 2);
          while (G__6768__i < G__6768__a.length) {
            G__6768__a[G__6768__i] = arguments[G__6768__i + 2];
            ++G__6768__i;
          }
          G__6767 = new cljs.core.IndexedSeq(G__6768__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6767);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4151__auto__ = x;
    var y__4152__auto__ = y;
    return x__4151__auto__ > y__4152__auto__ ? x__4151__auto__ : y__4152__auto__;
  };
  var max__3 = function() {
    var G__6769__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4151__auto__ = x;
        var y__4152__auto__ = y;
        return x__4151__auto__ > y__4152__auto__ ? x__4151__auto__ : y__4152__auto__;
      }(), more);
    };
    var G__6769 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6770__i = 0, G__6770__a = new Array(arguments.length - 2);
        while (G__6770__i < G__6770__a.length) {
          G__6770__a[G__6770__i] = arguments[G__6770__i + 2];
          ++G__6770__i;
        }
        more = new cljs.core.IndexedSeq(G__6770__a, 0);
      }
      return G__6769__delegate.call(this, x, y, more);
    };
    G__6769.cljs$lang$maxFixedArity = 2;
    G__6769.cljs$lang$applyTo = function(arglist__6771) {
      var x = cljs.core.first(arglist__6771);
      arglist__6771 = cljs.core.next(arglist__6771);
      var y = cljs.core.first(arglist__6771);
      var more = cljs.core.rest(arglist__6771);
      return G__6769__delegate(x, y, more);
    };
    G__6769.cljs$core$IFn$_invoke$arity$variadic = G__6769__delegate;
    return G__6769;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__6772 = null;
        if (arguments.length > 2) {
          var G__6773__i = 0, G__6773__a = new Array(arguments.length - 2);
          while (G__6773__i < G__6773__a.length) {
            G__6773__a[G__6773__i] = arguments[G__6773__i + 2];
            ++G__6773__i;
          }
          G__6772 = new cljs.core.IndexedSeq(G__6773__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6772);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4158__auto__ = x;
    var y__4159__auto__ = y;
    return x__4158__auto__ < y__4159__auto__ ? x__4158__auto__ : y__4159__auto__;
  };
  var min__3 = function() {
    var G__6774__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4158__auto__ = x;
        var y__4159__auto__ = y;
        return x__4158__auto__ < y__4159__auto__ ? x__4158__auto__ : y__4159__auto__;
      }(), more);
    };
    var G__6774 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6775__i = 0, G__6775__a = new Array(arguments.length - 2);
        while (G__6775__i < G__6775__a.length) {
          G__6775__a[G__6775__i] = arguments[G__6775__i + 2];
          ++G__6775__i;
        }
        more = new cljs.core.IndexedSeq(G__6775__a, 0);
      }
      return G__6774__delegate.call(this, x, y, more);
    };
    G__6774.cljs$lang$maxFixedArity = 2;
    G__6774.cljs$lang$applyTo = function(arglist__6776) {
      var x = cljs.core.first(arglist__6776);
      arglist__6776 = cljs.core.next(arglist__6776);
      var y = cljs.core.first(arglist__6776);
      var more = cljs.core.rest(arglist__6776);
      return G__6774__delegate(x, y, more);
    };
    G__6774.cljs$core$IFn$_invoke$arity$variadic = G__6774__delegate;
    return G__6774;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__6777 = null;
        if (arguments.length > 2) {
          var G__6778__i = 0, G__6778__a = new Array(arguments.length - 2);
          while (G__6778__i < G__6778__a.length) {
            G__6778__a[G__6778__i] = arguments[G__6778__i + 2];
            ++G__6778__i;
          }
          G__6777 = new cljs.core.IndexedSeq(G__6778__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6777);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__6779__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__6779 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6780__i = 0, G__6780__a = new Array(arguments.length - 2);
        while (G__6780__i < G__6780__a.length) {
          G__6780__a[G__6780__i] = arguments[G__6780__i + 2];
          ++G__6780__i;
        }
        more = new cljs.core.IndexedSeq(G__6780__a, 0);
      }
      return G__6779__delegate.call(this, x, y, more);
    };
    G__6779.cljs$lang$maxFixedArity = 2;
    G__6779.cljs$lang$applyTo = function(arglist__6781) {
      var x = cljs.core.first(arglist__6781);
      arglist__6781 = cljs.core.next(arglist__6781);
      var y = cljs.core.first(arglist__6781);
      var more = cljs.core.rest(arglist__6781);
      return G__6779__delegate(x, y, more);
    };
    G__6779.cljs$core$IFn$_invoke$arity$variadic = G__6779__delegate;
    return G__6779;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__6782 = null;
        if (arguments.length > 2) {
          var G__6783__i = 0, G__6783__a = new Array(arguments.length - 2);
          while (G__6783__i < G__6783__a.length) {
            G__6783__a[G__6783__i] = arguments[G__6783__i + 2];
            ++G__6783__i;
          }
          G__6782 = new cljs.core.IndexedSeq(G__6783__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6782);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__6784__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__6784 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6785__i = 0, G__6785__a = new Array(arguments.length - 2);
        while (G__6785__i < G__6785__a.length) {
          G__6785__a[G__6785__i] = arguments[G__6785__i + 2];
          ++G__6785__i;
        }
        more = new cljs.core.IndexedSeq(G__6785__a, 0);
      }
      return G__6784__delegate.call(this, x, y, more);
    };
    G__6784.cljs$lang$maxFixedArity = 2;
    G__6784.cljs$lang$applyTo = function(arglist__6786) {
      var x = cljs.core.first(arglist__6786);
      arglist__6786 = cljs.core.next(arglist__6786);
      var y = cljs.core.first(arglist__6786);
      var more = cljs.core.rest(arglist__6786);
      return G__6784__delegate(x, y, more);
    };
    G__6784.cljs$core$IFn$_invoke$arity$variadic = G__6784__delegate;
    return G__6784;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__6787 = null;
        if (arguments.length > 2) {
          var G__6788__i = 0, G__6788__a = new Array(arguments.length - 2);
          while (G__6788__i < G__6788__a.length) {
            G__6788__a[G__6788__i] = arguments[G__6788__i + 2];
            ++G__6788__i;
          }
          G__6787 = new cljs.core.IndexedSeq(G__6788__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6787);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__6793__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6793 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6794__i = 0, G__6794__a = new Array(arguments.length - 2);
        while (G__6794__i < G__6794__a.length) {
          G__6794__a[G__6794__i] = arguments[G__6794__i + 2];
          ++G__6794__i;
        }
        more = new cljs.core.IndexedSeq(G__6794__a, 0);
      }
      return G__6793__delegate.call(this, x, y, more);
    };
    G__6793.cljs$lang$maxFixedArity = 2;
    G__6793.cljs$lang$applyTo = function(arglist__6795) {
      var x = cljs.core.first(arglist__6795);
      arglist__6795 = cljs.core.next(arglist__6795);
      var y = cljs.core.first(arglist__6795);
      var more = cljs.core.rest(arglist__6795);
      return G__6793__delegate(x, y, more);
    };
    G__6793.cljs$core$IFn$_invoke$arity$variadic = G__6793__delegate;
    return G__6793;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__6796 = null;
        if (arguments.length > 2) {
          var G__6797__i = 0, G__6797__a = new Array(arguments.length - 2);
          while (G__6797__i < G__6797__a.length) {
            G__6797__a[G__6797__i] = arguments[G__6797__i + 2];
            ++G__6797__i;
          }
          G__6796 = new cljs.core.IndexedSeq(G__6797__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6796);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__6798__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__6798 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6799__i = 0, G__6799__a = new Array(arguments.length - 2);
        while (G__6799__i < G__6799__a.length) {
          G__6799__a[G__6799__i] = arguments[G__6799__i + 2];
          ++G__6799__i;
        }
        more = new cljs.core.IndexedSeq(G__6799__a, 0);
      }
      return G__6798__delegate.call(this, x, y, more);
    };
    G__6798.cljs$lang$maxFixedArity = 2;
    G__6798.cljs$lang$applyTo = function(arglist__6800) {
      var x = cljs.core.first(arglist__6800);
      arglist__6800 = cljs.core.next(arglist__6800);
      var y = cljs.core.first(arglist__6800);
      var more = cljs.core.rest(arglist__6800);
      return G__6798__delegate(x, y, more);
    };
    G__6798.cljs$core$IFn$_invoke$arity$variadic = G__6798__delegate;
    return G__6798;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__6801 = null;
        if (arguments.length > 2) {
          var G__6802__i = 0, G__6802__a = new Array(arguments.length - 2);
          while (G__6802__i < G__6802__a.length) {
            G__6802__a[G__6802__i] = arguments[G__6802__i + 2];
            ++G__6802__i;
          }
          G__6801 = new cljs.core.IndexedSeq(G__6802__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6801);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__6803__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__6803 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6804__i = 0, G__6804__a = new Array(arguments.length - 2);
        while (G__6804__i < G__6804__a.length) {
          G__6804__a[G__6804__i] = arguments[G__6804__i + 2];
          ++G__6804__i;
        }
        more = new cljs.core.IndexedSeq(G__6804__a, 0);
      }
      return G__6803__delegate.call(this, x, y, more);
    };
    G__6803.cljs$lang$maxFixedArity = 2;
    G__6803.cljs$lang$applyTo = function(arglist__6805) {
      var x = cljs.core.first(arglist__6805);
      arglist__6805 = cljs.core.next(arglist__6805);
      var y = cljs.core.first(arglist__6805);
      var more = cljs.core.rest(arglist__6805);
      return G__6803__delegate(x, y, more);
    };
    G__6803.cljs$core$IFn$_invoke$arity$variadic = G__6803__delegate;
    return G__6803;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__6806 = null;
        if (arguments.length > 2) {
          var G__6807__i = 0, G__6807__a = new Array(arguments.length - 2);
          while (G__6807__i < G__6807__a.length) {
            G__6807__a[G__6807__i] = arguments[G__6807__i + 2];
            ++G__6807__i;
          }
          G__6806 = new cljs.core.IndexedSeq(G__6807__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6806);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__6810 = x;
  var G__6811 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6810, G__6811) : cljs.core.mod.call(null, G__6810, G__6811);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__6812__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__6812 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6813__i = 0, G__6813__a = new Array(arguments.length - 2);
        while (G__6813__i < G__6813__a.length) {
          G__6813__a[G__6813__i] = arguments[G__6813__i + 2];
          ++G__6813__i;
        }
        more = new cljs.core.IndexedSeq(G__6813__a, 0);
      }
      return G__6812__delegate.call(this, x, y, more);
    };
    G__6812.cljs$lang$maxFixedArity = 2;
    G__6812.cljs$lang$applyTo = function(arglist__6814) {
      var x = cljs.core.first(arglist__6814);
      arglist__6814 = cljs.core.next(arglist__6814);
      var y = cljs.core.first(arglist__6814);
      var more = cljs.core.rest(arglist__6814);
      return G__6812__delegate(x, y, more);
    };
    G__6812.cljs$core$IFn$_invoke$arity$variadic = G__6812__delegate;
    return G__6812;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__6815 = null;
        if (arguments.length > 2) {
          var G__6816__i = 0, G__6816__a = new Array(arguments.length - 2);
          while (G__6816__i < G__6816__a.length) {
            G__6816__a[G__6816__i] = arguments[G__6816__i + 2];
            ++G__6816__i;
          }
          G__6815 = new cljs.core.IndexedSeq(G__6816__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6815);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__6817__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__6817 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6818__i = 0, G__6818__a = new Array(arguments.length - 2);
        while (G__6818__i < G__6818__a.length) {
          G__6818__a[G__6818__i] = arguments[G__6818__i + 2];
          ++G__6818__i;
        }
        more = new cljs.core.IndexedSeq(G__6818__a, 0);
      }
      return G__6817__delegate.call(this, x, y, more);
    };
    G__6817.cljs$lang$maxFixedArity = 2;
    G__6817.cljs$lang$applyTo = function(arglist__6819) {
      var x = cljs.core.first(arglist__6819);
      arglist__6819 = cljs.core.next(arglist__6819);
      var y = cljs.core.first(arglist__6819);
      var more = cljs.core.rest(arglist__6819);
      return G__6817__delegate(x, y, more);
    };
    G__6817.cljs$core$IFn$_invoke$arity$variadic = G__6817__delegate;
    return G__6817;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__6820 = null;
        if (arguments.length > 2) {
          var G__6821__i = 0, G__6821__a = new Array(arguments.length - 2);
          while (G__6821__i < G__6821__a.length) {
            G__6821__a[G__6821__i] = arguments[G__6821__i + 2];
            ++G__6821__i;
          }
          G__6820 = new cljs.core.IndexedSeq(G__6821__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6820);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__6824 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6824) : Math.floor.call(null, G__6824);
  } else {
    var G__6825 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6825) : Math.ceil.call(null, G__6825);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__6826__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__6826 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6827__i = 0, G__6827__a = new Array(arguments.length - 2);
        while (G__6827__i < G__6827__a.length) {
          G__6827__a[G__6827__i] = arguments[G__6827__i + 2];
          ++G__6827__i;
        }
        more = new cljs.core.IndexedSeq(G__6827__a, 0);
      }
      return G__6826__delegate.call(this, x, y, more);
    };
    G__6826.cljs$lang$maxFixedArity = 2;
    G__6826.cljs$lang$applyTo = function(arglist__6828) {
      var x = cljs.core.first(arglist__6828);
      arglist__6828 = cljs.core.next(arglist__6828);
      var y = cljs.core.first(arglist__6828);
      var more = cljs.core.rest(arglist__6828);
      return G__6826__delegate(x, y, more);
    };
    G__6826.cljs$core$IFn$_invoke$arity$variadic = G__6826__delegate;
    return G__6826;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__6829 = null;
        if (arguments.length > 2) {
          var G__6830__i = 0, G__6830__a = new Array(arguments.length - 2);
          while (G__6830__i < G__6830__a.length) {
            G__6830__a[G__6830__i] = arguments[G__6830__i + 2];
            ++G__6830__i;
          }
          G__6829 = new cljs.core.IndexedSeq(G__6830__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6829);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__6831__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__6831 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6832__i = 0, G__6832__a = new Array(arguments.length - 2);
        while (G__6832__i < G__6832__a.length) {
          G__6832__a[G__6832__i] = arguments[G__6832__i + 2];
          ++G__6832__i;
        }
        more = new cljs.core.IndexedSeq(G__6832__a, 0);
      }
      return G__6831__delegate.call(this, x, y, more);
    };
    G__6831.cljs$lang$maxFixedArity = 2;
    G__6831.cljs$lang$applyTo = function(arglist__6833) {
      var x = cljs.core.first(arglist__6833);
      arglist__6833 = cljs.core.next(arglist__6833);
      var y = cljs.core.first(arglist__6833);
      var more = cljs.core.rest(arglist__6833);
      return G__6831__delegate(x, y, more);
    };
    G__6831.cljs$core$IFn$_invoke$arity$variadic = G__6831__delegate;
    return G__6831;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__6834 = null;
        if (arguments.length > 2) {
          var G__6835__i = 0, G__6835__a = new Array(arguments.length - 2);
          while (G__6835__i < G__6835__a.length) {
            G__6835__a[G__6835__i] = arguments[G__6835__i + 2];
            ++G__6835__i;
          }
          G__6834 = new cljs.core.IndexedSeq(G__6835__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6834);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__6836__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__6836 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6837__i = 0, G__6837__a = new Array(arguments.length - 2);
        while (G__6837__i < G__6837__a.length) {
          G__6837__a[G__6837__i] = arguments[G__6837__i + 2];
          ++G__6837__i;
        }
        more = new cljs.core.IndexedSeq(G__6837__a, 0);
      }
      return G__6836__delegate.call(this, x, y, more);
    };
    G__6836.cljs$lang$maxFixedArity = 2;
    G__6836.cljs$lang$applyTo = function(arglist__6838) {
      var x = cljs.core.first(arglist__6838);
      arglist__6838 = cljs.core.next(arglist__6838);
      var y = cljs.core.first(arglist__6838);
      var more = cljs.core.rest(arglist__6838);
      return G__6836__delegate(x, y, more);
    };
    G__6836.cljs$core$IFn$_invoke$arity$variadic = G__6836__delegate;
    return G__6836;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__6839 = null;
        if (arguments.length > 2) {
          var G__6840__i = 0, G__6840__a = new Array(arguments.length - 2);
          while (G__6840__i < G__6840__a.length) {
            G__6840__a[G__6840__i] = arguments[G__6840__i + 2];
            ++G__6840__i;
          }
          G__6839 = new cljs.core.IndexedSeq(G__6840__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6839);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__6841__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__6841 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6842__i = 0, G__6842__a = new Array(arguments.length - 2);
        while (G__6842__i < G__6842__a.length) {
          G__6842__a[G__6842__i] = arguments[G__6842__i + 2];
          ++G__6842__i;
        }
        more = new cljs.core.IndexedSeq(G__6842__a, 0);
      }
      return G__6841__delegate.call(this, x, y, more);
    };
    G__6841.cljs$lang$maxFixedArity = 2;
    G__6841.cljs$lang$applyTo = function(arglist__6843) {
      var x = cljs.core.first(arglist__6843);
      arglist__6843 = cljs.core.next(arglist__6843);
      var y = cljs.core.first(arglist__6843);
      var more = cljs.core.rest(arglist__6843);
      return G__6841__delegate(x, y, more);
    };
    G__6841.cljs$core$IFn$_invoke$arity$variadic = G__6841__delegate;
    return G__6841;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__6844 = null;
        if (arguments.length > 2) {
          var G__6845__i = 0, G__6845__a = new Array(arguments.length - 2);
          while (G__6845__i < G__6845__a.length) {
            G__6845__a[G__6845__i] = arguments[G__6845__i + 2];
            ++G__6845__i;
          }
          G__6844 = new cljs.core.IndexedSeq(G__6845__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6844);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__6850__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__6851 = y;
            var G__6852 = cljs.core.first(more);
            var G__6853 = cljs.core.next(more);
            x = G__6851;
            y = G__6852;
            more = G__6853;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6850 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6854__i = 0, G__6854__a = new Array(arguments.length - 2);
        while (G__6854__i < G__6854__a.length) {
          G__6854__a[G__6854__i] = arguments[G__6854__i + 2];
          ++G__6854__i;
        }
        more = new cljs.core.IndexedSeq(G__6854__a, 0);
      }
      return G__6850__delegate.call(this, x, y, more);
    };
    G__6850.cljs$lang$maxFixedArity = 2;
    G__6850.cljs$lang$applyTo = function(arglist__6855) {
      var x = cljs.core.first(arglist__6855);
      arglist__6855 = cljs.core.next(arglist__6855);
      var y = cljs.core.first(arglist__6855);
      var more = cljs.core.rest(arglist__6855);
      return G__6850__delegate(x, y, more);
    };
    G__6850.cljs$core$IFn$_invoke$arity$variadic = G__6850__delegate;
    return G__6850;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__6856 = null;
        if (arguments.length > 2) {
          var G__6857__i = 0, G__6857__a = new Array(arguments.length - 2);
          while (G__6857__i < G__6857__a.length) {
            G__6857__a[G__6857__i] = arguments[G__6857__i + 2];
            ++G__6857__i;
          }
          G__6856 = new cljs.core.IndexedSeq(G__6857__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6856);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6858 = n__$1 - 1;
      var G__6859 = cljs.core.next(xs);
      n__$1 = G__6858;
      xs = G__6859;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__6863 = x;
      return goog.string.buildString(G__6863);
    }
  };
  var str__2 = function() {
    var G__6864__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6865 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__6866 = cljs.core.next(more);
          sb = G__6865;
          more = G__6866;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6864 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__6867__i = 0, G__6867__a = new Array(arguments.length - 1);
        while (G__6867__i < G__6867__a.length) {
          G__6867__a[G__6867__i] = arguments[G__6867__i + 1];
          ++G__6867__i;
        }
        ys = new cljs.core.IndexedSeq(G__6867__a, 0);
      }
      return G__6864__delegate.call(this, x, ys);
    };
    G__6864.cljs$lang$maxFixedArity = 1;
    G__6864.cljs$lang$applyTo = function(arglist__6868) {
      var x = cljs.core.first(arglist__6868);
      var ys = cljs.core.rest(arglist__6868);
      return G__6864__delegate(x, ys);
    };
    G__6864.cljs$core$IFn$_invoke$arity$variadic = G__6864__delegate;
    return G__6864;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__6869 = null;
        if (arguments.length > 1) {
          var G__6870__i = 0, G__6870__a = new Array(arguments.length - 1);
          while (G__6870__i < G__6870__a.length) {
            G__6870__a[G__6870__i] = arguments[G__6870__i + 1];
            ++G__6870__i;
          }
          G__6869 = new cljs.core.IndexedSeq(G__6870__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6869);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__6871 = cljs.core.next(xs);
            var G__6872 = cljs.core.next(ys);
            xs = G__6871;
            ys = G__6872;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6873 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__6874 = cljs.core.next(s);
        res = G__6873;
        s = G__6874;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__6879 = (h + (cljs.core.hash(function() {
        var G__6877 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6877) : cljs.core.key.call(null, G__6877);
      }()) ^ cljs.core.hash(function() {
        var G__6878 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6878) : cljs.core.val.call(null, G__6878);
      }()))) % 4503599627370496;
      var G__6880 = cljs.core.next(s);
      h = G__6879;
      s = G__6880;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__6881 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__6882 = cljs.core.next(s__$1);
      h = G__6881;
      s__$1 = G__6882;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6893_6903 = cljs.core.seq(fn_map);
  var chunk__6894_6904 = null;
  var count__6895_6905 = 0;
  var i__6896_6906 = 0;
  while (true) {
    if (i__6896_6906 < count__6895_6905) {
      var vec__6897_6907 = chunk__6894_6904.cljs$core$IIndexed$_nth$arity$2(null, i__6896_6906);
      var key_name_6908 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6897_6907, 0, null);
      var f_6909 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6897_6907, 1, null);
      var str_name_6910 = function() {
        var G__6898 = key_name_6908;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6898) : cljs.core.name.call(null, G__6898);
      }();
      obj[str_name_6910] = f_6909;
      var G__6911 = seq__6893_6903;
      var G__6912 = chunk__6894_6904;
      var G__6913 = count__6895_6905;
      var G__6914 = i__6896_6906 + 1;
      seq__6893_6903 = G__6911;
      chunk__6894_6904 = G__6912;
      count__6895_6905 = G__6913;
      i__6896_6906 = G__6914;
      continue;
    } else {
      var temp__4126__auto___6915 = cljs.core.seq(seq__6893_6903);
      if (temp__4126__auto___6915) {
        var seq__6893_6916__$1 = temp__4126__auto___6915;
        if (cljs.core.chunked_seq_QMARK_(seq__6893_6916__$1)) {
          var c__4621__auto___6917 = function() {
            var G__6899 = seq__6893_6916__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6899) : cljs.core.chunk_first.call(null, G__6899);
          }();
          var G__6918 = function() {
            var G__6900 = seq__6893_6916__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6900) : cljs.core.chunk_rest.call(null, G__6900);
          }();
          var G__6919 = c__4621__auto___6917;
          var G__6920 = cljs.core.count(c__4621__auto___6917);
          var G__6921 = 0;
          seq__6893_6903 = G__6918;
          chunk__6894_6904 = G__6919;
          count__6895_6905 = G__6920;
          i__6896_6906 = G__6921;
          continue;
        } else {
          var vec__6901_6922 = cljs.core.first(seq__6893_6916__$1);
          var key_name_6923 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6901_6922, 0, null);
          var f_6924 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6901_6922, 1, null);
          var str_name_6925 = function() {
            var G__6902 = key_name_6923;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6902) : cljs.core.name.call(null, G__6902);
          }();
          obj[str_name_6925] = f_6924;
          var G__6926 = cljs.core.next(seq__6893_6916__$1);
          var G__6927 = null;
          var G__6928 = 0;
          var G__6929 = 0;
          seq__6893_6903 = G__6926;
          chunk__6894_6904 = G__6927;
          count__6895_6905 = G__6928;
          i__6896_6906 = G__6929;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6931 = coll;
  if (G__6931) {
    var bit__4515__auto__ = G__6931.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4515__auto__ || G__6931.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6931.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6931);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6931);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__6932 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__6932;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6933 = i - 1;
        var G__6934 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__6933;
        r = G__6934;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__6935__i = 0, G__6935__a = new Array(arguments.length - 0);
      while (G__6935__i < G__6935__a.length) {
        G__6935__a[G__6935__i] = arguments[G__6935__i + 0];
        ++G__6935__i;
      }
      xs = new cljs.core.IndexedSeq(G__6935__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6936) {
    var xs = cljs.core.seq(arglist__6936);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3834__auto__ = coll == null;
    if (or__3834__auto__) {
      return or__3834__auto__;
    } else {
      var G__6940 = coll;
      if (G__6940) {
        var bit__4508__auto__ = G__6940.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4508__auto__ || G__6940.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6942 = x;
  if (G__6942) {
    var bit__4515__auto__ = G__6942.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4515__auto__ || G__6942.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6942.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6942);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6942);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3822__auto__ = cljs.core.not(a.ns);
      if (and__3822__auto__) {
        return b.ns;
      } else {
        return and__3822__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6949 = a.ns;
            var G__6950 = b.ns;
            return goog.array.defaultCompare(G__6949, G__6950);
          }();
          if (0 === nsc) {
            var G__6951 = a.name;
            var G__6952 = b.name;
            return goog.array.defaultCompare(G__6951, G__6952);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6953 = a.name;
        var G__6954 = b.name;
        return goog.array.defaultCompare(G__6953, G__6954);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4255__auto__ = self__._hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6956 = null;
  var G__6956__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__6956__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__6956 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6956__2.call(this, self__, coll);
      case 3:
        return G__6956__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6956.cljs$core$IFn$_invoke$arity$2 = G__6956__2;
  G__6956.cljs$core$IFn$_invoke$arity$3 = G__6956__3;
  return G__6956;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6955) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6955)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__6958 = x;
    if (G__6958) {
      var bit__4508__auto__ = G__6958.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4508__auto__ || G__6958.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__6960 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6960) : cljs.core.name.call(null, G__6960);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6961 = ls.sval();
        ls = G__6961;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__6963 = s;
    if (G__6963) {
      var bit__4508__auto__ = G__6963.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4508__auto__ || G__6963.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__6964 = cljs.core.next(s__$1);
      s__$1 = G__6964;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_6965 = 0;
  var xs_6966 = cljs.core.seq(coll);
  while (true) {
    if (xs_6966) {
      ret[i_6965] = cljs.core.to_array(cljs.core.first(xs_6966));
      var G__6967 = i_6965 + 1;
      var G__6968 = cljs.core.next(xs_6966);
      i_6965 = G__6967;
      xs_6966 = G__6968;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6971 = i + 1;
          var G__6972 = cljs.core.next(s__$1);
          i = G__6971;
          s__$1 = G__6972;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4721__auto___6973 = size;
      var i_6974 = 0;
      while (true) {
        if (i_6974 < n__4721__auto___6973) {
          a[i_6974] = init_val_or_seq;
          var G__6975 = i_6974 + 1;
          i_6974 = G__6975;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6978 = i + 1;
          var G__6979 = cljs.core.next(s__$1);
          i = G__6978;
          s__$1 = G__6979;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4721__auto___6980 = size;
      var i_6981 = 0;
      while (true) {
        if (i_6981 < n__4721__auto___6980) {
          a[i_6981] = init_val_or_seq;
          var G__6982 = i_6981 + 1;
          i_6981 = G__6982;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6985 = i + 1;
          var G__6986 = cljs.core.next(s__$1);
          i = G__6985;
          s__$1 = G__6986;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4721__auto___6987 = size;
      var i_6988 = 0;
      while (true) {
        if (i_6988 < n__4721__auto___6987) {
          a[i_6988] = init_val_or_seq;
          var G__6989 = i_6988 + 1;
          i_6988 = G__6989;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6992 = i + 1;
          var G__6993 = cljs.core.next(s__$1);
          i = G__6992;
          s__$1 = G__6993;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4721__auto___6994 = size;
      var i_6995 = 0;
      while (true) {
        if (i_6995 < n__4721__auto___6994) {
          a[i_6995] = init_val_or_seq;
          var G__6996 = i_6995 + 1;
          i_6995 = G__6996;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__6997 = cljs.core.next(s__$1);
        var G__6998 = i - 1;
        var G__6999 = sum + 1;
        s__$1 = G__6997;
        i = G__6998;
        sum = G__6999;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__7019__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__7019 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__7020__i = 0, G__7020__a = new Array(arguments.length - 2);
        while (G__7020__i < G__7020__a.length) {
          G__7020__a[G__7020__i] = arguments[G__7020__i + 2];
          ++G__7020__i;
        }
        zs = new cljs.core.IndexedSeq(G__7020__a, 0);
      }
      return G__7019__delegate.call(this, x, y, zs);
    };
    G__7019.cljs$lang$maxFixedArity = 2;
    G__7019.cljs$lang$applyTo = function(arglist__7021) {
      var x = cljs.core.first(arglist__7021);
      arglist__7021 = cljs.core.next(arglist__7021);
      var y = cljs.core.first(arglist__7021);
      var zs = cljs.core.rest(arglist__7021);
      return G__7019__delegate(x, y, zs);
    };
    G__7019.cljs$core$IFn$_invoke$arity$variadic = G__7019__delegate;
    return G__7019;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__7022 = null;
        if (arguments.length > 2) {
          var G__7023__i = 0, G__7023__a = new Array(arguments.length - 2);
          while (G__7023__i < G__7023__a.length) {
            G__7023__a[G__7023__i] = arguments[G__7023__i + 2];
            ++G__7023__i;
          }
          G__7022 = new cljs.core.IndexedSeq(G__7023__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7022);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__7024__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__7024 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7025__i = 0, G__7025__a = new Array(arguments.length - 4);
        while (G__7025__i < G__7025__a.length) {
          G__7025__a[G__7025__i] = arguments[G__7025__i + 4];
          ++G__7025__i;
        }
        more = new cljs.core.IndexedSeq(G__7025__a, 0);
      }
      return G__7024__delegate.call(this, a, b, c, d, more);
    };
    G__7024.cljs$lang$maxFixedArity = 4;
    G__7024.cljs$lang$applyTo = function(arglist__7026) {
      var a = cljs.core.first(arglist__7026);
      arglist__7026 = cljs.core.next(arglist__7026);
      var b = cljs.core.first(arglist__7026);
      arglist__7026 = cljs.core.next(arglist__7026);
      var c = cljs.core.first(arglist__7026);
      arglist__7026 = cljs.core.next(arglist__7026);
      var d = cljs.core.first(arglist__7026);
      var more = cljs.core.rest(arglist__7026);
      return G__7024__delegate(a, b, c, d, more);
    };
    G__7024.cljs$core$IFn$_invoke$arity$variadic = G__7024__delegate;
    return G__7024;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__7027 = null;
        if (arguments.length > 4) {
          var G__7028__i = 0, G__7028__a = new Array(arguments.length - 4);
          while (G__7028__i < G__7028__a.length) {
            G__7028__a[G__7028__i] = arguments[G__7028__i + 4];
            ++G__7028__i;
          }
          G__7027 = new cljs.core.IndexedSeq(G__7028__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__7027);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__7029__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__7030 = ntcoll;
          var G__7031 = cljs.core.first(vals);
          var G__7032 = cljs.core.next(vals);
          tcoll = G__7030;
          val = G__7031;
          vals = G__7032;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__7029 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__7033__i = 0, G__7033__a = new Array(arguments.length - 2);
        while (G__7033__i < G__7033__a.length) {
          G__7033__a[G__7033__i] = arguments[G__7033__i + 2];
          ++G__7033__i;
        }
        vals = new cljs.core.IndexedSeq(G__7033__a, 0);
      }
      return G__7029__delegate.call(this, tcoll, val, vals);
    };
    G__7029.cljs$lang$maxFixedArity = 2;
    G__7029.cljs$lang$applyTo = function(arglist__7034) {
      var tcoll = cljs.core.first(arglist__7034);
      arglist__7034 = cljs.core.next(arglist__7034);
      var val = cljs.core.first(arglist__7034);
      var vals = cljs.core.rest(arglist__7034);
      return G__7029__delegate(tcoll, val, vals);
    };
    G__7029.cljs$core$IFn$_invoke$arity$variadic = G__7029__delegate;
    return G__7029;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__7035 = null;
        if (arguments.length > 2) {
          var G__7036__i = 0, G__7036__a = new Array(arguments.length - 2);
          while (G__7036__i < G__7036__a.length) {
            G__7036__a[G__7036__i] = arguments[G__7036__i + 2];
            ++G__7036__i;
          }
          G__7035 = new cljs.core.IndexedSeq(G__7036__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__7035);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__7037__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__7038 = ntcoll;
          var G__7039 = cljs.core.first(kvs);
          var G__7040 = cljs.core.second(kvs);
          var G__7041 = cljs.core.nnext(kvs);
          tcoll = G__7038;
          key = G__7039;
          val = G__7040;
          kvs = G__7041;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__7037 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__7042__i = 0, G__7042__a = new Array(arguments.length - 3);
        while (G__7042__i < G__7042__a.length) {
          G__7042__a[G__7042__i] = arguments[G__7042__i + 3];
          ++G__7042__i;
        }
        kvs = new cljs.core.IndexedSeq(G__7042__a, 0);
      }
      return G__7037__delegate.call(this, tcoll, key, val, kvs);
    };
    G__7037.cljs$lang$maxFixedArity = 3;
    G__7037.cljs$lang$applyTo = function(arglist__7043) {
      var tcoll = cljs.core.first(arglist__7043);
      arglist__7043 = cljs.core.next(arglist__7043);
      var key = cljs.core.first(arglist__7043);
      arglist__7043 = cljs.core.next(arglist__7043);
      var val = cljs.core.first(arglist__7043);
      var kvs = cljs.core.rest(arglist__7043);
      return G__7037__delegate(tcoll, key, val, kvs);
    };
    G__7037.cljs$core$IFn$_invoke$arity$variadic = G__7037__delegate;
    return G__7037;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__7044 = null;
        if (arguments.length > 3) {
          var G__7045__i = 0, G__7045__a = new Array(arguments.length - 3);
          while (G__7045__i < G__7045__a.length) {
            G__7045__a[G__7045__i] = arguments[G__7045__i + 3];
            ++G__7045__i;
          }
          G__7044 = new cljs.core.IndexedSeq(G__7045__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__7044);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__7046__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__7047 = ntcoll;
          var G__7048 = cljs.core.first(ks);
          var G__7049 = cljs.core.next(ks);
          tcoll = G__7047;
          key = G__7048;
          ks = G__7049;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__7046 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__7050__i = 0, G__7050__a = new Array(arguments.length - 2);
        while (G__7050__i < G__7050__a.length) {
          G__7050__a[G__7050__i] = arguments[G__7050__i + 2];
          ++G__7050__i;
        }
        ks = new cljs.core.IndexedSeq(G__7050__a, 0);
      }
      return G__7046__delegate.call(this, tcoll, key, ks);
    };
    G__7046.cljs$lang$maxFixedArity = 2;
    G__7046.cljs$lang$applyTo = function(arglist__7051) {
      var tcoll = cljs.core.first(arglist__7051);
      arglist__7051 = cljs.core.next(arglist__7051);
      var key = cljs.core.first(arglist__7051);
      var ks = cljs.core.rest(arglist__7051);
      return G__7046__delegate(tcoll, key, ks);
    };
    G__7046.cljs$core$IFn$_invoke$arity$variadic = G__7046__delegate;
    return G__7046;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__7052 = null;
        if (arguments.length > 2) {
          var G__7053__i = 0, G__7053__a = new Array(arguments.length - 2);
          while (G__7053__i < G__7053__a.length) {
            G__7053__a[G__7053__i] = arguments[G__7053__i + 2];
            ++G__7053__i;
          }
          G__7052 = new cljs.core.IndexedSeq(G__7053__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__7052);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__7054__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__7055 = ntcoll;
          var G__7056 = cljs.core.first(vals);
          var G__7057 = cljs.core.next(vals);
          tcoll = G__7055;
          val = G__7056;
          vals = G__7057;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__7054 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__7058__i = 0, G__7058__a = new Array(arguments.length - 2);
        while (G__7058__i < G__7058__a.length) {
          G__7058__a[G__7058__i] = arguments[G__7058__i + 2];
          ++G__7058__i;
        }
        vals = new cljs.core.IndexedSeq(G__7058__a, 0);
      }
      return G__7054__delegate.call(this, tcoll, val, vals);
    };
    G__7054.cljs$lang$maxFixedArity = 2;
    G__7054.cljs$lang$applyTo = function(arglist__7059) {
      var tcoll = cljs.core.first(arglist__7059);
      arglist__7059 = cljs.core.next(arglist__7059);
      var val = cljs.core.first(arglist__7059);
      var vals = cljs.core.rest(arglist__7059);
      return G__7054__delegate(tcoll, val, vals);
    };
    G__7054.cljs$core$IFn$_invoke$arity$variadic = G__7054__delegate;
    return G__7054;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__7060 = null;
        if (arguments.length > 2) {
          var G__7061__i = 0, G__7061__a = new Array(arguments.length - 2);
          while (G__7061__i < G__7061__a.length) {
            G__7061__a[G__7061__i] = arguments[G__7061__i + 2];
            ++G__7061__i;
          }
          G__7060 = new cljs.core.IndexedSeq(G__7061__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__7060);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4765 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4765);
      } else {
        var G__7272 = a4765;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7272) : f.call(null, G__7272);
      }
    } else {
      var b4766 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4765, b4766);
        } else {
          var G__7273 = a4765;
          var G__7274 = b4766;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7273, G__7274) : f.call(null, G__7273, G__7274);
        }
      } else {
        var c4767 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4765, b4766, c4767);
          } else {
            var G__7275 = a4765;
            var G__7276 = b4766;
            var G__7277 = c4767;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7275, G__7276, G__7277) : f.call(null, G__7275, G__7276, G__7277);
          }
        } else {
          var d4768 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4765, b4766, c4767, d4768);
            } else {
              var G__7278 = a4765;
              var G__7279 = b4766;
              var G__7280 = c4767;
              var G__7281 = d4768;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7278, G__7279, G__7280, G__7281) : f.call(null, G__7278, G__7279, G__7280, G__7281);
            }
          } else {
            var e4769 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4765, b4766, c4767, d4768, e4769);
              } else {
                var G__7282 = a4765;
                var G__7283 = b4766;
                var G__7284 = c4767;
                var G__7285 = d4768;
                var G__7286 = e4769;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7282, G__7283, G__7284, G__7285, G__7286) : f.call(null, G__7282, G__7283, G__7284, G__7285, G__7286);
              }
            } else {
              var f4770 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4765, b4766, c4767, d4768, e4769, f4770);
                } else {
                  var G__7287 = a4765;
                  var G__7288 = b4766;
                  var G__7289 = c4767;
                  var G__7290 = d4768;
                  var G__7291 = e4769;
                  var G__7292 = f4770;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7287, G__7288, G__7289, G__7290, G__7291, G__7292) : f.call(null, G__7287, G__7288, G__7289, G__7290, G__7291, G__7292);
                }
              } else {
                var g4771 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4765, b4766, c4767, d4768, e4769, f4770, g4771);
                  } else {
                    var G__7293 = a4765;
                    var G__7294 = b4766;
                    var G__7295 = c4767;
                    var G__7296 = d4768;
                    var G__7297 = e4769;
                    var G__7298 = f4770;
                    var G__7299 = g4771;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7293, G__7294, G__7295, G__7296, G__7297, G__7298, G__7299) : f.call(null, G__7293, G__7294, G__7295, G__7296, G__7297, G__7298, G__7299);
                  }
                } else {
                  var h4772 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772);
                    } else {
                      var G__7300 = a4765;
                      var G__7301 = b4766;
                      var G__7302 = c4767;
                      var G__7303 = d4768;
                      var G__7304 = e4769;
                      var G__7305 = f4770;
                      var G__7306 = g4771;
                      var G__7307 = h4772;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7300, G__7301, G__7302, G__7303, G__7304, G__7305, G__7306, G__7307) : f.call(null, G__7300, G__7301, G__7302, G__7303, G__7304, G__7305, G__7306, G__7307);
                    }
                  } else {
                    var i4773 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773);
                      } else {
                        var G__7308 = a4765;
                        var G__7309 = b4766;
                        var G__7310 = c4767;
                        var G__7311 = d4768;
                        var G__7312 = e4769;
                        var G__7313 = f4770;
                        var G__7314 = g4771;
                        var G__7315 = h4772;
                        var G__7316 = i4773;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7308, G__7309, G__7310, G__7311, G__7312, G__7313, G__7314, G__7315, G__7316) : f.call(null, G__7308, G__7309, G__7310, G__7311, G__7312, G__7313, G__7314, G__7315, G__7316);
                      }
                    } else {
                      var j4774 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774);
                        } else {
                          var G__7317 = a4765;
                          var G__7318 = b4766;
                          var G__7319 = c4767;
                          var G__7320 = d4768;
                          var G__7321 = e4769;
                          var G__7322 = f4770;
                          var G__7323 = g4771;
                          var G__7324 = h4772;
                          var G__7325 = i4773;
                          var G__7326 = j4774;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7317, G__7318, G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325, G__7326) : f.call(null, G__7317, G__7318, G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325, G__7326);
                        }
                      } else {
                        var k4775 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775);
                          } else {
                            var G__7327 = a4765;
                            var G__7328 = b4766;
                            var G__7329 = c4767;
                            var G__7330 = d4768;
                            var G__7331 = e4769;
                            var G__7332 = f4770;
                            var G__7333 = g4771;
                            var G__7334 = h4772;
                            var G__7335 = i4773;
                            var G__7336 = j4774;
                            var G__7337 = k4775;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7327, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333, G__7334, G__7335, G__7336, G__7337) : f.call(null, G__7327, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333, G__7334, G__7335, G__7336, G__7337);
                          }
                        } else {
                          var l4776 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776);
                            } else {
                              var G__7338 = a4765;
                              var G__7339 = b4766;
                              var G__7340 = c4767;
                              var G__7341 = d4768;
                              var G__7342 = e4769;
                              var G__7343 = f4770;
                              var G__7344 = g4771;
                              var G__7345 = h4772;
                              var G__7346 = i4773;
                              var G__7347 = j4774;
                              var G__7348 = k4775;
                              var G__7349 = l4776;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7338, G__7339, G__7340, G__7341, G__7342, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348, G__7349) : f.call(null, G__7338, G__7339, G__7340, G__7341, G__7342, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348, G__7349);
                            }
                          } else {
                            var m4777 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776, m4777);
                              } else {
                                var G__7350 = a4765;
                                var G__7351 = b4766;
                                var G__7352 = c4767;
                                var G__7353 = d4768;
                                var G__7354 = e4769;
                                var G__7355 = f4770;
                                var G__7356 = g4771;
                                var G__7357 = h4772;
                                var G__7358 = i4773;
                                var G__7359 = j4774;
                                var G__7360 = k4775;
                                var G__7361 = l4776;
                                var G__7362 = m4777;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7350, G__7351, G__7352, G__7353, G__7354, G__7355, G__7356, G__7357, G__7358, G__7359, G__7360, G__7361, G__7362) : f.call(null, G__7350, G__7351, G__7352, G__7353, G__7354, G__7355, G__7356, G__7357, G__7358, G__7359, G__7360, G__7361, G__7362);
                              }
                            } else {
                              var n4778 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776, m4777, n4778);
                                } else {
                                  var G__7363 = a4765;
                                  var G__7364 = b4766;
                                  var G__7365 = c4767;
                                  var G__7366 = d4768;
                                  var G__7367 = e4769;
                                  var G__7368 = f4770;
                                  var G__7369 = g4771;
                                  var G__7370 = h4772;
                                  var G__7371 = i4773;
                                  var G__7372 = j4774;
                                  var G__7373 = k4775;
                                  var G__7374 = l4776;
                                  var G__7375 = m4777;
                                  var G__7376 = n4778;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7363, G__7364, G__7365, G__7366, G__7367, G__7368, G__7369, G__7370, G__7371, G__7372, G__7373, G__7374, G__7375, G__7376) : f.call(null, G__7363, G__7364, G__7365, G__7366, G__7367, G__7368, G__7369, G__7370, G__7371, G__7372, G__7373, G__7374, G__7375, G__7376);
                                }
                              } else {
                                var o4779 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776, m4777, n4778, o4779);
                                  } else {
                                    var G__7377 = a4765;
                                    var G__7378 = b4766;
                                    var G__7379 = c4767;
                                    var G__7380 = d4768;
                                    var G__7381 = e4769;
                                    var G__7382 = f4770;
                                    var G__7383 = g4771;
                                    var G__7384 = h4772;
                                    var G__7385 = i4773;
                                    var G__7386 = j4774;
                                    var G__7387 = k4775;
                                    var G__7388 = l4776;
                                    var G__7389 = m4777;
                                    var G__7390 = n4778;
                                    var G__7391 = o4779;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7377, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, G__7385, G__7386, G__7387, G__7388, G__7389, G__7390, G__7391) : f.call(null, G__7377, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, G__7385, G__7386, G__7387, G__7388, G__7389, G__7390, G__7391);
                                  }
                                } else {
                                  var p4780 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776, m4777, n4778, o4779, p4780);
                                    } else {
                                      var G__7392 = a4765;
                                      var G__7393 = b4766;
                                      var G__7394 = c4767;
                                      var G__7395 = d4768;
                                      var G__7396 = e4769;
                                      var G__7397 = f4770;
                                      var G__7398 = g4771;
                                      var G__7399 = h4772;
                                      var G__7400 = i4773;
                                      var G__7401 = j4774;
                                      var G__7402 = k4775;
                                      var G__7403 = l4776;
                                      var G__7404 = m4777;
                                      var G__7405 = n4778;
                                      var G__7406 = o4779;
                                      var G__7407 = p4780;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7392, G__7393, G__7394, G__7395, G__7396, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402, G__7403, G__7404, G__7405, G__7406, G__7407) : f.call(null, G__7392, G__7393, G__7394, G__7395, G__7396, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402, G__7403, G__7404, G__7405, G__7406, G__7407);
                                    }
                                  } else {
                                    var q4781 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776, m4777, n4778, o4779, p4780, q4781);
                                      } else {
                                        var G__7408 = a4765;
                                        var G__7409 = b4766;
                                        var G__7410 = c4767;
                                        var G__7411 = d4768;
                                        var G__7412 = e4769;
                                        var G__7413 = f4770;
                                        var G__7414 = g4771;
                                        var G__7415 = h4772;
                                        var G__7416 = i4773;
                                        var G__7417 = j4774;
                                        var G__7418 = k4775;
                                        var G__7419 = l4776;
                                        var G__7420 = m4777;
                                        var G__7421 = n4778;
                                        var G__7422 = o4779;
                                        var G__7423 = p4780;
                                        var G__7424 = q4781;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416, G__7417, G__7418, G__7419, G__7420, G__7421, G__7422, G__7423, G__7424) : f.call(null, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416, G__7417, G__7418, G__7419, G__7420, G__7421, G__7422, G__7423, G__7424);
                                      }
                                    } else {
                                      var r4782 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776, m4777, n4778, o4779, p4780, q4781, r4782);
                                        } else {
                                          var G__7425 = a4765;
                                          var G__7426 = b4766;
                                          var G__7427 = c4767;
                                          var G__7428 = d4768;
                                          var G__7429 = e4769;
                                          var G__7430 = f4770;
                                          var G__7431 = g4771;
                                          var G__7432 = h4772;
                                          var G__7433 = i4773;
                                          var G__7434 = j4774;
                                          var G__7435 = k4775;
                                          var G__7436 = l4776;
                                          var G__7437 = m4777;
                                          var G__7438 = n4778;
                                          var G__7439 = o4779;
                                          var G__7440 = p4780;
                                          var G__7441 = q4781;
                                          var G__7442 = r4782;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7425, G__7426, G__7427, G__7428, G__7429, G__7430, G__7431, G__7432, G__7433, G__7434, G__7435, G__7436, G__7437, G__7438, G__7439, G__7440, G__7441, G__7442) : f.call(null, G__7425, G__7426, G__7427, G__7428, G__7429, G__7430, G__7431, G__7432, G__7433, G__7434, G__7435, G__7436, G__7437, G__7438, G__7439, G__7440, G__7441, G__7442);
                                        }
                                      } else {
                                        var s4783 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776, m4777, n4778, o4779, p4780, q4781, r4782, s4783);
                                          } else {
                                            var G__7443 = a4765;
                                            var G__7444 = b4766;
                                            var G__7445 = c4767;
                                            var G__7446 = d4768;
                                            var G__7447 = e4769;
                                            var G__7448 = f4770;
                                            var G__7449 = g4771;
                                            var G__7450 = h4772;
                                            var G__7451 = i4773;
                                            var G__7452 = j4774;
                                            var G__7453 = k4775;
                                            var G__7454 = l4776;
                                            var G__7455 = m4777;
                                            var G__7456 = n4778;
                                            var G__7457 = o4779;
                                            var G__7458 = p4780;
                                            var G__7459 = q4781;
                                            var G__7460 = r4782;
                                            var G__7461 = s4783;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7443, G__7444, G__7445, G__7446, G__7447, G__7448, G__7449, G__7450, G__7451, G__7452, G__7453, G__7454, G__7455, G__7456, G__7457, G__7458, G__7459, G__7460, G__7461) : f.call(null, G__7443, G__7444, G__7445, G__7446, G__7447, G__7448, G__7449, G__7450, G__7451, G__7452, G__7453, G__7454, G__7455, G__7456, G__7457, G__7458, G__7459, G__7460, G__7461);
                                          }
                                        } else {
                                          var t4784 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4765, b4766, c4767, d4768, e4769, f4770, g4771, h4772, i4773, j4774, k4775, l4776, m4777, n4778, o4779, p4780, q4781, r4782, s4783, t4784);
                                            } else {
                                              var G__7462 = a4765;
                                              var G__7463 = b4766;
                                              var G__7464 = c4767;
                                              var G__7465 = d4768;
                                              var G__7466 = e4769;
                                              var G__7467 = f4770;
                                              var G__7468 = g4771;
                                              var G__7469 = h4772;
                                              var G__7470 = i4773;
                                              var G__7471 = j4774;
                                              var G__7472 = k4775;
                                              var G__7473 = l4776;
                                              var G__7474 = m4777;
                                              var G__7475 = n4778;
                                              var G__7476 = o4779;
                                              var G__7477 = p4780;
                                              var G__7478 = q4781;
                                              var G__7479 = r4782;
                                              var G__7480 = s4783;
                                              var G__7481 = t4784;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7462, G__7463, G__7464, G__7465, G__7466, G__7467, G__7468, G__7469, G__7470, G__7471, G__7472, G__7473, G__7474, G__7475, G__7476, G__7477, G__7478, G__7479, G__7480, G__7481) : f.call(null, G__7462, G__7463, G__7464, G__7465, G__7466, G__7467, G__7468, G__7469, G__7470, G__7471, G__7472, G__7473, G__7474, G__7475, G__7476, G__7477, G__7478, G__7479, G__7480, G__7481);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__7482__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__7482 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__7483__i = 0, G__7483__a = new Array(arguments.length - 5);
        while (G__7483__i < G__7483__a.length) {
          G__7483__a[G__7483__i] = arguments[G__7483__i + 5];
          ++G__7483__i;
        }
        args = new cljs.core.IndexedSeq(G__7483__a, 0);
      }
      return G__7482__delegate.call(this, f, a, b, c, d, args);
    };
    G__7482.cljs$lang$maxFixedArity = 5;
    G__7482.cljs$lang$applyTo = function(arglist__7484) {
      var f = cljs.core.first(arglist__7484);
      arglist__7484 = cljs.core.next(arglist__7484);
      var a = cljs.core.first(arglist__7484);
      arglist__7484 = cljs.core.next(arglist__7484);
      var b = cljs.core.first(arglist__7484);
      arglist__7484 = cljs.core.next(arglist__7484);
      var c = cljs.core.first(arglist__7484);
      arglist__7484 = cljs.core.next(arglist__7484);
      var d = cljs.core.first(arglist__7484);
      var args = cljs.core.rest(arglist__7484);
      return G__7482__delegate(f, a, b, c, d, args);
    };
    G__7482.cljs$core$IFn$_invoke$arity$variadic = G__7482__delegate;
    return G__7482;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__7485 = null;
        if (arguments.length > 5) {
          var G__7486__i = 0, G__7486__a = new Array(arguments.length - 5);
          while (G__7486__i < G__7486__a.length) {
            G__7486__a[G__7486__i] = arguments[G__7486__i + 5];
            ++G__7486__i;
          }
          G__7485 = new cljs.core.IndexedSeq(G__7486__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__7485);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__7502 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7502) : f.call(null, G__7502);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__7503 = cljs.core.meta(obj);
      var G__7504 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7503, G__7504) : f.call(null, G__7503, G__7504);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__7505 = cljs.core.meta(obj);
      var G__7506 = a;
      var G__7507 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7505, G__7506, G__7507) : f.call(null, G__7505, G__7506, G__7507);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__7508 = cljs.core.meta(obj);
      var G__7509 = a;
      var G__7510 = b;
      var G__7511 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7508, G__7509, G__7510, G__7511) : f.call(null, G__7508, G__7509, G__7510, G__7511);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__7512 = cljs.core.meta(obj);
      var G__7513 = a;
      var G__7514 = b;
      var G__7515 = c;
      var G__7516 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7512, G__7513, G__7514, G__7515, G__7516) : f.call(null, G__7512, G__7513, G__7514, G__7515, G__7516);
    }());
  };
  var vary_meta__7 = function() {
    var G__7517__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__7517 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__7518__i = 0, G__7518__a = new Array(arguments.length - 6);
        while (G__7518__i < G__7518__a.length) {
          G__7518__a[G__7518__i] = arguments[G__7518__i + 6];
          ++G__7518__i;
        }
        args = new cljs.core.IndexedSeq(G__7518__a, 0);
      }
      return G__7517__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__7517.cljs$lang$maxFixedArity = 6;
    G__7517.cljs$lang$applyTo = function(arglist__7519) {
      var obj = cljs.core.first(arglist__7519);
      arglist__7519 = cljs.core.next(arglist__7519);
      var f = cljs.core.first(arglist__7519);
      arglist__7519 = cljs.core.next(arglist__7519);
      var a = cljs.core.first(arglist__7519);
      arglist__7519 = cljs.core.next(arglist__7519);
      var b = cljs.core.first(arglist__7519);
      arglist__7519 = cljs.core.next(arglist__7519);
      var c = cljs.core.first(arglist__7519);
      arglist__7519 = cljs.core.next(arglist__7519);
      var d = cljs.core.first(arglist__7519);
      var args = cljs.core.rest(arglist__7519);
      return G__7517__delegate(obj, f, a, b, c, d, args);
    };
    G__7517.cljs$core$IFn$_invoke$arity$variadic = G__7517__delegate;
    return G__7517;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__7520 = null;
        if (arguments.length > 6) {
          var G__7521__i = 0, G__7521__a = new Array(arguments.length - 6);
          while (G__7521__i < G__7521__a.length) {
            G__7521__a[G__7521__i] = arguments[G__7521__i + 6];
            ++G__7521__i;
          }
          G__7520 = new cljs.core.IndexedSeq(G__7521__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__7520);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__7522__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__7522 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__7523__i = 0, G__7523__a = new Array(arguments.length - 2);
        while (G__7523__i < G__7523__a.length) {
          G__7523__a[G__7523__i] = arguments[G__7523__i + 2];
          ++G__7523__i;
        }
        more = new cljs.core.IndexedSeq(G__7523__a, 0);
      }
      return G__7522__delegate.call(this, x, y, more);
    };
    G__7522.cljs$lang$maxFixedArity = 2;
    G__7522.cljs$lang$applyTo = function(arglist__7524) {
      var x = cljs.core.first(arglist__7524);
      arglist__7524 = cljs.core.next(arglist__7524);
      var y = cljs.core.first(arglist__7524);
      var more = cljs.core.rest(arglist__7524);
      return G__7522__delegate(x, y, more);
    };
    G__7522.cljs$core$IFn$_invoke$arity$variadic = G__7522__delegate;
    return G__7522;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__7525 = null;
        if (arguments.length > 2) {
          var G__7526__i = 0, G__7526__a = new Array(arguments.length - 2);
          while (G__7526__i < G__7526__a.length) {
            G__7526__a[G__7526__i] = arguments[G__7526__i + 2];
            ++G__7526__i;
          }
          G__7525 = new cljs.core.IndexedSeq(G__7526__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7525);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t7530 !== "undefined") {
  } else {
    cljs.core.t7530 = function(nil_iter, meta7531) {
      this.nil_iter = nil_iter;
      this.meta7531 = meta7531;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t7530.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t7530.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t7530.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t7530.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7532) {
      var self__ = this;
      var _7532__$1 = this;
      return self__.meta7531;
    };
    cljs.core.t7530.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7532, meta7531__$1) {
      var self__ = this;
      var _7532__$1 = this;
      return new cljs.core.t7530(self__.nil_iter, meta7531__$1);
    };
    cljs.core.t7530.cljs$lang$type = true;
    cljs.core.t7530.cljs$lang$ctorStr = "cljs.core/t7530";
    cljs.core.t7530.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
      return cljs.core._write(writer__4422__auto__, "cljs.core/t7530");
    };
    cljs.core.__GT_t7530 = function __GT_t7530(nil_iter__$1, meta7531) {
      return new cljs.core.t7530(nil_iter__$1, meta7531);
    };
  }
  return new cljs.core.t7530(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3063, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3059, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/l1x/code/h2t/target/cljsbuild-compiler-1/cljs/core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3822__auto__ = !(lt.stepper == null);
      if (and__3822__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3822__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__7533 = lt;
        var G__7534 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7533, G__7534) : self__.xform.call(null, G__7533, G__7534);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7535 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7535) : self__.xform.call(null, G__7535);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__7537 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7537) : xform.call(null, G__7537);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__7539 = cljs.core.next(iters__$1);
        iters__$1 = G__7539;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4721__auto___7540 = self__.iters.length;
  var i_7541 = 0;
  while (true) {
    if (i_7541 < n__4721__auto___7540) {
      self__.nexts[i_7541] = self__.iters[i_7541].next();
      var G__7542 = i_7541 + 1;
      i_7541 = G__7542;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3822__auto__ = !(lt.stepper == null);
      if (and__3822__auto__) {
        return this$.hasNext();
      } else {
        return and__3822__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7538 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7538) : self__.xform.call(null, G__7538);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__7547 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7547) : xform.call(null, G__7547);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__7548_7552 = cljs.core.seq(colls);
  var chunk__7549_7553 = null;
  var count__7550_7554 = 0;
  var i__7551_7555 = 0;
  while (true) {
    if (i__7551_7555 < count__7550_7554) {
      var coll_7556 = chunk__7549_7553.cljs$core$IIndexed$_nth$arity$2(null, i__7551_7555);
      iters.push(cljs.core.iter(coll_7556));
      var G__7557 = seq__7548_7552;
      var G__7558 = chunk__7549_7553;
      var G__7559 = count__7550_7554;
      var G__7560 = i__7551_7555 + 1;
      seq__7548_7552 = G__7557;
      chunk__7549_7553 = G__7558;
      count__7550_7554 = G__7559;
      i__7551_7555 = G__7560;
      continue;
    } else {
      var temp__4126__auto___7561 = cljs.core.seq(seq__7548_7552);
      if (temp__4126__auto___7561) {
        var seq__7548_7562__$1 = temp__4126__auto___7561;
        if (cljs.core.chunked_seq_QMARK_(seq__7548_7562__$1)) {
          var c__4621__auto___7563 = cljs.core.chunk_first(seq__7548_7562__$1);
          var G__7564 = cljs.core.chunk_rest(seq__7548_7562__$1);
          var G__7565 = c__4621__auto___7563;
          var G__7566 = cljs.core.count(c__4621__auto___7563);
          var G__7567 = 0;
          seq__7548_7552 = G__7564;
          chunk__7549_7553 = G__7565;
          count__7550_7554 = G__7566;
          i__7551_7555 = G__7567;
          continue;
        } else {
          var coll_7568 = cljs.core.first(seq__7548_7562__$1);
          iters.push(cljs.core.iter(coll_7568));
          var G__7569 = cljs.core.next(seq__7548_7562__$1);
          var G__7570 = null;
          var G__7571 = 0;
          var G__7572 = 0;
          seq__7548_7552 = G__7569;
          chunk__7549_7553 = G__7570;
          count__7550_7554 = G__7571;
          i__7551_7555 = G__7572;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3834__auto__ = cljs.core.seq(coll);
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__7573__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__7573 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__7574__i = 0, G__7574__a = new Array(arguments.length - 2);
        while (G__7574__i < G__7574__a.length) {
          G__7574__a[G__7574__i] = arguments[G__7574__i + 2];
          ++G__7574__i;
        }
        colls = new cljs.core.IndexedSeq(G__7574__a, 0);
      }
      return G__7573__delegate.call(this, xform, coll, colls);
    };
    G__7573.cljs$lang$maxFixedArity = 2;
    G__7573.cljs$lang$applyTo = function(arglist__7575) {
      var xform = cljs.core.first(arglist__7575);
      arglist__7575 = cljs.core.next(arglist__7575);
      var coll = cljs.core.first(arglist__7575);
      var colls = cljs.core.rest(arglist__7575);
      return G__7573__delegate(xform, coll, colls);
    };
    G__7573.cljs$core$IFn$_invoke$arity$variadic = G__7573__delegate;
    return G__7573;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__7576 = null;
        if (arguments.length > 2) {
          var G__7577__i = 0, G__7577__a = new Array(arguments.length - 2);
          while (G__7577__i < G__7577__a.length) {
            G__7577__a[G__7577__i] = arguments[G__7577__i + 2];
            ++G__7577__i;
          }
          G__7576 = new cljs.core.IndexedSeq(G__7577__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__7576);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7579 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7579) : pred.call(null, G__7579);
      }())) {
        var G__7580 = pred;
        var G__7581 = cljs.core.next(coll);
        pred = G__7580;
        coll = G__7581;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3834__auto__ = function() {
        var G__7585 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7585) : pred.call(null, G__7585);
      }();
      if (cljs.core.truth_(or__3834__auto__)) {
        return or__3834__auto__;
      } else {
        var G__7586 = pred;
        var G__7587 = cljs.core.next(coll);
        pred = G__7586;
        coll = G__7587;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__7594 = null;
    var G__7594__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__7594__1 = function(x) {
      return cljs.core.not(function() {
        var G__7591 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7591) : f.call(null, G__7591);
      }());
    };
    var G__7594__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__7592 = x;
        var G__7593 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7592, G__7593) : f.call(null, G__7592, G__7593);
      }());
    };
    var G__7594__3 = function() {
      var G__7595__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7595 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7596__i = 0, G__7596__a = new Array(arguments.length - 2);
          while (G__7596__i < G__7596__a.length) {
            G__7596__a[G__7596__i] = arguments[G__7596__i + 2];
            ++G__7596__i;
          }
          zs = new cljs.core.IndexedSeq(G__7596__a, 0);
        }
        return G__7595__delegate.call(this, x, y, zs);
      };
      G__7595.cljs$lang$maxFixedArity = 2;
      G__7595.cljs$lang$applyTo = function(arglist__7597) {
        var x = cljs.core.first(arglist__7597);
        arglist__7597 = cljs.core.next(arglist__7597);
        var y = cljs.core.first(arglist__7597);
        var zs = cljs.core.rest(arglist__7597);
        return G__7595__delegate(x, y, zs);
      };
      G__7595.cljs$core$IFn$_invoke$arity$variadic = G__7595__delegate;
      return G__7595;
    }();
    G__7594 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7594__0.call(this);
        case 1:
          return G__7594__1.call(this, x);
        case 2:
          return G__7594__2.call(this, x, y);
        default:
          var G__7598 = null;
          if (arguments.length > 2) {
            var G__7599__i = 0, G__7599__a = new Array(arguments.length - 2);
            while (G__7599__i < G__7599__a.length) {
              G__7599__a[G__7599__i] = arguments[G__7599__i + 2];
              ++G__7599__i;
            }
            G__7598 = new cljs.core.IndexedSeq(G__7599__a, 0);
          }
          return G__7594__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7598);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7594.cljs$lang$maxFixedArity = 2;
    G__7594.cljs$lang$applyTo = G__7594__3.cljs$lang$applyTo;
    G__7594.cljs$core$IFn$_invoke$arity$0 = G__7594__0;
    G__7594.cljs$core$IFn$_invoke$arity$1 = G__7594__1;
    G__7594.cljs$core$IFn$_invoke$arity$2 = G__7594__2;
    G__7594.cljs$core$IFn$_invoke$arity$variadic = G__7594__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7594;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__7600__delegate = function(args) {
      return x;
    };
    var G__7600 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7601__i = 0, G__7601__a = new Array(arguments.length - 0);
        while (G__7601__i < G__7601__a.length) {
          G__7601__a[G__7601__i] = arguments[G__7601__i + 0];
          ++G__7601__i;
        }
        args = new cljs.core.IndexedSeq(G__7601__a, 0);
      }
      return G__7600__delegate.call(this, args);
    };
    G__7600.cljs$lang$maxFixedArity = 0;
    G__7600.cljs$lang$applyTo = function(arglist__7602) {
      var args = cljs.core.seq(arglist__7602);
      return G__7600__delegate(args);
    };
    G__7600.cljs$core$IFn$_invoke$arity$variadic = G__7600__delegate;
    return G__7600;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__7657 = null;
      var G__7657__0 = function() {
        var G__7630 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7630) : f.call(null, G__7630);
      };
      var G__7657__1 = function(x) {
        var G__7631 = function() {
          var G__7632 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7632) : g.call(null, G__7632);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7631) : f.call(null, G__7631);
      };
      var G__7657__2 = function(x, y) {
        var G__7633 = function() {
          var G__7634 = x;
          var G__7635 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7634, G__7635) : g.call(null, G__7634, G__7635);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7633) : f.call(null, G__7633);
      };
      var G__7657__3 = function(x, y, z) {
        var G__7636 = function() {
          var G__7637 = x;
          var G__7638 = y;
          var G__7639 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7637, G__7638, G__7639) : g.call(null, G__7637, G__7638, G__7639);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7636) : f.call(null, G__7636);
      };
      var G__7657__4 = function() {
        var G__7658__delegate = function(x, y, z, args) {
          var G__7640 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7640) : f.call(null, G__7640);
        };
        var G__7658 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7659__i = 0, G__7659__a = new Array(arguments.length - 3);
            while (G__7659__i < G__7659__a.length) {
              G__7659__a[G__7659__i] = arguments[G__7659__i + 3];
              ++G__7659__i;
            }
            args = new cljs.core.IndexedSeq(G__7659__a, 0);
          }
          return G__7658__delegate.call(this, x, y, z, args);
        };
        G__7658.cljs$lang$maxFixedArity = 3;
        G__7658.cljs$lang$applyTo = function(arglist__7660) {
          var x = cljs.core.first(arglist__7660);
          arglist__7660 = cljs.core.next(arglist__7660);
          var y = cljs.core.first(arglist__7660);
          arglist__7660 = cljs.core.next(arglist__7660);
          var z = cljs.core.first(arglist__7660);
          var args = cljs.core.rest(arglist__7660);
          return G__7658__delegate(x, y, z, args);
        };
        G__7658.cljs$core$IFn$_invoke$arity$variadic = G__7658__delegate;
        return G__7658;
      }();
      G__7657 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7657__0.call(this);
          case 1:
            return G__7657__1.call(this, x);
          case 2:
            return G__7657__2.call(this, x, y);
          case 3:
            return G__7657__3.call(this, x, y, z);
          default:
            var G__7661 = null;
            if (arguments.length > 3) {
              var G__7662__i = 0, G__7662__a = new Array(arguments.length - 3);
              while (G__7662__i < G__7662__a.length) {
                G__7662__a[G__7662__i] = arguments[G__7662__i + 3];
                ++G__7662__i;
              }
              G__7661 = new cljs.core.IndexedSeq(G__7662__a, 0);
            }
            return G__7657__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7661);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7657.cljs$lang$maxFixedArity = 3;
      G__7657.cljs$lang$applyTo = G__7657__4.cljs$lang$applyTo;
      G__7657.cljs$core$IFn$_invoke$arity$0 = G__7657__0;
      G__7657.cljs$core$IFn$_invoke$arity$1 = G__7657__1;
      G__7657.cljs$core$IFn$_invoke$arity$2 = G__7657__2;
      G__7657.cljs$core$IFn$_invoke$arity$3 = G__7657__3;
      G__7657.cljs$core$IFn$_invoke$arity$variadic = G__7657__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7657;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__7663 = null;
      var G__7663__0 = function() {
        var G__7641 = function() {
          var G__7642 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7642) : g.call(null, G__7642);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7641) : f.call(null, G__7641);
      };
      var G__7663__1 = function(x) {
        var G__7643 = function() {
          var G__7644 = function() {
            var G__7645 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7645) : h.call(null, G__7645);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7644) : g.call(null, G__7644);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7643) : f.call(null, G__7643);
      };
      var G__7663__2 = function(x, y) {
        var G__7646 = function() {
          var G__7647 = function() {
            var G__7648 = x;
            var G__7649 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7648, G__7649) : h.call(null, G__7648, G__7649);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7647) : g.call(null, G__7647);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7646) : f.call(null, G__7646);
      };
      var G__7663__3 = function(x, y, z) {
        var G__7650 = function() {
          var G__7651 = function() {
            var G__7652 = x;
            var G__7653 = y;
            var G__7654 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7652, G__7653, G__7654) : h.call(null, G__7652, G__7653, G__7654);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7651) : g.call(null, G__7651);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7650) : f.call(null, G__7650);
      };
      var G__7663__4 = function() {
        var G__7664__delegate = function(x, y, z, args) {
          var G__7655 = function() {
            var G__7656 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7656) : g.call(null, G__7656);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7655) : f.call(null, G__7655);
        };
        var G__7664 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7665__i = 0, G__7665__a = new Array(arguments.length - 3);
            while (G__7665__i < G__7665__a.length) {
              G__7665__a[G__7665__i] = arguments[G__7665__i + 3];
              ++G__7665__i;
            }
            args = new cljs.core.IndexedSeq(G__7665__a, 0);
          }
          return G__7664__delegate.call(this, x, y, z, args);
        };
        G__7664.cljs$lang$maxFixedArity = 3;
        G__7664.cljs$lang$applyTo = function(arglist__7666) {
          var x = cljs.core.first(arglist__7666);
          arglist__7666 = cljs.core.next(arglist__7666);
          var y = cljs.core.first(arglist__7666);
          arglist__7666 = cljs.core.next(arglist__7666);
          var z = cljs.core.first(arglist__7666);
          var args = cljs.core.rest(arglist__7666);
          return G__7664__delegate(x, y, z, args);
        };
        G__7664.cljs$core$IFn$_invoke$arity$variadic = G__7664__delegate;
        return G__7664;
      }();
      G__7663 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7663__0.call(this);
          case 1:
            return G__7663__1.call(this, x);
          case 2:
            return G__7663__2.call(this, x, y);
          case 3:
            return G__7663__3.call(this, x, y, z);
          default:
            var G__7667 = null;
            if (arguments.length > 3) {
              var G__7668__i = 0, G__7668__a = new Array(arguments.length - 3);
              while (G__7668__i < G__7668__a.length) {
                G__7668__a[G__7668__i] = arguments[G__7668__i + 3];
                ++G__7668__i;
              }
              G__7667 = new cljs.core.IndexedSeq(G__7668__a, 0);
            }
            return G__7663__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7667);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7663.cljs$lang$maxFixedArity = 3;
      G__7663.cljs$lang$applyTo = G__7663__4.cljs$lang$applyTo;
      G__7663.cljs$core$IFn$_invoke$arity$0 = G__7663__0;
      G__7663.cljs$core$IFn$_invoke$arity$1 = G__7663__1;
      G__7663.cljs$core$IFn$_invoke$arity$2 = G__7663__2;
      G__7663.cljs$core$IFn$_invoke$arity$3 = G__7663__3;
      G__7663.cljs$core$IFn$_invoke$arity$variadic = G__7663__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7663;
    }();
  };
  var comp__4 = function() {
    var G__7669__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__7670__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__7671 = cljs.core.first(fs__$2).call(null, ret);
                var G__7672 = cljs.core.next(fs__$2);
                ret = G__7671;
                fs__$2 = G__7672;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__7670 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__7673__i = 0, G__7673__a = new Array(arguments.length - 0);
              while (G__7673__i < G__7673__a.length) {
                G__7673__a[G__7673__i] = arguments[G__7673__i + 0];
                ++G__7673__i;
              }
              args = new cljs.core.IndexedSeq(G__7673__a, 0);
            }
            return G__7670__delegate.call(this, args);
          };
          G__7670.cljs$lang$maxFixedArity = 0;
          G__7670.cljs$lang$applyTo = function(arglist__7674) {
            var args = cljs.core.seq(arglist__7674);
            return G__7670__delegate(args);
          };
          G__7670.cljs$core$IFn$_invoke$arity$variadic = G__7670__delegate;
          return G__7670;
        }();
      }(fs__$1);
    };
    var G__7669 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__7675__i = 0, G__7675__a = new Array(arguments.length - 3);
        while (G__7675__i < G__7675__a.length) {
          G__7675__a[G__7675__i] = arguments[G__7675__i + 3];
          ++G__7675__i;
        }
        fs = new cljs.core.IndexedSeq(G__7675__a, 0);
      }
      return G__7669__delegate.call(this, f1, f2, f3, fs);
    };
    G__7669.cljs$lang$maxFixedArity = 3;
    G__7669.cljs$lang$applyTo = function(arglist__7676) {
      var f1 = cljs.core.first(arglist__7676);
      arglist__7676 = cljs.core.next(arglist__7676);
      var f2 = cljs.core.first(arglist__7676);
      arglist__7676 = cljs.core.next(arglist__7676);
      var f3 = cljs.core.first(arglist__7676);
      var fs = cljs.core.rest(arglist__7676);
      return G__7669__delegate(f1, f2, f3, fs);
    };
    G__7669.cljs$core$IFn$_invoke$arity$variadic = G__7669__delegate;
    return G__7669;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__7677 = null;
        if (arguments.length > 3) {
          var G__7678__i = 0, G__7678__a = new Array(arguments.length - 3);
          while (G__7678__i < G__7678__a.length) {
            G__7678__a[G__7678__i] = arguments[G__7678__i + 3];
            ++G__7678__i;
          }
          G__7677 = new cljs.core.IndexedSeq(G__7678__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__7677);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__7763 = null;
      var G__7763__0 = function() {
        var G__7721 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7721) : f.call(null, G__7721);
      };
      var G__7763__1 = function(x) {
        var G__7722 = arg1;
        var G__7723 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7722, G__7723) : f.call(null, G__7722, G__7723);
      };
      var G__7763__2 = function(x, y) {
        var G__7724 = arg1;
        var G__7725 = x;
        var G__7726 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7724, G__7725, G__7726) : f.call(null, G__7724, G__7725, G__7726);
      };
      var G__7763__3 = function(x, y, z) {
        var G__7727 = arg1;
        var G__7728 = x;
        var G__7729 = y;
        var G__7730 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7727, G__7728, G__7729, G__7730) : f.call(null, G__7727, G__7728, G__7729, G__7730);
      };
      var G__7763__4 = function() {
        var G__7764__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__7764 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7765__i = 0, G__7765__a = new Array(arguments.length - 3);
            while (G__7765__i < G__7765__a.length) {
              G__7765__a[G__7765__i] = arguments[G__7765__i + 3];
              ++G__7765__i;
            }
            args = new cljs.core.IndexedSeq(G__7765__a, 0);
          }
          return G__7764__delegate.call(this, x, y, z, args);
        };
        G__7764.cljs$lang$maxFixedArity = 3;
        G__7764.cljs$lang$applyTo = function(arglist__7766) {
          var x = cljs.core.first(arglist__7766);
          arglist__7766 = cljs.core.next(arglist__7766);
          var y = cljs.core.first(arglist__7766);
          arglist__7766 = cljs.core.next(arglist__7766);
          var z = cljs.core.first(arglist__7766);
          var args = cljs.core.rest(arglist__7766);
          return G__7764__delegate(x, y, z, args);
        };
        G__7764.cljs$core$IFn$_invoke$arity$variadic = G__7764__delegate;
        return G__7764;
      }();
      G__7763 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7763__0.call(this);
          case 1:
            return G__7763__1.call(this, x);
          case 2:
            return G__7763__2.call(this, x, y);
          case 3:
            return G__7763__3.call(this, x, y, z);
          default:
            var G__7767 = null;
            if (arguments.length > 3) {
              var G__7768__i = 0, G__7768__a = new Array(arguments.length - 3);
              while (G__7768__i < G__7768__a.length) {
                G__7768__a[G__7768__i] = arguments[G__7768__i + 3];
                ++G__7768__i;
              }
              G__7767 = new cljs.core.IndexedSeq(G__7768__a, 0);
            }
            return G__7763__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7767);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7763.cljs$lang$maxFixedArity = 3;
      G__7763.cljs$lang$applyTo = G__7763__4.cljs$lang$applyTo;
      G__7763.cljs$core$IFn$_invoke$arity$0 = G__7763__0;
      G__7763.cljs$core$IFn$_invoke$arity$1 = G__7763__1;
      G__7763.cljs$core$IFn$_invoke$arity$2 = G__7763__2;
      G__7763.cljs$core$IFn$_invoke$arity$3 = G__7763__3;
      G__7763.cljs$core$IFn$_invoke$arity$variadic = G__7763__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7763;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__7769 = null;
      var G__7769__0 = function() {
        var G__7731 = arg1;
        var G__7732 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7731, G__7732) : f.call(null, G__7731, G__7732);
      };
      var G__7769__1 = function(x) {
        var G__7733 = arg1;
        var G__7734 = arg2;
        var G__7735 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7733, G__7734, G__7735) : f.call(null, G__7733, G__7734, G__7735);
      };
      var G__7769__2 = function(x, y) {
        var G__7736 = arg1;
        var G__7737 = arg2;
        var G__7738 = x;
        var G__7739 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7736, G__7737, G__7738, G__7739) : f.call(null, G__7736, G__7737, G__7738, G__7739);
      };
      var G__7769__3 = function(x, y, z) {
        var G__7740 = arg1;
        var G__7741 = arg2;
        var G__7742 = x;
        var G__7743 = y;
        var G__7744 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7740, G__7741, G__7742, G__7743, G__7744) : f.call(null, G__7740, G__7741, G__7742, G__7743, G__7744);
      };
      var G__7769__4 = function() {
        var G__7770__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__7770 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7771__i = 0, G__7771__a = new Array(arguments.length - 3);
            while (G__7771__i < G__7771__a.length) {
              G__7771__a[G__7771__i] = arguments[G__7771__i + 3];
              ++G__7771__i;
            }
            args = new cljs.core.IndexedSeq(G__7771__a, 0);
          }
          return G__7770__delegate.call(this, x, y, z, args);
        };
        G__7770.cljs$lang$maxFixedArity = 3;
        G__7770.cljs$lang$applyTo = function(arglist__7772) {
          var x = cljs.core.first(arglist__7772);
          arglist__7772 = cljs.core.next(arglist__7772);
          var y = cljs.core.first(arglist__7772);
          arglist__7772 = cljs.core.next(arglist__7772);
          var z = cljs.core.first(arglist__7772);
          var args = cljs.core.rest(arglist__7772);
          return G__7770__delegate(x, y, z, args);
        };
        G__7770.cljs$core$IFn$_invoke$arity$variadic = G__7770__delegate;
        return G__7770;
      }();
      G__7769 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7769__0.call(this);
          case 1:
            return G__7769__1.call(this, x);
          case 2:
            return G__7769__2.call(this, x, y);
          case 3:
            return G__7769__3.call(this, x, y, z);
          default:
            var G__7773 = null;
            if (arguments.length > 3) {
              var G__7774__i = 0, G__7774__a = new Array(arguments.length - 3);
              while (G__7774__i < G__7774__a.length) {
                G__7774__a[G__7774__i] = arguments[G__7774__i + 3];
                ++G__7774__i;
              }
              G__7773 = new cljs.core.IndexedSeq(G__7774__a, 0);
            }
            return G__7769__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7773);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7769.cljs$lang$maxFixedArity = 3;
      G__7769.cljs$lang$applyTo = G__7769__4.cljs$lang$applyTo;
      G__7769.cljs$core$IFn$_invoke$arity$0 = G__7769__0;
      G__7769.cljs$core$IFn$_invoke$arity$1 = G__7769__1;
      G__7769.cljs$core$IFn$_invoke$arity$2 = G__7769__2;
      G__7769.cljs$core$IFn$_invoke$arity$3 = G__7769__3;
      G__7769.cljs$core$IFn$_invoke$arity$variadic = G__7769__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7769;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__7775 = null;
      var G__7775__0 = function() {
        var G__7745 = arg1;
        var G__7746 = arg2;
        var G__7747 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7745, G__7746, G__7747) : f.call(null, G__7745, G__7746, G__7747);
      };
      var G__7775__1 = function(x) {
        var G__7748 = arg1;
        var G__7749 = arg2;
        var G__7750 = arg3;
        var G__7751 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7748, G__7749, G__7750, G__7751) : f.call(null, G__7748, G__7749, G__7750, G__7751);
      };
      var G__7775__2 = function(x, y) {
        var G__7752 = arg1;
        var G__7753 = arg2;
        var G__7754 = arg3;
        var G__7755 = x;
        var G__7756 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7752, G__7753, G__7754, G__7755, G__7756) : f.call(null, G__7752, G__7753, G__7754, G__7755, G__7756);
      };
      var G__7775__3 = function(x, y, z) {
        var G__7757 = arg1;
        var G__7758 = arg2;
        var G__7759 = arg3;
        var G__7760 = x;
        var G__7761 = y;
        var G__7762 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7757, G__7758, G__7759, G__7760, G__7761, G__7762) : f.call(null, G__7757, G__7758, G__7759, G__7760, G__7761, G__7762);
      };
      var G__7775__4 = function() {
        var G__7776__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__7776 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7777__i = 0, G__7777__a = new Array(arguments.length - 3);
            while (G__7777__i < G__7777__a.length) {
              G__7777__a[G__7777__i] = arguments[G__7777__i + 3];
              ++G__7777__i;
            }
            args = new cljs.core.IndexedSeq(G__7777__a, 0);
          }
          return G__7776__delegate.call(this, x, y, z, args);
        };
        G__7776.cljs$lang$maxFixedArity = 3;
        G__7776.cljs$lang$applyTo = function(arglist__7778) {
          var x = cljs.core.first(arglist__7778);
          arglist__7778 = cljs.core.next(arglist__7778);
          var y = cljs.core.first(arglist__7778);
          arglist__7778 = cljs.core.next(arglist__7778);
          var z = cljs.core.first(arglist__7778);
          var args = cljs.core.rest(arglist__7778);
          return G__7776__delegate(x, y, z, args);
        };
        G__7776.cljs$core$IFn$_invoke$arity$variadic = G__7776__delegate;
        return G__7776;
      }();
      G__7775 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7775__0.call(this);
          case 1:
            return G__7775__1.call(this, x);
          case 2:
            return G__7775__2.call(this, x, y);
          case 3:
            return G__7775__3.call(this, x, y, z);
          default:
            var G__7779 = null;
            if (arguments.length > 3) {
              var G__7780__i = 0, G__7780__a = new Array(arguments.length - 3);
              while (G__7780__i < G__7780__a.length) {
                G__7780__a[G__7780__i] = arguments[G__7780__i + 3];
                ++G__7780__i;
              }
              G__7779 = new cljs.core.IndexedSeq(G__7780__a, 0);
            }
            return G__7775__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7779);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7775.cljs$lang$maxFixedArity = 3;
      G__7775.cljs$lang$applyTo = G__7775__4.cljs$lang$applyTo;
      G__7775.cljs$core$IFn$_invoke$arity$0 = G__7775__0;
      G__7775.cljs$core$IFn$_invoke$arity$1 = G__7775__1;
      G__7775.cljs$core$IFn$_invoke$arity$2 = G__7775__2;
      G__7775.cljs$core$IFn$_invoke$arity$3 = G__7775__3;
      G__7775.cljs$core$IFn$_invoke$arity$variadic = G__7775__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7775;
    }();
  };
  var partial__5 = function() {
    var G__7781__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__7782__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__7782 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__7783__i = 0, G__7783__a = new Array(arguments.length - 0);
            while (G__7783__i < G__7783__a.length) {
              G__7783__a[G__7783__i] = arguments[G__7783__i + 0];
              ++G__7783__i;
            }
            args = new cljs.core.IndexedSeq(G__7783__a, 0);
          }
          return G__7782__delegate.call(this, args);
        };
        G__7782.cljs$lang$maxFixedArity = 0;
        G__7782.cljs$lang$applyTo = function(arglist__7784) {
          var args = cljs.core.seq(arglist__7784);
          return G__7782__delegate(args);
        };
        G__7782.cljs$core$IFn$_invoke$arity$variadic = G__7782__delegate;
        return G__7782;
      }();
    };
    var G__7781 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7785__i = 0, G__7785__a = new Array(arguments.length - 4);
        while (G__7785__i < G__7785__a.length) {
          G__7785__a[G__7785__i] = arguments[G__7785__i + 4];
          ++G__7785__i;
        }
        more = new cljs.core.IndexedSeq(G__7785__a, 0);
      }
      return G__7781__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__7781.cljs$lang$maxFixedArity = 4;
    G__7781.cljs$lang$applyTo = function(arglist__7786) {
      var f = cljs.core.first(arglist__7786);
      arglist__7786 = cljs.core.next(arglist__7786);
      var arg1 = cljs.core.first(arglist__7786);
      arglist__7786 = cljs.core.next(arglist__7786);
      var arg2 = cljs.core.first(arglist__7786);
      arglist__7786 = cljs.core.next(arglist__7786);
      var arg3 = cljs.core.first(arglist__7786);
      var more = cljs.core.rest(arglist__7786);
      return G__7781__delegate(f, arg1, arg2, arg3, more);
    };
    G__7781.cljs$core$IFn$_invoke$arity$variadic = G__7781__delegate;
    return G__7781;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__7787 = null;
        if (arguments.length > 4) {
          var G__7788__i = 0, G__7788__a = new Array(arguments.length - 4);
          while (G__7788__i < G__7788__a.length) {
            G__7788__a[G__7788__i] = arguments[G__7788__i + 4];
            ++G__7788__i;
          }
          G__7787 = new cljs.core.IndexedSeq(G__7788__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__7787);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__7821 = null;
      var G__7821__1 = function(a) {
        var G__7805 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7805) : f.call(null, G__7805);
      };
      var G__7821__2 = function(a, b) {
        var G__7806 = a == null ? x : a;
        var G__7807 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7806, G__7807) : f.call(null, G__7806, G__7807);
      };
      var G__7821__3 = function(a, b, c) {
        var G__7808 = a == null ? x : a;
        var G__7809 = b;
        var G__7810 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7808, G__7809, G__7810) : f.call(null, G__7808, G__7809, G__7810);
      };
      var G__7821__4 = function() {
        var G__7822__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__7822 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7823__i = 0, G__7823__a = new Array(arguments.length - 3);
            while (G__7823__i < G__7823__a.length) {
              G__7823__a[G__7823__i] = arguments[G__7823__i + 3];
              ++G__7823__i;
            }
            ds = new cljs.core.IndexedSeq(G__7823__a, 0);
          }
          return G__7822__delegate.call(this, a, b, c, ds);
        };
        G__7822.cljs$lang$maxFixedArity = 3;
        G__7822.cljs$lang$applyTo = function(arglist__7824) {
          var a = cljs.core.first(arglist__7824);
          arglist__7824 = cljs.core.next(arglist__7824);
          var b = cljs.core.first(arglist__7824);
          arglist__7824 = cljs.core.next(arglist__7824);
          var c = cljs.core.first(arglist__7824);
          var ds = cljs.core.rest(arglist__7824);
          return G__7822__delegate(a, b, c, ds);
        };
        G__7822.cljs$core$IFn$_invoke$arity$variadic = G__7822__delegate;
        return G__7822;
      }();
      G__7821 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__7821__1.call(this, a);
          case 2:
            return G__7821__2.call(this, a, b);
          case 3:
            return G__7821__3.call(this, a, b, c);
          default:
            var G__7825 = null;
            if (arguments.length > 3) {
              var G__7826__i = 0, G__7826__a = new Array(arguments.length - 3);
              while (G__7826__i < G__7826__a.length) {
                G__7826__a[G__7826__i] = arguments[G__7826__i + 3];
                ++G__7826__i;
              }
              G__7825 = new cljs.core.IndexedSeq(G__7826__a, 0);
            }
            return G__7821__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7825);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7821.cljs$lang$maxFixedArity = 3;
      G__7821.cljs$lang$applyTo = G__7821__4.cljs$lang$applyTo;
      G__7821.cljs$core$IFn$_invoke$arity$1 = G__7821__1;
      G__7821.cljs$core$IFn$_invoke$arity$2 = G__7821__2;
      G__7821.cljs$core$IFn$_invoke$arity$3 = G__7821__3;
      G__7821.cljs$core$IFn$_invoke$arity$variadic = G__7821__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7821;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__7827 = null;
      var G__7827__2 = function(a, b) {
        var G__7811 = a == null ? x : a;
        var G__7812 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7811, G__7812) : f.call(null, G__7811, G__7812);
      };
      var G__7827__3 = function(a, b, c) {
        var G__7813 = a == null ? x : a;
        var G__7814 = b == null ? y : b;
        var G__7815 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7813, G__7814, G__7815) : f.call(null, G__7813, G__7814, G__7815);
      };
      var G__7827__4 = function() {
        var G__7828__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__7828 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7829__i = 0, G__7829__a = new Array(arguments.length - 3);
            while (G__7829__i < G__7829__a.length) {
              G__7829__a[G__7829__i] = arguments[G__7829__i + 3];
              ++G__7829__i;
            }
            ds = new cljs.core.IndexedSeq(G__7829__a, 0);
          }
          return G__7828__delegate.call(this, a, b, c, ds);
        };
        G__7828.cljs$lang$maxFixedArity = 3;
        G__7828.cljs$lang$applyTo = function(arglist__7830) {
          var a = cljs.core.first(arglist__7830);
          arglist__7830 = cljs.core.next(arglist__7830);
          var b = cljs.core.first(arglist__7830);
          arglist__7830 = cljs.core.next(arglist__7830);
          var c = cljs.core.first(arglist__7830);
          var ds = cljs.core.rest(arglist__7830);
          return G__7828__delegate(a, b, c, ds);
        };
        G__7828.cljs$core$IFn$_invoke$arity$variadic = G__7828__delegate;
        return G__7828;
      }();
      G__7827 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7827__2.call(this, a, b);
          case 3:
            return G__7827__3.call(this, a, b, c);
          default:
            var G__7831 = null;
            if (arguments.length > 3) {
              var G__7832__i = 0, G__7832__a = new Array(arguments.length - 3);
              while (G__7832__i < G__7832__a.length) {
                G__7832__a[G__7832__i] = arguments[G__7832__i + 3];
                ++G__7832__i;
              }
              G__7831 = new cljs.core.IndexedSeq(G__7832__a, 0);
            }
            return G__7827__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7831);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7827.cljs$lang$maxFixedArity = 3;
      G__7827.cljs$lang$applyTo = G__7827__4.cljs$lang$applyTo;
      G__7827.cljs$core$IFn$_invoke$arity$2 = G__7827__2;
      G__7827.cljs$core$IFn$_invoke$arity$3 = G__7827__3;
      G__7827.cljs$core$IFn$_invoke$arity$variadic = G__7827__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7827;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__7833 = null;
      var G__7833__2 = function(a, b) {
        var G__7816 = a == null ? x : a;
        var G__7817 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7816, G__7817) : f.call(null, G__7816, G__7817);
      };
      var G__7833__3 = function(a, b, c) {
        var G__7818 = a == null ? x : a;
        var G__7819 = b == null ? y : b;
        var G__7820 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7818, G__7819, G__7820) : f.call(null, G__7818, G__7819, G__7820);
      };
      var G__7833__4 = function() {
        var G__7834__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__7834 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7835__i = 0, G__7835__a = new Array(arguments.length - 3);
            while (G__7835__i < G__7835__a.length) {
              G__7835__a[G__7835__i] = arguments[G__7835__i + 3];
              ++G__7835__i;
            }
            ds = new cljs.core.IndexedSeq(G__7835__a, 0);
          }
          return G__7834__delegate.call(this, a, b, c, ds);
        };
        G__7834.cljs$lang$maxFixedArity = 3;
        G__7834.cljs$lang$applyTo = function(arglist__7836) {
          var a = cljs.core.first(arglist__7836);
          arglist__7836 = cljs.core.next(arglist__7836);
          var b = cljs.core.first(arglist__7836);
          arglist__7836 = cljs.core.next(arglist__7836);
          var c = cljs.core.first(arglist__7836);
          var ds = cljs.core.rest(arglist__7836);
          return G__7834__delegate(a, b, c, ds);
        };
        G__7834.cljs$core$IFn$_invoke$arity$variadic = G__7834__delegate;
        return G__7834;
      }();
      G__7833 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7833__2.call(this, a, b);
          case 3:
            return G__7833__3.call(this, a, b, c);
          default:
            var G__7837 = null;
            if (arguments.length > 3) {
              var G__7838__i = 0, G__7838__a = new Array(arguments.length - 3);
              while (G__7838__i < G__7838__a.length) {
                G__7838__a[G__7838__i] = arguments[G__7838__i + 3];
                ++G__7838__i;
              }
              G__7837 = new cljs.core.IndexedSeq(G__7838__a, 0);
            }
            return G__7833__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7837);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7833.cljs$lang$maxFixedArity = 3;
      G__7833.cljs$lang$applyTo = G__7833__4.cljs$lang$applyTo;
      G__7833.cljs$core$IFn$_invoke$arity$2 = G__7833__2;
      G__7833.cljs$core$IFn$_invoke$arity$3 = G__7833__3;
      G__7833.cljs$core$IFn$_invoke$arity$variadic = G__7833__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7833;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__7869 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7869) : cljs.core.volatile_BANG_.call(null, G__7869);
      }();
      return function(i) {
        return function() {
          var G__7899 = null;
          var G__7899__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7899__1 = function(result) {
            var G__7870 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7870) : rf.call(null, G__7870);
          };
          var G__7899__2 = function(result, input) {
            var G__7871 = result;
            var G__7872 = function() {
              var G__7873 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__7874 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7873, G__7874) : f.call(null, G__7873, G__7874);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7871, G__7872) : rf.call(null, G__7871, G__7872);
          };
          G__7899 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7899__0.call(this);
              case 1:
                return G__7899__1.call(this, result);
              case 2:
                return G__7899__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7899.cljs$core$IFn$_invoke$arity$0 = G__7899__0;
          G__7899.cljs$core$IFn$_invoke$arity$1 = G__7899__1;
          G__7899.cljs$core$IFn$_invoke$arity$2 = G__7899__2;
          return G__7899;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4721__auto___7900 = size;
            var i_7901 = 0;
            while (true) {
              if (i_7901 < n__4721__auto___7900) {
                cljs.core.chunk_append(b, function() {
                  var G__7895 = idx + i_7901;
                  var G__7896 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7901);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7895, G__7896) : f.call(null, G__7895, G__7896);
                }());
                var G__7902 = i_7901 + 1;
                i_7901 = G__7902;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__7897 = idx;
              var G__7898 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7897, G__7898) : f.call(null, G__7897, G__7898);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__7921 = null;
        var G__7921__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7921__1 = function(result) {
          var G__7915 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7915) : rf.call(null, G__7915);
        };
        var G__7921__2 = function(result, input) {
          var v = function() {
            var G__7916 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7916) : f.call(null, G__7916);
          }();
          if (v == null) {
            return result;
          } else {
            var G__7917 = result;
            var G__7918 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7917, G__7918) : rf.call(null, G__7917, G__7918);
          }
        };
        G__7921 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7921__0.call(this);
            case 1:
              return G__7921__1.call(this, result);
            case 2:
              return G__7921__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7921.cljs$core$IFn$_invoke$arity$0 = G__7921__0;
        G__7921.cljs$core$IFn$_invoke$arity$1 = G__7921__1;
        G__7921.cljs$core$IFn$_invoke$arity$2 = G__7921__2;
        return G__7921;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4721__auto___7922 = size;
          var i_7923 = 0;
          while (true) {
            if (i_7923 < n__4721__auto___7922) {
              var x_7924 = function() {
                var G__7919 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7923);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7919) : f.call(null, G__7919);
              }();
              if (x_7924 == null) {
              } else {
                cljs.core.chunk_append(b, x_7924);
              }
              var G__7925 = i_7923 + 1;
              i_7923 = G__7925;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7920 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7920) : f.call(null, G__7920);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__7926 = this$__$1;
  return goog.getUid(G__7926);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7927 = cljs.core.seq(self__.watches);
  var chunk__7928 = null;
  var count__7929 = 0;
  var i__7930 = 0;
  while (true) {
    if (i__7930 < count__7929) {
      var vec__7931 = chunk__7928.cljs$core$IIndexed$_nth$arity$2(null, i__7930);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7931, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7931, 1, null);
      var G__7932_7941 = key;
      var G__7933_7942 = this$__$1;
      var G__7934_7943 = oldval;
      var G__7935_7944 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7932_7941, G__7933_7942, G__7934_7943, G__7935_7944) : f.call(null, G__7932_7941, G__7933_7942, G__7934_7943, G__7935_7944);
      var G__7945 = seq__7927;
      var G__7946 = chunk__7928;
      var G__7947 = count__7929;
      var G__7948 = i__7930 + 1;
      seq__7927 = G__7945;
      chunk__7928 = G__7946;
      count__7929 = G__7947;
      i__7930 = G__7948;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__7927);
      if (temp__4126__auto__) {
        var seq__7927__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7927__$1)) {
          var c__4621__auto__ = cljs.core.chunk_first(seq__7927__$1);
          var G__7949 = cljs.core.chunk_rest(seq__7927__$1);
          var G__7950 = c__4621__auto__;
          var G__7951 = cljs.core.count(c__4621__auto__);
          var G__7952 = 0;
          seq__7927 = G__7949;
          chunk__7928 = G__7950;
          count__7929 = G__7951;
          i__7930 = G__7952;
          continue;
        } else {
          var vec__7936 = cljs.core.first(seq__7927__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7936, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7936, 1, null);
          var G__7937_7953 = key;
          var G__7938_7954 = this$__$1;
          var G__7939_7955 = oldval;
          var G__7940_7956 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7937_7953, G__7938_7954, G__7939_7955, G__7940_7956) : f.call(null, G__7937_7953, G__7938_7954, G__7939_7955, G__7940_7956);
          var G__7957 = cljs.core.next(seq__7927__$1);
          var G__7958 = null;
          var G__7959 = 0;
          var G__7960 = 0;
          seq__7927 = G__7957;
          chunk__7928 = G__7958;
          count__7929 = G__7959;
          i__7930 = G__7960;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__7964__delegate = function(x, p__7961) {
      var map__7963 = p__7961;
      var map__7963__$1 = cljs.core.seq_QMARK_(map__7963) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7963) : map__7963;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7963__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7963__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__7964 = function(x, var_args) {
      var p__7961 = null;
      if (arguments.length > 1) {
        var G__7965__i = 0, G__7965__a = new Array(arguments.length - 1);
        while (G__7965__i < G__7965__a.length) {
          G__7965__a[G__7965__i] = arguments[G__7965__i + 1];
          ++G__7965__i;
        }
        p__7961 = new cljs.core.IndexedSeq(G__7965__a, 0);
      }
      return G__7964__delegate.call(this, x, p__7961);
    };
    G__7964.cljs$lang$maxFixedArity = 1;
    G__7964.cljs$lang$applyTo = function(arglist__7966) {
      var x = cljs.core.first(arglist__7966);
      var p__7961 = cljs.core.rest(arglist__7966);
      return G__7964__delegate(x, p__7961);
    };
    G__7964.cljs$core$IFn$_invoke$arity$variadic = G__7964__delegate;
    return G__7964;
  }();
  atom = function(x, var_args) {
    var p__7961 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__7967 = null;
        if (arguments.length > 1) {
          var G__7968__i = 0, G__7968__a = new Array(arguments.length - 1);
          while (G__7968__i < G__7968__a.length) {
            G__7968__a[G__7968__i] = arguments[G__7968__i + 1];
            ++G__7968__i;
          }
          G__7967 = new cljs.core.IndexedSeq(G__7968__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7967);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__7971 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7971) : validate.call(null, G__7971);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__7972 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7972) : cljs.core.pr_str.call(null, G__7972);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7979 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7979) : f.call(null, G__7979);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7980 = a.state;
        var G__7981 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7980, G__7981) : f.call(null, G__7980, G__7981);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7982 = a.state;
        var G__7983 = x;
        var G__7984 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7982, G__7983, G__7984) : f.call(null, G__7982, G__7983, G__7984);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__7985__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__7985 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7986__i = 0, G__7986__a = new Array(arguments.length - 4);
        while (G__7986__i < G__7986__a.length) {
          G__7986__a[G__7986__i] = arguments[G__7986__i + 4];
          ++G__7986__i;
        }
        more = new cljs.core.IndexedSeq(G__7986__a, 0);
      }
      return G__7985__delegate.call(this, a, f, x, y, more);
    };
    G__7985.cljs$lang$maxFixedArity = 4;
    G__7985.cljs$lang$applyTo = function(arglist__7987) {
      var a = cljs.core.first(arglist__7987);
      arglist__7987 = cljs.core.next(arglist__7987);
      var f = cljs.core.first(arglist__7987);
      arglist__7987 = cljs.core.next(arglist__7987);
      var x = cljs.core.first(arglist__7987);
      arglist__7987 = cljs.core.next(arglist__7987);
      var y = cljs.core.first(arglist__7987);
      var more = cljs.core.rest(arglist__7987);
      return G__7985__delegate(a, f, x, y, more);
    };
    G__7985.cljs$core$IFn$_invoke$arity$variadic = G__7985__delegate;
    return G__7985;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__7988 = null;
        if (arguments.length > 4) {
          var G__7989__i = 0, G__7989__a = new Array(arguments.length - 4);
          while (G__7989__i < G__7989__a.length) {
            G__7989__a[G__7989__i] = arguments[G__7989__i + 4];
            ++G__7989__i;
          }
          G__7988 = new cljs.core.IndexedSeq(G__7989__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__7988);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__8056 = null;
          var G__8056__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8056__1 = function(result) {
            var G__8023 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8023) : rf.call(null, G__8023);
          };
          var G__8056__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__8024 = i;
              var G__8025 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8024, G__8025) : f.call(null, G__8024, G__8025);
            }();
            if (v == null) {
              return result;
            } else {
              var G__8026 = result;
              var G__8027 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8026, G__8027) : rf.call(null, G__8026, G__8027);
            }
          };
          G__8056 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8056__0.call(this);
              case 1:
                return G__8056__1.call(this, result);
              case 2:
                return G__8056__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8056.cljs$core$IFn$_invoke$arity$0 = G__8056__0;
          G__8056.cljs$core$IFn$_invoke$arity$1 = G__8056__1;
          G__8056.cljs$core$IFn$_invoke$arity$2 = G__8056__2;
          return G__8056;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4721__auto___8057 = size;
            var i_8058 = 0;
            while (true) {
              if (i_8058 < n__4721__auto___8057) {
                var x_8059 = function() {
                  var G__8052 = idx + i_8058;
                  var G__8053 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8058);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8052, G__8053) : f.call(null, G__8052, G__8053);
                }();
                if (x_8059 == null) {
                } else {
                  cljs.core.chunk_append(b, x_8059);
                }
                var G__8060 = i_8058 + 1;
                i_8058 = G__8060;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__8054 = idx;
              var G__8055 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8054, G__8055) : f.call(null, G__8054, G__8055);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__8274 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8274) : p.call(null, G__8274);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3822__auto__ = function() {
            var G__8276 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8276) : p.call(null, G__8276);
          }();
          if (cljs.core.truth_(and__3822__auto__)) {
            var G__8277 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8277) : p.call(null, G__8277);
          } else {
            return and__3822__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3822__auto__ = function() {
            var G__8279 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8279) : p.call(null, G__8279);
          }();
          if (cljs.core.truth_(and__3822__auto__)) {
            var and__3822__auto____$1 = function() {
              var G__8281 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8281) : p.call(null, G__8281);
            }();
            if (cljs.core.truth_(and__3822__auto____$1)) {
              var G__8282 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8282) : p.call(null, G__8282);
            } else {
              return and__3822__auto____$1;
            }
          } else {
            return and__3822__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__8451__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__8451 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8452__i = 0, G__8452__a = new Array(arguments.length - 3);
            while (G__8452__i < G__8452__a.length) {
              G__8452__a[G__8452__i] = arguments[G__8452__i + 3];
              ++G__8452__i;
            }
            args = new cljs.core.IndexedSeq(G__8452__a, 0);
          }
          return G__8451__delegate.call(this, x, y, z, args);
        };
        G__8451.cljs$lang$maxFixedArity = 3;
        G__8451.cljs$lang$applyTo = function(arglist__8453) {
          var x = cljs.core.first(arglist__8453);
          arglist__8453 = cljs.core.next(arglist__8453);
          var y = cljs.core.first(arglist__8453);
          arglist__8453 = cljs.core.next(arglist__8453);
          var z = cljs.core.first(arglist__8453);
          var args = cljs.core.rest(arglist__8453);
          return G__8451__delegate(x, y, z, args);
        };
        G__8451.cljs$core$IFn$_invoke$arity$variadic = G__8451__delegate;
        return G__8451;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__8454 = null;
            if (arguments.length > 3) {
              var G__8455__i = 0, G__8455__a = new Array(arguments.length - 3);
              while (G__8455__i < G__8455__a.length) {
                G__8455__a[G__8455__i] = arguments[G__8455__i + 3];
                ++G__8455__i;
              }
              G__8454 = new cljs.core.IndexedSeq(G__8455__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8454);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3822__auto__ = function() {
            var G__8314 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8314) : p1.call(null, G__8314);
          }();
          if (cljs.core.truth_(and__3822__auto__)) {
            var G__8315 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8315) : p2.call(null, G__8315);
          } else {
            return and__3822__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3822__auto__ = function() {
            var G__8317 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8317) : p1.call(null, G__8317);
          }();
          if (cljs.core.truth_(and__3822__auto__)) {
            var and__3822__auto____$1 = function() {
              var G__8319 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8319) : p1.call(null, G__8319);
            }();
            if (cljs.core.truth_(and__3822__auto____$1)) {
              var and__3822__auto____$2 = function() {
                var G__8321 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8321) : p2.call(null, G__8321);
              }();
              if (cljs.core.truth_(and__3822__auto____$2)) {
                var G__8322 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8322) : p2.call(null, G__8322);
              } else {
                return and__3822__auto____$2;
              }
            } else {
              return and__3822__auto____$1;
            }
          } else {
            return and__3822__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3822__auto__ = function() {
            var G__8324 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8324) : p1.call(null, G__8324);
          }();
          if (cljs.core.truth_(and__3822__auto__)) {
            var and__3822__auto____$1 = function() {
              var G__8326 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8326) : p1.call(null, G__8326);
            }();
            if (cljs.core.truth_(and__3822__auto____$1)) {
              var and__3822__auto____$2 = function() {
                var G__8328 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8328) : p1.call(null, G__8328);
              }();
              if (cljs.core.truth_(and__3822__auto____$2)) {
                var and__3822__auto____$3 = function() {
                  var G__8330 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8330) : p2.call(null, G__8330);
                }();
                if (cljs.core.truth_(and__3822__auto____$3)) {
                  var and__3822__auto____$4 = function() {
                    var G__8332 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8332) : p2.call(null, G__8332);
                  }();
                  if (cljs.core.truth_(and__3822__auto____$4)) {
                    var G__8333 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8333) : p2.call(null, G__8333);
                  } else {
                    return and__3822__auto____$4;
                  }
                } else {
                  return and__3822__auto____$3;
                }
              } else {
                return and__3822__auto____$2;
              }
            } else {
              return and__3822__auto____$1;
            }
          } else {
            return and__3822__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__8456__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__8061_SHARP_) {
            var and__3822__auto__ = function() {
              var G__8338 = p1__8061_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8338) : p1.call(null, G__8338);
            }();
            if (cljs.core.truth_(and__3822__auto__)) {
              var G__8339 = p1__8061_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8339) : p2.call(null, G__8339);
            } else {
              return and__3822__auto__;
            }
          }, args));
        };
        var G__8456 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8457__i = 0, G__8457__a = new Array(arguments.length - 3);
            while (G__8457__i < G__8457__a.length) {
              G__8457__a[G__8457__i] = arguments[G__8457__i + 3];
              ++G__8457__i;
            }
            args = new cljs.core.IndexedSeq(G__8457__a, 0);
          }
          return G__8456__delegate.call(this, x, y, z, args);
        };
        G__8456.cljs$lang$maxFixedArity = 3;
        G__8456.cljs$lang$applyTo = function(arglist__8458) {
          var x = cljs.core.first(arglist__8458);
          arglist__8458 = cljs.core.next(arglist__8458);
          var y = cljs.core.first(arglist__8458);
          arglist__8458 = cljs.core.next(arglist__8458);
          var z = cljs.core.first(arglist__8458);
          var args = cljs.core.rest(arglist__8458);
          return G__8456__delegate(x, y, z, args);
        };
        G__8456.cljs$core$IFn$_invoke$arity$variadic = G__8456__delegate;
        return G__8456;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__8459 = null;
            if (arguments.length > 3) {
              var G__8460__i = 0, G__8460__a = new Array(arguments.length - 3);
              while (G__8460__i < G__8460__a.length) {
                G__8460__a[G__8460__i] = arguments[G__8460__i + 3];
                ++G__8460__i;
              }
              G__8459 = new cljs.core.IndexedSeq(G__8460__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8459);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3822__auto__ = function() {
            var G__8385 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8385) : p1.call(null, G__8385);
          }();
          if (cljs.core.truth_(and__3822__auto__)) {
            var and__3822__auto____$1 = function() {
              var G__8387 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8387) : p2.call(null, G__8387);
            }();
            if (cljs.core.truth_(and__3822__auto____$1)) {
              var G__8388 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8388) : p3.call(null, G__8388);
            } else {
              return and__3822__auto____$1;
            }
          } else {
            return and__3822__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3822__auto__ = function() {
            var G__8390 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8390) : p1.call(null, G__8390);
          }();
          if (cljs.core.truth_(and__3822__auto__)) {
            var and__3822__auto____$1 = function() {
              var G__8392 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8392) : p2.call(null, G__8392);
            }();
            if (cljs.core.truth_(and__3822__auto____$1)) {
              var and__3822__auto____$2 = function() {
                var G__8394 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8394) : p3.call(null, G__8394);
              }();
              if (cljs.core.truth_(and__3822__auto____$2)) {
                var and__3822__auto____$3 = function() {
                  var G__8396 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8396) : p1.call(null, G__8396);
                }();
                if (cljs.core.truth_(and__3822__auto____$3)) {
                  var and__3822__auto____$4 = function() {
                    var G__8398 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8398) : p2.call(null, G__8398);
                  }();
                  if (cljs.core.truth_(and__3822__auto____$4)) {
                    var G__8399 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8399) : p3.call(null, G__8399);
                  } else {
                    return and__3822__auto____$4;
                  }
                } else {
                  return and__3822__auto____$3;
                }
              } else {
                return and__3822__auto____$2;
              }
            } else {
              return and__3822__auto____$1;
            }
          } else {
            return and__3822__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3822__auto__ = function() {
            var G__8401 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8401) : p1.call(null, G__8401);
          }();
          if (cljs.core.truth_(and__3822__auto__)) {
            var and__3822__auto____$1 = function() {
              var G__8403 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8403) : p2.call(null, G__8403);
            }();
            if (cljs.core.truth_(and__3822__auto____$1)) {
              var and__3822__auto____$2 = function() {
                var G__8405 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8405) : p3.call(null, G__8405);
              }();
              if (cljs.core.truth_(and__3822__auto____$2)) {
                var and__3822__auto____$3 = function() {
                  var G__8407 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8407) : p1.call(null, G__8407);
                }();
                if (cljs.core.truth_(and__3822__auto____$3)) {
                  var and__3822__auto____$4 = function() {
                    var G__8409 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8409) : p2.call(null, G__8409);
                  }();
                  if (cljs.core.truth_(and__3822__auto____$4)) {
                    var and__3822__auto____$5 = function() {
                      var G__8411 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8411) : p3.call(null, G__8411);
                    }();
                    if (cljs.core.truth_(and__3822__auto____$5)) {
                      var and__3822__auto____$6 = function() {
                        var G__8413 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8413) : p1.call(null, G__8413);
                      }();
                      if (cljs.core.truth_(and__3822__auto____$6)) {
                        var and__3822__auto____$7 = function() {
                          var G__8415 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8415) : p2.call(null, G__8415);
                        }();
                        if (cljs.core.truth_(and__3822__auto____$7)) {
                          var G__8416 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8416) : p3.call(null, G__8416);
                        } else {
                          return and__3822__auto____$7;
                        }
                      } else {
                        return and__3822__auto____$6;
                      }
                    } else {
                      return and__3822__auto____$5;
                    }
                  } else {
                    return and__3822__auto____$4;
                  }
                } else {
                  return and__3822__auto____$3;
                }
              } else {
                return and__3822__auto____$2;
              }
            } else {
              return and__3822__auto____$1;
            }
          } else {
            return and__3822__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__8461__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__8062_SHARP_) {
            var and__3822__auto__ = function() {
              var G__8423 = p1__8062_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8423) : p1.call(null, G__8423);
            }();
            if (cljs.core.truth_(and__3822__auto__)) {
              var and__3822__auto____$1 = function() {
                var G__8425 = p1__8062_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8425) : p2.call(null, G__8425);
              }();
              if (cljs.core.truth_(and__3822__auto____$1)) {
                var G__8426 = p1__8062_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8426) : p3.call(null, G__8426);
              } else {
                return and__3822__auto____$1;
              }
            } else {
              return and__3822__auto__;
            }
          }, args));
        };
        var G__8461 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8462__i = 0, G__8462__a = new Array(arguments.length - 3);
            while (G__8462__i < G__8462__a.length) {
              G__8462__a[G__8462__i] = arguments[G__8462__i + 3];
              ++G__8462__i;
            }
            args = new cljs.core.IndexedSeq(G__8462__a, 0);
          }
          return G__8461__delegate.call(this, x, y, z, args);
        };
        G__8461.cljs$lang$maxFixedArity = 3;
        G__8461.cljs$lang$applyTo = function(arglist__8463) {
          var x = cljs.core.first(arglist__8463);
          arglist__8463 = cljs.core.next(arglist__8463);
          var y = cljs.core.first(arglist__8463);
          arglist__8463 = cljs.core.next(arglist__8463);
          var z = cljs.core.first(arglist__8463);
          var args = cljs.core.rest(arglist__8463);
          return G__8461__delegate(x, y, z, args);
        };
        G__8461.cljs$core$IFn$_invoke$arity$variadic = G__8461__delegate;
        return G__8461;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__8464 = null;
            if (arguments.length > 3) {
              var G__8465__i = 0, G__8465__a = new Array(arguments.length - 3);
              while (G__8465__i < G__8465__a.length) {
                G__8465__a[G__8465__i] = arguments[G__8465__i + 3];
                ++G__8465__i;
              }
              G__8464 = new cljs.core.IndexedSeq(G__8465__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8464);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__8466__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__8063_SHARP_) {
                var G__8442 = x;
                return p1__8063_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8063_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8442) : p1__8063_SHARP_.call(null, G__8442);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__8064_SHARP_) {
                var and__3822__auto__ = function() {
                  var G__8444 = x;
                  return p1__8064_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8064_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8444) : p1__8064_SHARP_.call(null, G__8444);
                }();
                if (cljs.core.truth_(and__3822__auto__)) {
                  var G__8445 = y;
                  return p1__8064_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8064_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8445) : p1__8064_SHARP_.call(null, G__8445);
                } else {
                  return and__3822__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__8065_SHARP_) {
                var and__3822__auto__ = function() {
                  var G__8447 = x;
                  return p1__8065_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8065_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8447) : p1__8065_SHARP_.call(null, G__8447);
                }();
                if (cljs.core.truth_(and__3822__auto__)) {
                  var and__3822__auto____$1 = function() {
                    var G__8449 = y;
                    return p1__8065_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8065_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8449) : p1__8065_SHARP_.call(null, G__8449);
                  }();
                  if (cljs.core.truth_(and__3822__auto____$1)) {
                    var G__8450 = z;
                    return p1__8065_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8065_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8450) : p1__8065_SHARP_.call(null, G__8450);
                  } else {
                    return and__3822__auto____$1;
                  }
                } else {
                  return and__3822__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__8467__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__8066_SHARP_) {
                  return cljs.core.every_QMARK_(p1__8066_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__8467 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8468__i = 0, G__8468__a = new Array(arguments.length - 3);
                while (G__8468__i < G__8468__a.length) {
                  G__8468__a[G__8468__i] = arguments[G__8468__i + 3];
                  ++G__8468__i;
                }
                args = new cljs.core.IndexedSeq(G__8468__a, 0);
              }
              return G__8467__delegate.call(this, x, y, z, args);
            };
            G__8467.cljs$lang$maxFixedArity = 3;
            G__8467.cljs$lang$applyTo = function(arglist__8469) {
              var x = cljs.core.first(arglist__8469);
              arglist__8469 = cljs.core.next(arglist__8469);
              var y = cljs.core.first(arglist__8469);
              arglist__8469 = cljs.core.next(arglist__8469);
              var z = cljs.core.first(arglist__8469);
              var args = cljs.core.rest(arglist__8469);
              return G__8467__delegate(x, y, z, args);
            };
            G__8467.cljs$core$IFn$_invoke$arity$variadic = G__8467__delegate;
            return G__8467;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__8470 = null;
                if (arguments.length > 3) {
                  var G__8471__i = 0, G__8471__a = new Array(arguments.length - 3);
                  while (G__8471__i < G__8471__a.length) {
                    G__8471__a[G__8471__i] = arguments[G__8471__i + 3];
                    ++G__8471__i;
                  }
                  G__8470 = new cljs.core.IndexedSeq(G__8471__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8470);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__8466 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8472__i = 0, G__8472__a = new Array(arguments.length - 3);
        while (G__8472__i < G__8472__a.length) {
          G__8472__a[G__8472__i] = arguments[G__8472__i + 3];
          ++G__8472__i;
        }
        ps = new cljs.core.IndexedSeq(G__8472__a, 0);
      }
      return G__8466__delegate.call(this, p1, p2, p3, ps);
    };
    G__8466.cljs$lang$maxFixedArity = 3;
    G__8466.cljs$lang$applyTo = function(arglist__8473) {
      var p1 = cljs.core.first(arglist__8473);
      arglist__8473 = cljs.core.next(arglist__8473);
      var p2 = cljs.core.first(arglist__8473);
      arglist__8473 = cljs.core.next(arglist__8473);
      var p3 = cljs.core.first(arglist__8473);
      var ps = cljs.core.rest(arglist__8473);
      return G__8466__delegate(p1, p2, p3, ps);
    };
    G__8466.cljs$core$IFn$_invoke$arity$variadic = G__8466__delegate;
    return G__8466;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__8474 = null;
        if (arguments.length > 3) {
          var G__8475__i = 0, G__8475__a = new Array(arguments.length - 3);
          while (G__8475__i < G__8475__a.length) {
            G__8475__a[G__8475__i] = arguments[G__8475__i + 3];
            ++G__8475__i;
          }
          G__8474 = new cljs.core.IndexedSeq(G__8475__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8474);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__8681 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8681) : p.call(null, G__8681);
      };
      var sp1__2 = function(x, y) {
        var or__3834__auto__ = function() {
          var G__8683 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8683) : p.call(null, G__8683);
        }();
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          var G__8684 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8684) : p.call(null, G__8684);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3834__auto__ = function() {
          var G__8686 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8686) : p.call(null, G__8686);
        }();
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = function() {
            var G__8688 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8688) : p.call(null, G__8688);
          }();
          if (cljs.core.truth_(or__3834__auto____$1)) {
            return or__3834__auto____$1;
          } else {
            var G__8689 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8689) : p.call(null, G__8689);
          }
        }
      };
      var sp1__4 = function() {
        var G__8850__delegate = function(x, y, z, args) {
          var or__3834__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3834__auto__)) {
            return or__3834__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__8850 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8851__i = 0, G__8851__a = new Array(arguments.length - 3);
            while (G__8851__i < G__8851__a.length) {
              G__8851__a[G__8851__i] = arguments[G__8851__i + 3];
              ++G__8851__i;
            }
            args = new cljs.core.IndexedSeq(G__8851__a, 0);
          }
          return G__8850__delegate.call(this, x, y, z, args);
        };
        G__8850.cljs$lang$maxFixedArity = 3;
        G__8850.cljs$lang$applyTo = function(arglist__8852) {
          var x = cljs.core.first(arglist__8852);
          arglist__8852 = cljs.core.next(arglist__8852);
          var y = cljs.core.first(arglist__8852);
          arglist__8852 = cljs.core.next(arglist__8852);
          var z = cljs.core.first(arglist__8852);
          var args = cljs.core.rest(arglist__8852);
          return G__8850__delegate(x, y, z, args);
        };
        G__8850.cljs$core$IFn$_invoke$arity$variadic = G__8850__delegate;
        return G__8850;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__8853 = null;
            if (arguments.length > 3) {
              var G__8854__i = 0, G__8854__a = new Array(arguments.length - 3);
              while (G__8854__i < G__8854__a.length) {
                G__8854__a[G__8854__i] = arguments[G__8854__i + 3];
                ++G__8854__i;
              }
              G__8853 = new cljs.core.IndexedSeq(G__8854__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8853);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3834__auto__ = function() {
          var G__8721 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8721) : p1.call(null, G__8721);
        }();
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          var G__8722 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8722) : p2.call(null, G__8722);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3834__auto__ = function() {
          var G__8724 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8724) : p1.call(null, G__8724);
        }();
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = function() {
            var G__8726 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8726) : p1.call(null, G__8726);
          }();
          if (cljs.core.truth_(or__3834__auto____$1)) {
            return or__3834__auto____$1;
          } else {
            var or__3834__auto____$2 = function() {
              var G__8728 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8728) : p2.call(null, G__8728);
            }();
            if (cljs.core.truth_(or__3834__auto____$2)) {
              return or__3834__auto____$2;
            } else {
              var G__8729 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8729) : p2.call(null, G__8729);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3834__auto__ = function() {
          var G__8731 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8731) : p1.call(null, G__8731);
        }();
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = function() {
            var G__8733 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8733) : p1.call(null, G__8733);
          }();
          if (cljs.core.truth_(or__3834__auto____$1)) {
            return or__3834__auto____$1;
          } else {
            var or__3834__auto____$2 = function() {
              var G__8735 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8735) : p1.call(null, G__8735);
            }();
            if (cljs.core.truth_(or__3834__auto____$2)) {
              return or__3834__auto____$2;
            } else {
              var or__3834__auto____$3 = function() {
                var G__8737 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8737) : p2.call(null, G__8737);
              }();
              if (cljs.core.truth_(or__3834__auto____$3)) {
                return or__3834__auto____$3;
              } else {
                var or__3834__auto____$4 = function() {
                  var G__8739 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8739) : p2.call(null, G__8739);
                }();
                if (cljs.core.truth_(or__3834__auto____$4)) {
                  return or__3834__auto____$4;
                } else {
                  var G__8740 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8740) : p2.call(null, G__8740);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8855__delegate = function(x, y, z, args) {
          var or__3834__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3834__auto__)) {
            return or__3834__auto__;
          } else {
            return cljs.core.some(function(or__3834__auto__) {
              return function(p1__8476_SHARP_) {
                var or__3834__auto____$1 = function() {
                  var G__8742 = p1__8476_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8742) : p1.call(null, G__8742);
                }();
                if (cljs.core.truth_(or__3834__auto____$1)) {
                  return or__3834__auto____$1;
                } else {
                  var G__8743 = p1__8476_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8743) : p2.call(null, G__8743);
                }
              };
            }(or__3834__auto__), args);
          }
        };
        var G__8855 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8856__i = 0, G__8856__a = new Array(arguments.length - 3);
            while (G__8856__i < G__8856__a.length) {
              G__8856__a[G__8856__i] = arguments[G__8856__i + 3];
              ++G__8856__i;
            }
            args = new cljs.core.IndexedSeq(G__8856__a, 0);
          }
          return G__8855__delegate.call(this, x, y, z, args);
        };
        G__8855.cljs$lang$maxFixedArity = 3;
        G__8855.cljs$lang$applyTo = function(arglist__8857) {
          var x = cljs.core.first(arglist__8857);
          arglist__8857 = cljs.core.next(arglist__8857);
          var y = cljs.core.first(arglist__8857);
          arglist__8857 = cljs.core.next(arglist__8857);
          var z = cljs.core.first(arglist__8857);
          var args = cljs.core.rest(arglist__8857);
          return G__8855__delegate(x, y, z, args);
        };
        G__8855.cljs$core$IFn$_invoke$arity$variadic = G__8855__delegate;
        return G__8855;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__8858 = null;
            if (arguments.length > 3) {
              var G__8859__i = 0, G__8859__a = new Array(arguments.length - 3);
              while (G__8859__i < G__8859__a.length) {
                G__8859__a[G__8859__i] = arguments[G__8859__i + 3];
                ++G__8859__i;
              }
              G__8858 = new cljs.core.IndexedSeq(G__8859__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8858);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3834__auto__ = function() {
          var G__8789 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8789) : p1.call(null, G__8789);
        }();
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = function() {
            var G__8791 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8791) : p2.call(null, G__8791);
          }();
          if (cljs.core.truth_(or__3834__auto____$1)) {
            return or__3834__auto____$1;
          } else {
            var G__8792 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8792) : p3.call(null, G__8792);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3834__auto__ = function() {
          var G__8794 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8794) : p1.call(null, G__8794);
        }();
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = function() {
            var G__8796 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8796) : p2.call(null, G__8796);
          }();
          if (cljs.core.truth_(or__3834__auto____$1)) {
            return or__3834__auto____$1;
          } else {
            var or__3834__auto____$2 = function() {
              var G__8798 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8798) : p3.call(null, G__8798);
            }();
            if (cljs.core.truth_(or__3834__auto____$2)) {
              return or__3834__auto____$2;
            } else {
              var or__3834__auto____$3 = function() {
                var G__8800 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8800) : p1.call(null, G__8800);
              }();
              if (cljs.core.truth_(or__3834__auto____$3)) {
                return or__3834__auto____$3;
              } else {
                var or__3834__auto____$4 = function() {
                  var G__8802 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8802) : p2.call(null, G__8802);
                }();
                if (cljs.core.truth_(or__3834__auto____$4)) {
                  return or__3834__auto____$4;
                } else {
                  var G__8803 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8803) : p3.call(null, G__8803);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3834__auto__ = function() {
          var G__8805 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8805) : p1.call(null, G__8805);
        }();
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          var or__3834__auto____$1 = function() {
            var G__8807 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8807) : p2.call(null, G__8807);
          }();
          if (cljs.core.truth_(or__3834__auto____$1)) {
            return or__3834__auto____$1;
          } else {
            var or__3834__auto____$2 = function() {
              var G__8809 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8809) : p3.call(null, G__8809);
            }();
            if (cljs.core.truth_(or__3834__auto____$2)) {
              return or__3834__auto____$2;
            } else {
              var or__3834__auto____$3 = function() {
                var G__8811 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8811) : p1.call(null, G__8811);
              }();
              if (cljs.core.truth_(or__3834__auto____$3)) {
                return or__3834__auto____$3;
              } else {
                var or__3834__auto____$4 = function() {
                  var G__8813 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8813) : p2.call(null, G__8813);
                }();
                if (cljs.core.truth_(or__3834__auto____$4)) {
                  return or__3834__auto____$4;
                } else {
                  var or__3834__auto____$5 = function() {
                    var G__8815 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8815) : p3.call(null, G__8815);
                  }();
                  if (cljs.core.truth_(or__3834__auto____$5)) {
                    return or__3834__auto____$5;
                  } else {
                    var or__3834__auto____$6 = function() {
                      var G__8817 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8817) : p1.call(null, G__8817);
                    }();
                    if (cljs.core.truth_(or__3834__auto____$6)) {
                      return or__3834__auto____$6;
                    } else {
                      var or__3834__auto____$7 = function() {
                        var G__8819 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8819) : p2.call(null, G__8819);
                      }();
                      if (cljs.core.truth_(or__3834__auto____$7)) {
                        return or__3834__auto____$7;
                      } else {
                        var G__8820 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8820) : p3.call(null, G__8820);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8860__delegate = function(x, y, z, args) {
          var or__3834__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3834__auto__)) {
            return or__3834__auto__;
          } else {
            return cljs.core.some(function(or__3834__auto__) {
              return function(p1__8477_SHARP_) {
                var or__3834__auto____$1 = function() {
                  var G__8822 = p1__8477_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8822) : p1.call(null, G__8822);
                }();
                if (cljs.core.truth_(or__3834__auto____$1)) {
                  return or__3834__auto____$1;
                } else {
                  var or__3834__auto____$2 = function() {
                    var G__8824 = p1__8477_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8824) : p2.call(null, G__8824);
                  }();
                  if (cljs.core.truth_(or__3834__auto____$2)) {
                    return or__3834__auto____$2;
                  } else {
                    var G__8825 = p1__8477_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8825) : p3.call(null, G__8825);
                  }
                }
              };
            }(or__3834__auto__), args);
          }
        };
        var G__8860 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8861__i = 0, G__8861__a = new Array(arguments.length - 3);
            while (G__8861__i < G__8861__a.length) {
              G__8861__a[G__8861__i] = arguments[G__8861__i + 3];
              ++G__8861__i;
            }
            args = new cljs.core.IndexedSeq(G__8861__a, 0);
          }
          return G__8860__delegate.call(this, x, y, z, args);
        };
        G__8860.cljs$lang$maxFixedArity = 3;
        G__8860.cljs$lang$applyTo = function(arglist__8862) {
          var x = cljs.core.first(arglist__8862);
          arglist__8862 = cljs.core.next(arglist__8862);
          var y = cljs.core.first(arglist__8862);
          arglist__8862 = cljs.core.next(arglist__8862);
          var z = cljs.core.first(arglist__8862);
          var args = cljs.core.rest(arglist__8862);
          return G__8860__delegate(x, y, z, args);
        };
        G__8860.cljs$core$IFn$_invoke$arity$variadic = G__8860__delegate;
        return G__8860;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__8863 = null;
            if (arguments.length > 3) {
              var G__8864__i = 0, G__8864__a = new Array(arguments.length - 3);
              while (G__8864__i < G__8864__a.length) {
                G__8864__a[G__8864__i] = arguments[G__8864__i + 3];
                ++G__8864__i;
              }
              G__8863 = new cljs.core.IndexedSeq(G__8864__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8863);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__8865__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8478_SHARP_) {
                var G__8841 = x;
                return p1__8478_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8478_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8841) : p1__8478_SHARP_.call(null, G__8841);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8479_SHARP_) {
                var or__3834__auto__ = function() {
                  var G__8843 = x;
                  return p1__8479_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8479_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8843) : p1__8479_SHARP_.call(null, G__8843);
                }();
                if (cljs.core.truth_(or__3834__auto__)) {
                  return or__3834__auto__;
                } else {
                  var G__8844 = y;
                  return p1__8479_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8479_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8844) : p1__8479_SHARP_.call(null, G__8844);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8480_SHARP_) {
                var or__3834__auto__ = function() {
                  var G__8846 = x;
                  return p1__8480_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8480_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8846) : p1__8480_SHARP_.call(null, G__8846);
                }();
                if (cljs.core.truth_(or__3834__auto__)) {
                  return or__3834__auto__;
                } else {
                  var or__3834__auto____$1 = function() {
                    var G__8848 = y;
                    return p1__8480_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8480_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8848) : p1__8480_SHARP_.call(null, G__8848);
                  }();
                  if (cljs.core.truth_(or__3834__auto____$1)) {
                    return or__3834__auto____$1;
                  } else {
                    var G__8849 = z;
                    return p1__8480_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8480_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8849) : p1__8480_SHARP_.call(null, G__8849);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__8866__delegate = function(x, y, z, args) {
              var or__3834__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3834__auto__)) {
                return or__3834__auto__;
              } else {
                return cljs.core.some(function(or__3834__auto__, ps__$1) {
                  return function(p1__8481_SHARP_) {
                    return cljs.core.some(p1__8481_SHARP_, args);
                  };
                }(or__3834__auto__, ps__$1), ps__$1);
              }
            };
            var G__8866 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8867__i = 0, G__8867__a = new Array(arguments.length - 3);
                while (G__8867__i < G__8867__a.length) {
                  G__8867__a[G__8867__i] = arguments[G__8867__i + 3];
                  ++G__8867__i;
                }
                args = new cljs.core.IndexedSeq(G__8867__a, 0);
              }
              return G__8866__delegate.call(this, x, y, z, args);
            };
            G__8866.cljs$lang$maxFixedArity = 3;
            G__8866.cljs$lang$applyTo = function(arglist__8868) {
              var x = cljs.core.first(arglist__8868);
              arglist__8868 = cljs.core.next(arglist__8868);
              var y = cljs.core.first(arglist__8868);
              arglist__8868 = cljs.core.next(arglist__8868);
              var z = cljs.core.first(arglist__8868);
              var args = cljs.core.rest(arglist__8868);
              return G__8866__delegate(x, y, z, args);
            };
            G__8866.cljs$core$IFn$_invoke$arity$variadic = G__8866__delegate;
            return G__8866;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__8869 = null;
                if (arguments.length > 3) {
                  var G__8870__i = 0, G__8870__a = new Array(arguments.length - 3);
                  while (G__8870__i < G__8870__a.length) {
                    G__8870__a[G__8870__i] = arguments[G__8870__i + 3];
                    ++G__8870__i;
                  }
                  G__8869 = new cljs.core.IndexedSeq(G__8870__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8869);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__8865 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8871__i = 0, G__8871__a = new Array(arguments.length - 3);
        while (G__8871__i < G__8871__a.length) {
          G__8871__a[G__8871__i] = arguments[G__8871__i + 3];
          ++G__8871__i;
        }
        ps = new cljs.core.IndexedSeq(G__8871__a, 0);
      }
      return G__8865__delegate.call(this, p1, p2, p3, ps);
    };
    G__8865.cljs$lang$maxFixedArity = 3;
    G__8865.cljs$lang$applyTo = function(arglist__8872) {
      var p1 = cljs.core.first(arglist__8872);
      arglist__8872 = cljs.core.next(arglist__8872);
      var p2 = cljs.core.first(arglist__8872);
      arglist__8872 = cljs.core.next(arglist__8872);
      var p3 = cljs.core.first(arglist__8872);
      var ps = cljs.core.rest(arglist__8872);
      return G__8865__delegate(p1, p2, p3, ps);
    };
    G__8865.cljs$core$IFn$_invoke$arity$variadic = G__8865__delegate;
    return G__8865;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__8873 = null;
        if (arguments.length > 3) {
          var G__8874__i = 0, G__8874__a = new Array(arguments.length - 3);
          while (G__8874__i < G__8874__a.length) {
            G__8874__a[G__8874__i] = arguments[G__8874__i + 3];
            ++G__8874__i;
          }
          G__8873 = new cljs.core.IndexedSeq(G__8874__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8873);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__8929 = null;
        var G__8929__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8929__1 = function(result) {
          var G__8915 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8915) : rf.call(null, G__8915);
        };
        var G__8929__2 = function(result, input) {
          var G__8916 = result;
          var G__8917 = function() {
            var G__8918 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8918) : f.call(null, G__8918);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8916, G__8917) : rf.call(null, G__8916, G__8917);
        };
        var G__8929__3 = function() {
          var G__8930__delegate = function(result, input, inputs) {
            var G__8919 = result;
            var G__8920 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8919, G__8920) : rf.call(null, G__8919, G__8920);
          };
          var G__8930 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__8931__i = 0, G__8931__a = new Array(arguments.length - 2);
              while (G__8931__i < G__8931__a.length) {
                G__8931__a[G__8931__i] = arguments[G__8931__i + 2];
                ++G__8931__i;
              }
              inputs = new cljs.core.IndexedSeq(G__8931__a, 0);
            }
            return G__8930__delegate.call(this, result, input, inputs);
          };
          G__8930.cljs$lang$maxFixedArity = 2;
          G__8930.cljs$lang$applyTo = function(arglist__8932) {
            var result = cljs.core.first(arglist__8932);
            arglist__8932 = cljs.core.next(arglist__8932);
            var input = cljs.core.first(arglist__8932);
            var inputs = cljs.core.rest(arglist__8932);
            return G__8930__delegate(result, input, inputs);
          };
          G__8930.cljs$core$IFn$_invoke$arity$variadic = G__8930__delegate;
          return G__8930;
        }();
        G__8929 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__8929__0.call(this);
            case 1:
              return G__8929__1.call(this, result);
            case 2:
              return G__8929__2.call(this, result, input);
            default:
              var G__8933 = null;
              if (arguments.length > 2) {
                var G__8934__i = 0, G__8934__a = new Array(arguments.length - 2);
                while (G__8934__i < G__8934__a.length) {
                  G__8934__a[G__8934__i] = arguments[G__8934__i + 2];
                  ++G__8934__i;
                }
                G__8933 = new cljs.core.IndexedSeq(G__8934__a, 0);
              }
              return G__8929__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__8933);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8929.cljs$lang$maxFixedArity = 2;
        G__8929.cljs$lang$applyTo = G__8929__3.cljs$lang$applyTo;
        G__8929.cljs$core$IFn$_invoke$arity$0 = G__8929__0;
        G__8929.cljs$core$IFn$_invoke$arity$1 = G__8929__1;
        G__8929.cljs$core$IFn$_invoke$arity$2 = G__8929__2;
        G__8929.cljs$core$IFn$_invoke$arity$variadic = G__8929__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__8929;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4721__auto___8935 = size;
          var i_8936 = 0;
          while (true) {
            if (i_8936 < n__4721__auto___8935) {
              cljs.core.chunk_append(b, function() {
                var G__8921 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8936);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8921) : f.call(null, G__8921);
              }());
              var G__8937 = i_8936 + 1;
              i_8936 = G__8937;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__8922 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8922) : f.call(null, G__8922);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__8923 = cljs.core.first(s1);
          var G__8924 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8923, G__8924) : f.call(null, G__8923, G__8924);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__8925 = cljs.core.first(s1);
          var G__8926 = cljs.core.first(s2);
          var G__8927 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8925, G__8926, G__8927) : f.call(null, G__8925, G__8926, G__8927);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__8938__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__8875_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__8875_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__8938 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__8939__i = 0, G__8939__a = new Array(arguments.length - 4);
        while (G__8939__i < G__8939__a.length) {
          G__8939__a[G__8939__i] = arguments[G__8939__i + 4];
          ++G__8939__i;
        }
        colls = new cljs.core.IndexedSeq(G__8939__a, 0);
      }
      return G__8938__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__8938.cljs$lang$maxFixedArity = 4;
    G__8938.cljs$lang$applyTo = function(arglist__8940) {
      var f = cljs.core.first(arglist__8940);
      arglist__8940 = cljs.core.next(arglist__8940);
      var c1 = cljs.core.first(arglist__8940);
      arglist__8940 = cljs.core.next(arglist__8940);
      var c2 = cljs.core.first(arglist__8940);
      arglist__8940 = cljs.core.next(arglist__8940);
      var c3 = cljs.core.first(arglist__8940);
      var colls = cljs.core.rest(arglist__8940);
      return G__8938__delegate(f, c1, c2, c3, colls);
    };
    G__8938.cljs$core$IFn$_invoke$arity$variadic = G__8938__delegate;
    return G__8938;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__8941 = null;
        if (arguments.length > 4) {
          var G__8942__i = 0, G__8942__a = new Array(arguments.length - 4);
          while (G__8942__i < G__8942__a.length) {
            G__8942__a[G__8942__i] = arguments[G__8942__i + 4];
            ++G__8942__i;
          }
          G__8941 = new cljs.core.IndexedSeq(G__8942__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__8941);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8951 = null;
          var G__8951__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8951__1 = function(result) {
            var G__8948 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8948) : rf.call(null, G__8948);
          };
          var G__8951__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__8949 = result;
              var G__8950 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8949, G__8950) : rf.call(null, G__8949, G__8950);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__8951 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8951__0.call(this);
              case 1:
                return G__8951__1.call(this, result);
              case 2:
                return G__8951__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8951.cljs$core$IFn$_invoke$arity$0 = G__8951__0;
          G__8951.cljs$core$IFn$_invoke$arity$1 = G__8951__1;
          G__8951.cljs$core$IFn$_invoke$arity$2 = G__8951__2;
          return G__8951;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8958 = null;
          var G__8958__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8958__1 = function(result) {
            var G__8955 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8955) : rf.call(null, G__8955);
          };
          var G__8958__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__8956 = result;
              var G__8957 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8956, G__8957) : rf.call(null, G__8956, G__8957);
            }
          };
          G__8958 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8958__0.call(this);
              case 1:
                return G__8958__1.call(this, result);
              case 2:
                return G__8958__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8958.cljs$core$IFn$_invoke$arity$0 = G__8958__0;
          G__8958.cljs$core$IFn$_invoke$arity$1 = G__8958__1;
          G__8958.cljs$core$IFn$_invoke$arity$2 = G__8958__2;
          return G__8958;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__8959 = n__$1 - 1;
          var G__8960 = cljs.core.rest(s);
          n__$1 = G__8959;
          coll__$1 = G__8960;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__8963 = cljs.core.next(s);
      var G__8964 = cljs.core.next(lead);
      s = G__8963;
      lead = G__8964;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__8977 = null;
          var G__8977__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8977__1 = function(result) {
            var G__8971 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8971) : rf.call(null, G__8971);
          };
          var G__8977__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3822__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3822__auto__)) {
                var G__8972 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8972) : pred.call(null, G__8972);
              } else {
                return and__3822__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__8973 = result;
              var G__8974 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8973, G__8974) : rf.call(null, G__8973, G__8974);
            }
          };
          G__8977 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8977__0.call(this);
              case 1:
                return G__8977__1.call(this, result);
              case 2:
                return G__8977__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8977.cljs$core$IFn$_invoke$arity$0 = G__8977__0;
          G__8977.cljs$core$IFn$_invoke$arity$1 = G__8977__1;
          G__8977.cljs$core$IFn$_invoke$arity$2 = G__8977__2;
          return G__8977;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3822__auto__ = s;
          if (and__3822__auto__) {
            var G__8976 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8976) : pred__$1.call(null, G__8976);
          } else {
            return and__3822__auto__;
          }
        }())) {
          var G__8978 = pred__$1;
          var G__8979 = cljs.core.rest(s);
          pred__$1 = G__8978;
          coll__$1 = G__8979;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__8988 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8988) : f.call(null, G__8988);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__8991__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__8991 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__8992__i = 0, G__8992__a = new Array(arguments.length - 2);
        while (G__8992__i < G__8992__a.length) {
          G__8992__a[G__8992__i] = arguments[G__8992__i + 2];
          ++G__8992__i;
        }
        colls = new cljs.core.IndexedSeq(G__8992__a, 0);
      }
      return G__8991__delegate.call(this, c1, c2, colls);
    };
    G__8991.cljs$lang$maxFixedArity = 2;
    G__8991.cljs$lang$applyTo = function(arglist__8993) {
      var c1 = cljs.core.first(arglist__8993);
      arglist__8993 = cljs.core.next(arglist__8993);
      var c2 = cljs.core.first(arglist__8993);
      var colls = cljs.core.rest(arglist__8993);
      return G__8991__delegate(c1, c2, colls);
    };
    G__8991.cljs$core$IFn$_invoke$arity$variadic = G__8991__delegate;
    return G__8991;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__8994 = null;
        if (arguments.length > 2) {
          var G__8995__i = 0, G__8995__a = new Array(arguments.length - 2);
          while (G__8995__i < G__8995__a.length) {
            G__8995__a[G__8995__i] = arguments[G__8995__i + 2];
            ++G__8995__i;
          }
          G__8994 = new cljs.core.IndexedSeq(G__8995__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__8994);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__9010 = null;
          var G__9010__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9010__1 = function(result) {
            var G__9003 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9003) : rf.call(null, G__9003);
          };
          var G__9010__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__9004 = result;
                var G__9005 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9004, G__9005) : rf.call(null, G__9004, G__9005);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__9006 = sepr;
                var G__9007 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9006, G__9007) : rf.call(null, G__9006, G__9007);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__9008 = result;
              var G__9009 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9008, G__9009) : rf.call(null, G__9008, G__9009);
            }
          };
          G__9010 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9010__0.call(this);
              case 1:
                return G__9010__1.call(this, result);
              case 2:
                return G__9010__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9010.cljs$core$IFn$_invoke$arity$0 = G__9010__0;
          G__9010.cljs$core$IFn$_invoke$arity$1 = G__9010__1;
          G__9010.cljs$core$IFn$_invoke$arity$2 = G__9010__2;
          return G__9010;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__9019__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__9019 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__9020__i = 0, G__9020__a = new Array(arguments.length - 1);
        while (G__9020__i < G__9020__a.length) {
          G__9020__a[G__9020__i] = arguments[G__9020__i + 1];
          ++G__9020__i;
        }
        colls = new cljs.core.IndexedSeq(G__9020__a, 0);
      }
      return G__9019__delegate.call(this, f, colls);
    };
    G__9019.cljs$lang$maxFixedArity = 1;
    G__9019.cljs$lang$applyTo = function(arglist__9021) {
      var f = cljs.core.first(arglist__9021);
      var colls = cljs.core.rest(arglist__9021);
      return G__9019__delegate(f, colls);
    };
    G__9019.cljs$core$IFn$_invoke$arity$variadic = G__9019__delegate;
    return G__9019;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__9022 = null;
        if (arguments.length > 1) {
          var G__9023__i = 0, G__9023__a = new Array(arguments.length - 1);
          while (G__9023__i < G__9023__a.length) {
            G__9023__a[G__9023__i] = arguments[G__9023__i + 1];
            ++G__9023__i;
          }
          G__9022 = new cljs.core.IndexedSeq(G__9023__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9022);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__9042 = null;
        var G__9042__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9042__1 = function(result) {
          var G__9036 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9036) : rf.call(null, G__9036);
        };
        var G__9042__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__9037 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9037) : pred.call(null, G__9037);
          }())) {
            var G__9038 = result;
            var G__9039 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9038, G__9039) : rf.call(null, G__9038, G__9039);
          } else {
            return result;
          }
        };
        G__9042 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9042__0.call(this);
            case 1:
              return G__9042__1.call(this, result);
            case 2:
              return G__9042__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9042.cljs$core$IFn$_invoke$arity$0 = G__9042__0;
        G__9042.cljs$core$IFn$_invoke$arity$1 = G__9042__1;
        G__9042.cljs$core$IFn$_invoke$arity$2 = G__9042__2;
        return G__9042;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4721__auto___9043 = size;
          var i_9044 = 0;
          while (true) {
            if (i_9044 < n__4721__auto___9043) {
              if (cljs.core.truth_(function() {
                var G__9040 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9044);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9040) : pred.call(null, G__9040);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9044));
              } else {
              }
              var G__9045 = i_9044 + 1;
              i_9044 = G__9045;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__9041 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9041) : pred.call(null, G__9041);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__9052 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9052) : branch_QMARK_.call(null, G__9052);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__9053 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9053) : children.call(null, G__9053);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__9054_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__9054_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__9057 = to;
        if (G__9057) {
          var bit__4508__auto__ = G__9057.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4508__auto__ || G__9057.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__9058 = to;
      if (G__9058) {
        var bit__4508__auto__ = G__9058.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4508__auto__ || G__9058.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__9060 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9060) : f.call(null, G__9060);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__9061__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__9061 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__9062__i = 0, G__9062__a = new Array(arguments.length - 4);
        while (G__9062__i < G__9062__a.length) {
          G__9062__a[G__9062__i] = arguments[G__9062__i + 4];
          ++G__9062__i;
        }
        colls = new cljs.core.IndexedSeq(G__9062__a, 0);
      }
      return G__9061__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__9061.cljs$lang$maxFixedArity = 4;
    G__9061.cljs$lang$applyTo = function(arglist__9063) {
      var f = cljs.core.first(arglist__9063);
      arglist__9063 = cljs.core.next(arglist__9063);
      var c1 = cljs.core.first(arglist__9063);
      arglist__9063 = cljs.core.next(arglist__9063);
      var c2 = cljs.core.first(arglist__9063);
      arglist__9063 = cljs.core.next(arglist__9063);
      var c3 = cljs.core.first(arglist__9063);
      var colls = cljs.core.rest(arglist__9063);
      return G__9061__delegate(f, c1, c2, c3, colls);
    };
    G__9061.cljs$core$IFn$_invoke$arity$variadic = G__9061__delegate;
    return G__9061;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__9064 = null;
        if (arguments.length > 4) {
          var G__9065__i = 0, G__9065__a = new Array(arguments.length - 4);
          while (G__9065__i < G__9065__a.length) {
            G__9065__a[G__9065__i] = arguments[G__9065__i + 4];
            ++G__9065__i;
          }
          G__9064 = new cljs.core.IndexedSeq(G__9065__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__9064);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__9067 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9067) : pred.call(null, G__9067);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__9082 = m__$1;
          if (G__9082) {
            var bit__4515__auto__ = G__9082.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4515__auto__ || G__9082.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__9082.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9082);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9082);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__9083 = sentinel;
            var G__9084 = m__$2;
            var G__9085 = cljs.core.next(ks__$1);
            sentinel = G__9083;
            m__$1 = G__9084;
            ks__$1 = G__9085;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__9086, v) {
  var vec__9091 = p__9086;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9091, 0, null);
  var ks = cljs.core.nthnext(vec__9091, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__9092, f) {
    var vec__9130 = p__9092;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9130, 0, null);
    var ks = cljs.core.nthnext(vec__9130, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9131 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9131) : f.call(null, G__9131);
      }());
    }
  };
  var update_in__4 = function(m, p__9093, f, a) {
    var vec__9132 = p__9093;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9132, 0, null);
    var ks = cljs.core.nthnext(vec__9132, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9133 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9134 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9133, G__9134) : f.call(null, G__9133, G__9134);
      }());
    }
  };
  var update_in__5 = function(m, p__9094, f, a, b) {
    var vec__9135 = p__9094;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9135, 0, null);
    var ks = cljs.core.nthnext(vec__9135, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9136 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9137 = a;
        var G__9138 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9136, G__9137, G__9138) : f.call(null, G__9136, G__9137, G__9138);
      }());
    }
  };
  var update_in__6 = function(m, p__9095, f, a, b, c) {
    var vec__9139 = p__9095;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9139, 0, null);
    var ks = cljs.core.nthnext(vec__9139, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9140 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9141 = a;
        var G__9142 = b;
        var G__9143 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9140, G__9141, G__9142, G__9143) : f.call(null, G__9140, G__9141, G__9142, G__9143);
      }());
    }
  };
  var update_in__7 = function() {
    var G__9145__delegate = function(m, p__9096, f, a, b, c, args) {
      var vec__9144 = p__9096;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9144, 0, null);
      var ks = cljs.core.nthnext(vec__9144, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__9145 = function(m, p__9096, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__9146__i = 0, G__9146__a = new Array(arguments.length - 6);
        while (G__9146__i < G__9146__a.length) {
          G__9146__a[G__9146__i] = arguments[G__9146__i + 6];
          ++G__9146__i;
        }
        args = new cljs.core.IndexedSeq(G__9146__a, 0);
      }
      return G__9145__delegate.call(this, m, p__9096, f, a, b, c, args);
    };
    G__9145.cljs$lang$maxFixedArity = 6;
    G__9145.cljs$lang$applyTo = function(arglist__9147) {
      var m = cljs.core.first(arglist__9147);
      arglist__9147 = cljs.core.next(arglist__9147);
      var p__9096 = cljs.core.first(arglist__9147);
      arglist__9147 = cljs.core.next(arglist__9147);
      var f = cljs.core.first(arglist__9147);
      arglist__9147 = cljs.core.next(arglist__9147);
      var a = cljs.core.first(arglist__9147);
      arglist__9147 = cljs.core.next(arglist__9147);
      var b = cljs.core.first(arglist__9147);
      arglist__9147 = cljs.core.next(arglist__9147);
      var c = cljs.core.first(arglist__9147);
      var args = cljs.core.rest(arglist__9147);
      return G__9145__delegate(m, p__9096, f, a, b, c, args);
    };
    G__9145.cljs$core$IFn$_invoke$arity$variadic = G__9145__delegate;
    return G__9145;
  }();
  update_in = function(m, p__9096, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__9096, f);
      case 4:
        return update_in__4.call(this, m, p__9096, f, a);
      case 5:
        return update_in__5.call(this, m, p__9096, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__9096, f, a, b, c);
      default:
        var G__9148 = null;
        if (arguments.length > 6) {
          var G__9149__i = 0, G__9149__a = new Array(arguments.length - 6);
          while (G__9149__i < G__9149__a.length) {
            G__9149__a[G__9149__i] = arguments[G__9149__i + 6];
            ++G__9149__i;
          }
          G__9148 = new cljs.core.IndexedSeq(G__9149__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__9096, f, a, b, c, G__9148);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9160 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9160) : f.call(null, G__9160);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9161 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9162 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9161, G__9162) : f.call(null, G__9161, G__9162);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9163 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9164 = x;
      var G__9165 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9163, G__9164, G__9165) : f.call(null, G__9163, G__9164, G__9165);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9166 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9167 = x;
      var G__9168 = y;
      var G__9169 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9166, G__9167, G__9168, G__9169) : f.call(null, G__9166, G__9167, G__9168, G__9169);
    }());
  };
  var update__7 = function() {
    var G__9170__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__9170 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__9171__i = 0, G__9171__a = new Array(arguments.length - 6);
        while (G__9171__i < G__9171__a.length) {
          G__9171__a[G__9171__i] = arguments[G__9171__i + 6];
          ++G__9171__i;
        }
        more = new cljs.core.IndexedSeq(G__9171__a, 0);
      }
      return G__9170__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__9170.cljs$lang$maxFixedArity = 6;
    G__9170.cljs$lang$applyTo = function(arglist__9172) {
      var m = cljs.core.first(arglist__9172);
      arglist__9172 = cljs.core.next(arglist__9172);
      var k = cljs.core.first(arglist__9172);
      arglist__9172 = cljs.core.next(arglist__9172);
      var f = cljs.core.first(arglist__9172);
      arglist__9172 = cljs.core.next(arglist__9172);
      var x = cljs.core.first(arglist__9172);
      arglist__9172 = cljs.core.next(arglist__9172);
      var y = cljs.core.first(arglist__9172);
      arglist__9172 = cljs.core.next(arglist__9172);
      var z = cljs.core.first(arglist__9172);
      var more = cljs.core.rest(arglist__9172);
      return G__9170__delegate(m, k, f, x, y, z, more);
    };
    G__9170.cljs$core$IFn$_invoke$arity$variadic = G__9170__delegate;
    return G__9170;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__9173 = null;
        if (arguments.length > 6) {
          var G__9174__i = 0, G__9174__a = new Array(arguments.length - 6);
          while (G__9174__i < G__9174__a.length) {
            G__9174__a[G__9174__i] = arguments[G__9174__i + 6];
            ++G__9174__i;
          }
          G__9173 = new cljs.core.IndexedSeq(G__9174__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__9173);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__9175 = ll - 5;
      var G__9176 = r;
      ll = G__9175;
      ret = G__9176;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__9181 = cljs.core.pv_aget(node, 0);
      var G__9182 = level - 5;
      node = G__9181;
      level = G__9182;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__9183 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__9184 = level - 5;
        node = G__9183;
        level = G__9184;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9194 = init__$2;
              var G__9195 = j + i;
              var G__9196 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9194, G__9195, G__9196) : f.call(null, G__9194, G__9195, G__9196);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9207 = j + 1;
              var G__9208 = init__$3;
              j = G__9207;
              init__$2 = G__9208;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9197 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9197) : cljs.core.deref.call(null, G__9197);
      } else {
        var G__9209 = i + len;
        var G__9210 = init__$2;
        i = G__9209;
        init__$1 = G__9210;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__9198 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9198) : cljs.core.tv_editable_root.call(null, G__9198);
  }(), function() {
    var G__9199 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9199) : cljs.core.tv_editable_tail.call(null, G__9199);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9200 = init__$2;
              var G__9201 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9200, G__9201) : f.call(null, G__9200, G__9201);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9211 = j + 1;
              var G__9212 = init__$3;
              j = G__9211;
              init__$2 = G__9212;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9202 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9202) : cljs.core.deref.call(null, G__9202);
      } else {
        var G__9213 = i + len;
        var G__9214 = init__$2;
        i = G__9213;
        init__$1 = G__9214;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__9203 = coll__$1;
      var G__9204 = cljs.core.first_array_for_longvec(coll__$1);
      var G__9205 = 0;
      var G__9206 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9203, G__9204, G__9205, G__9206) : cljs.core.chunked_seq.call(null, G__9203, G__9204, G__9205, G__9206);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4721__auto___9215 = len;
    var i_9216 = 0;
    while (true) {
      if (i_9216 < n__4721__auto___9215) {
        new_tail[i_9216] = self__.tail[i_9216];
        var G__9217 = i_9216 + 1;
        i_9216 = G__9217;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9218 = null;
  var G__9218__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9218__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9218 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9218__2.call(this, self__, k);
      case 3:
        return G__9218__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9218.cljs$core$IFn$_invoke$arity$2 = G__9218__2;
  G__9218.cljs$core$IFn$_invoke$arity$3 = G__9218__3;
  return G__9218;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args9193) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9193)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__9219 = i + 1;
        var G__9220 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__9219;
        out = G__9220;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__9221__i = 0, G__9221__a = new Array(arguments.length - 0);
      while (G__9221__i < G__9221__a.length) {
        G__9221__a[G__9221__i] = arguments[G__9221__i + 0];
        ++G__9221__i;
      }
      args = new cljs.core.IndexedSeq(G__9221__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9222) {
    var args = cljs.core.seq(arglist__9222);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9223 = self__.vec;
      var G__9224 = self__.node;
      var G__9225 = self__.i;
      var G__9226 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9223, G__9224, G__9225, G__9226) : cljs.core.chunked_seq.call(null, G__9223, G__9224, G__9225, G__9226);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9227 = self__.vec;
    var G__9228 = self__.i + self__.off;
    var G__9229 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9227, G__9228, G__9229) : cljs.core.subvec.call(null, G__9227, G__9228, G__9229);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9230 = self__.vec;
    var G__9231 = self__.i + self__.off;
    var G__9232 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9230, G__9231, G__9232) : cljs.core.subvec.call(null, G__9230, G__9231, G__9232);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9233 = self__.vec;
      var G__9234 = self__.node;
      var G__9235 = self__.i;
      var G__9236 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9233, G__9234, G__9235, G__9236) : cljs.core.chunked_seq.call(null, G__9233, G__9234, G__9235, G__9236);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9237 = self__.vec;
    var G__9238 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9239 = end;
    var G__9240 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9237, G__9238, G__9239, G__9240) : cljs.core.chunked_seq.call(null, G__9237, G__9238, G__9239, G__9240);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__9241 = self__.vec;
  var G__9242 = self__.node;
  var G__9243 = self__.i;
  var G__9244 = self__.off;
  var G__9245 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9241, G__9242, G__9243, G__9244, G__9245) : cljs.core.chunked_seq.call(null, G__9241, G__9242, G__9243, G__9244, G__9245);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9246 = self__.vec;
    var G__9247 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9248 = end;
    var G__9249 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9246, G__9247, G__9248, G__9249) : cljs.core.chunked_seq.call(null, G__9246, G__9247, G__9248, G__9249);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__9251 = self__.meta;
  var G__9252 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__9253 = self__.start;
  var G__9254 = function() {
    var x__4151__auto__ = self__.end;
    var y__4152__auto__ = v_pos + 1;
    return x__4151__auto__ > y__4152__auto__ ? x__4151__auto__ : y__4152__auto__;
  }();
  var G__9255 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9251, G__9252, G__9253, G__9254, G__9255) : cljs.core.build_subvec.call(null, G__9251, G__9252, G__9253, G__9254, G__9255);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__9256 = self__.meta;
    var G__9257 = self__.v;
    var G__9258 = self__.start;
    var G__9259 = self__.end - 1;
    var G__9260 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9256, G__9257, G__9258, G__9259, G__9260) : cljs.core.build_subvec.call(null, G__9256, G__9257, G__9258, G__9259, G__9260);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__9262 = meta__$1;
  var G__9263 = self__.v;
  var G__9264 = self__.start;
  var G__9265 = self__.end;
  var G__9266 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9262, G__9263, G__9264, G__9265, G__9266) : cljs.core.build_subvec.call(null, G__9262, G__9263, G__9264, G__9265, G__9266);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__9267 = self__.meta;
  var G__9268 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__9269 = self__.start;
  var G__9270 = self__.end + 1;
  var G__9271 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9267, G__9268, G__9269, G__9270, G__9271) : cljs.core.build_subvec.call(null, G__9267, G__9268, G__9269, G__9270, G__9271);
};
cljs.core.Subvec.prototype.call = function() {
  var G__9272 = null;
  var G__9272__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9272__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9272 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9272__2.call(this, self__, k);
      case 3:
        return G__9272__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9272.cljs$core$IFn$_invoke$arity$2 = G__9272__2;
  G__9272.cljs$core$IFn$_invoke$arity$3 = G__9272__3;
  return G__9272;
}();
cljs.core.Subvec.prototype.apply = function(self__, args9250) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9250)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__9273 = meta;
      var G__9274 = v.v;
      var G__9275 = v.start + start;
      var G__9276 = v.start + end;
      var G__9277 = __hash;
      meta = G__9273;
      v = G__9274;
      start = G__9275;
      end = G__9276;
      __hash = G__9277;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj9284 = {};
    return obj9284;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__9292 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__9293 = level - 5;
        node = G__9292;
        level = G__9293;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9297 = null;
  var G__9297__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9297__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9297 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9297__2.call(this, self__, k);
      case 3:
        return G__9297__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9297.cljs$core$IFn$_invoke$arity$2 = G__9297__2;
  G__9297.cljs$core$IFn$_invoke$arity$3 = G__9297__3;
  return G__9297;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args9294) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9294)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3834__auto__ = self__.front;
    if (cljs.core.truth_(or__3834__auto__)) {
      return or__3834__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3834__auto__ = self__.rear;
      if (cljs.core.truth_(or__3834__auto__)) {
        return or__3834__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__9298 = i + incr;
        i = G__9298;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__9299 = i + 1;
      var G__9300 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__9299;
      out = G__9300;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj9304 = {};
    return obj9304;
  }();
  var l = ks.length;
  var i_9305 = 0;
  while (true) {
    if (i_9305 < l) {
      var k_9306 = ks[i_9305];
      new_obj[k_9306] = obj[k_9306];
      var G__9307 = i_9305 + 1;
      i_9305 = G__9307;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3822__auto__ = function() {
      var G__9311 = k;
      return goog.isString(G__9311);
    }();
    if (cljs.core.truth_(and__3822__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3822__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__9312 = init__$1;
        var G__9313 = k;
        var G__9314 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9312, G__9313, G__9314) : f.call(null, G__9312, G__9313, G__9314);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9315 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9315) : cljs.core.deref.call(null, G__9315);
      } else {
        var G__9321 = cljs.core.rest(keys__$1);
        var G__9322 = init__$2;
        keys__$1 = G__9321;
        init__$1 = G__9322;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3822__auto__ = function() {
      var G__9317 = k;
      return goog.isString(G__9317);
    }();
    if (cljs.core.truth_(and__3822__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3822__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__9318 = k;
    return goog.isString(G__9318);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3822__auto__ = function() {
      var G__9320 = k;
      return goog.isString(G__9320);
    }();
    if (cljs.core.truth_(and__3822__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3822__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__9308_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9308_SHARP_, self__.strobj[p1__9308_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9323 = null;
  var G__9323__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9323__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9323 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9323__2.call(this, self__, k);
      case 3:
        return G__9323__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9323.cljs$core$IFn$_invoke$arity$2 = G__9323__2;
  G__9323.cljs$core$IFn$_invoke$arity$3 = G__9323__3;
  return G__9323;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args9309) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9309)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj9325 = {};
  return obj9325;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__9326 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9326, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9326, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__9327 = i + 2;
        i = G__9327;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__9328 = i + 2;
        i = G__9328;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__9329 = i + 2;
        i = G__9329;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__9330 = i + 2;
        i = G__9330;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__9331 = i + 2;
        i = G__9331;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3834__auto__ = function() {
        var G__9335 = k;
        return goog.isString(G__9335);
      }();
      if (cljs.core.truth_(or__3834__auto__)) {
        return or__3834__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_9336 = 0;
  while (true) {
    if (i_9336 < l) {
      narr[i_9336] = arr[i_9336];
      var G__9337 = i_9336 + 1;
      i_9336 = G__9337;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9339 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9339) : cljs.core.keys.call(null, G__9339);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9340 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9340) : cljs.core.vals.call(null, G__9340);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9341 = cljs.core.seq(coll);
  var chunk__9342 = null;
  var count__9343 = 0;
  var i__9344 = 0;
  while (true) {
    if (i__9344 < count__9343) {
      var vec__9345 = chunk__9342.cljs$core$IIndexed$_nth$arity$2(null, i__9344);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9345, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9345, 1, null);
      var G__9346_9359 = v;
      var G__9347_9360 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9346_9359, G__9347_9360) : f.call(null, G__9346_9359, G__9347_9360);
      var G__9361 = seq__9341;
      var G__9362 = chunk__9342;
      var G__9363 = count__9343;
      var G__9364 = i__9344 + 1;
      seq__9341 = G__9361;
      chunk__9342 = G__9362;
      count__9343 = G__9363;
      i__9344 = G__9364;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9341);
      if (temp__4126__auto__) {
        var seq__9341__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9341__$1)) {
          var c__4621__auto__ = cljs.core.chunk_first(seq__9341__$1);
          var G__9365 = cljs.core.chunk_rest(seq__9341__$1);
          var G__9366 = c__4621__auto__;
          var G__9367 = cljs.core.count(c__4621__auto__);
          var G__9368 = 0;
          seq__9341 = G__9365;
          chunk__9342 = G__9366;
          count__9343 = G__9367;
          i__9344 = G__9368;
          continue;
        } else {
          var vec__9348 = cljs.core.first(seq__9341__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9348, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9348, 1, null);
          var G__9349_9369 = v;
          var G__9350_9370 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9349_9369, G__9350_9370) : f.call(null, G__9349_9369, G__9350_9370);
          var G__9371 = cljs.core.next(seq__9341__$1);
          var G__9372 = null;
          var G__9373 = 0;
          var G__9374 = 0;
          seq__9341 = G__9371;
          chunk__9342 = G__9372;
          count__9343 = G__9373;
          i__9344 = G__9374;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__9351 = init__$1;
        var G__9352 = self__.arr[i];
        var G__9353 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9351, G__9352, G__9353) : f.call(null, G__9351, G__9352, G__9353);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9354 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9354) : cljs.core.deref.call(null, G__9354);
      } else {
        var G__9375 = i + 2;
        var G__9376 = init__$2;
        i = G__9375;
        init__$1 = G__9376;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__9355 = other;
    if (G__9355) {
      var bit__4508__auto__ = G__9355.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4508__auto__ || G__9355.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__9377 = i + 2;
              i = G__9377;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj9357 = {};
    return obj9357;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__9378 = s + 2;
            var G__9379 = d;
            s = G__9378;
            d = G__9379;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__9380 = s + 2;
            var G__9381 = d + 2;
            s = G__9380;
            d = G__9381;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__9358 = cljs.core.aclone(self__.arr);
        G__9358[idx + 1] = v;
        return G__9358;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9382 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9383 = cljs.core.next(es);
          ret = G__9382;
          es = G__9383;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9384 = null;
  var G__9384__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9384__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9384 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9384__2.call(this, self__, k);
      case 3:
        return G__9384__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9384.cljs$core$IFn$_invoke$arity$2 = G__9384__2;
  G__9384.cljs$core$IFn$_invoke$arity$3 = G__9384__3;
  return G__9384;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args9338) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9338)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9385 = i + 2;
        var G__9386 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__9385;
        ret = G__9386;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__9387_9395 = self__.arr;
      G__9387_9395.pop();
      G__9387_9395.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__9388 = self__.len;
          var G__9389 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9388, G__9389) : cljs.core.array__GT_transient_hash_map.call(null, G__9388, G__9389);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__9390 = o;
      if (G__9390) {
        var bit__4515__auto__ = G__9390.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4515__auto__ || G__9390.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9390.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9390);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9390);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__9391 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9391) : cljs.core.key.call(null, G__9391);
      }(), function() {
        var G__9392 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9392) : cljs.core.val.call(null, G__9392);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9396 = cljs.core.next(es);
          var G__9397 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__9393 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9393) : cljs.core.key.call(null, G__9393);
          }(), function() {
            var G__9394 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9394) : cljs.core.val.call(null, G__9394);
          }());
          es = G__9396;
          tcoll__$2 = G__9397;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__9398 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__9399 = i + 2;
      out = G__9398;
      i = G__9399;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9402 = cljs.core.aclone(arr);
    G__9402[i] = a;
    return G__9402;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9403 = cljs.core.aclone(arr);
    G__9403[i] = a;
    G__9403[j] = b;
    return G__9403;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__9408 = init__$1;
          var G__9409 = k;
          var G__9410 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9408, G__9409, G__9410) : f.call(null, G__9408, G__9409, G__9410);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9411 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9411) : cljs.core.deref.call(null, G__9411);
      } else {
        var G__9412 = i + 2;
        var G__9413 = init__$2;
        i = G__9412;
        init__$1 = G__9413;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9414 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9414) : cljs.core.create_inode_seq.call(null, G__9414);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_9428 = 0;
        var j_9429 = 0;
        while (true) {
          if (i_9428 < 32) {
            if ((self__.bitmap >>> i_9428 & 1) === 0) {
              var G__9430 = i_9428 + 1;
              var G__9431 = j_9429;
              i_9428 = G__9430;
              j_9429 = G__9431;
              continue;
            } else {
              nodes[i_9428] = !(self__.arr[j_9429] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_9429]), self__.arr[j_9429], self__.arr[j_9429 + 1], added_leaf_QMARK_) : self__.arr[j_9429 + 1];
              var G__9432 = i_9428 + 1;
              var G__9433 = j_9429 + 2;
              i_9428 = G__9432;
              j_9429 = G__9433;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__9415 = edit__$1;
          var G__9416 = shift + 5;
          var G__9417 = key_or_nil;
          var G__9418 = val_or_node;
          var G__9419 = hash;
          var G__9420 = key;
          var G__9421 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9415, G__9416, G__9417, G__9418, G__9419, G__9420, G__9421) : cljs.core.create_node.call(null, G__9415, G__9416, G__9417, G__9418, G__9419, G__9420, G__9421);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_9434 = 0;
      var j_9435 = 0;
      while (true) {
        if (i_9434 < 32) {
          if ((self__.bitmap >>> i_9434 & 1) === 0) {
            var G__9436 = i_9434 + 1;
            var G__9437 = j_9435;
            i_9434 = G__9436;
            j_9435 = G__9437;
            continue;
          } else {
            nodes[i_9434] = !(self__.arr[j_9435] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_9435]), self__.arr[j_9435], self__.arr[j_9435 + 1], added_leaf_QMARK_) : self__.arr[j_9435 + 1];
            var G__9438 = i_9434 + 1;
            var G__9439 = j_9435 + 2;
            i_9434 = G__9438;
            j_9435 = G__9439;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__9422 = shift + 5;
          var G__9423 = key_or_nil;
          var G__9424 = val_or_node;
          var G__9425 = hash;
          var G__9426 = key;
          var G__9427 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9422, G__9423, G__9424, G__9425, G__9426, G__9427) : cljs.core.create_node.call(null, G__9422, G__9423, G__9424, G__9425, G__9426, G__9427);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__9440 = i + 1;
        var G__9441 = j + 2;
        var G__9442 = bitmap | 1 << i;
        i = G__9440;
        j = G__9441;
        bitmap = G__9442;
        continue;
      } else {
        var G__9443 = i + 1;
        var G__9444 = j;
        var G__9445 = bitmap;
        i = G__9443;
        j = G__9444;
        bitmap = G__9445;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9446 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9446) : cljs.core.create_array_node_seq.call(null, G__9446);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__9447 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9447) : cljs.core.deref.call(null, G__9447);
        } else {
          var G__9448 = i + 1;
          var G__9449 = init__$2;
          i = G__9448;
          init__$1 = G__9449;
          continue;
        }
      } else {
        var G__9450 = i + 1;
        var G__9451 = init__$1;
        i = G__9450;
        init__$1 = G__9451;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__9452 = i + 2;
        i = G__9452;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9453 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9453) : cljs.core.create_inode_seq.call(null, G__9453);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__9454 = self__.nodes;
    var G__9455 = self__.i + 2;
    var G__9456 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9454, G__9455, G__9456) : cljs.core.create_inode_seq.call(null, G__9454, G__9455, G__9456);
  } else {
    var G__9457 = self__.nodes;
    var G__9458 = self__.i;
    var G__9459 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9457, G__9458, G__9459) : cljs.core.create_inode_seq.call(null, G__9457, G__9458, G__9459);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__9463 = j + 2;
                j = G__9463;
                continue;
              }
            } else {
              var G__9464 = j + 2;
              j = G__9464;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__9465 = null;
  var G__9466 = self__.nodes;
  var G__9467 = self__.i;
  var G__9468 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9465, G__9466, G__9467, G__9468) : cljs.core.create_array_node_seq.call(null, G__9465, G__9466, G__9467, G__9468);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__9473 = j + 1;
              j = G__9473;
              continue;
            }
          } else {
            var G__9474 = j + 1;
            j = G__9474;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9476 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9476) : cljs.core.keys.call(null, G__9476);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9477 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9477) : cljs.core.vals.call(null, G__9477);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9478 = cljs.core.seq(coll);
  var chunk__9479 = null;
  var count__9480 = 0;
  var i__9481 = 0;
  while (true) {
    if (i__9481 < count__9480) {
      var vec__9482 = chunk__9479.cljs$core$IIndexed$_nth$arity$2(null, i__9481);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9482, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9482, 1, null);
      var G__9483_9494 = v;
      var G__9484_9495 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9483_9494, G__9484_9495) : f.call(null, G__9483_9494, G__9484_9495);
      var G__9496 = seq__9478;
      var G__9497 = chunk__9479;
      var G__9498 = count__9480;
      var G__9499 = i__9481 + 1;
      seq__9478 = G__9496;
      chunk__9479 = G__9497;
      count__9480 = G__9498;
      i__9481 = G__9499;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9478);
      if (temp__4126__auto__) {
        var seq__9478__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9478__$1)) {
          var c__4621__auto__ = cljs.core.chunk_first(seq__9478__$1);
          var G__9500 = cljs.core.chunk_rest(seq__9478__$1);
          var G__9501 = c__4621__auto__;
          var G__9502 = cljs.core.count(c__4621__auto__);
          var G__9503 = 0;
          seq__9478 = G__9500;
          chunk__9479 = G__9501;
          count__9480 = G__9502;
          i__9481 = G__9503;
          continue;
        } else {
          var vec__9485 = cljs.core.first(seq__9478__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9485, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9485, 1, null);
          var G__9486_9504 = v;
          var G__9487_9505 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9486_9504, G__9487_9505) : f.call(null, G__9486_9504, G__9487_9505);
          var G__9506 = cljs.core.next(seq__9478__$1);
          var G__9507 = null;
          var G__9508 = 0;
          var G__9509 = 0;
          seq__9478 = G__9506;
          chunk__9479 = G__9507;
          count__9480 = G__9508;
          i__9481 = G__9509;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__9488 = init;
    var G__9489 = null;
    var G__9490 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9488, G__9489, G__9490) : f.call(null, G__9488, G__9489, G__9490);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9491 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9491) : cljs.core.deref.call(null, G__9491);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj9493 = {};
    return obj9493;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9510 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9511 = cljs.core.next(es);
          ret = G__9510;
          es = G__9511;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9512 = null;
  var G__9512__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9512__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9512 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9512__2.call(this, self__, k);
      case 3:
        return G__9512__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9512.cljs$core$IFn$_invoke$arity$2 = G__9512__2;
  G__9512.cljs$core$IFn$_invoke$arity$3 = G__9512__3;
  return G__9512;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args9475) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9475)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9513 = i + 2;
      var G__9514 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__9513;
      ret = G__9514;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9515 = i + 1;
      var G__9516 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__9515;
      out = G__9516;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__9517 = o;
      if (G__9517) {
        var bit__4515__auto__ = G__9517.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4515__auto__ || G__9517.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9517.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9517);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9517);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__9518 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9518) : cljs.core.key.call(null, G__9518);
      }(), function() {
        var G__9519 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9519) : cljs.core.val.call(null, G__9519);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9522 = cljs.core.next(es);
          var G__9523 = tcoll__$1.assoc_BANG_(function() {
            var G__9520 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9520) : cljs.core.key.call(null, G__9520);
          }(), function() {
            var G__9521 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9521) : cljs.core.val.call(null, G__9521);
          }());
          es = G__9522;
          tcoll__$1 = G__9523;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__9524 = ascending_QMARK_ ? t.left : t.right;
      var G__9525 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__9524;
      stack__$1 = G__9525;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9538 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9538) : cljs.core.deref.call(null, G__9538);
  } else {
    var init__$2 = function() {
      var G__9539 = init__$1;
      var G__9540 = node.key;
      var G__9541 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9539, G__9540, G__9541) : f.call(null, G__9539, G__9540, G__9541);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__9542 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9542) : cljs.core.deref.call(null, G__9542);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__9543 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9543) : cljs.core.deref.call(null, G__9543);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9545 = null;
  var G__9545__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9545__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9545 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9545__2.call(this, self__, k);
      case 3:
        return G__9545__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9545.cljs$core$IFn$_invoke$arity$2 = G__9545__2;
  G__9545.cljs$core$IFn$_invoke$arity$3 = G__9545__3;
  return G__9545;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args9544) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9544)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__9547 = null;
  var G__9547__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9547__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9547 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9547__2.call(this, self__, k);
      case 3:
        return G__9547__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9547.cljs$core$IFn$_invoke$arity$2 = G__9547__2;
  G__9547.cljs$core$IFn$_invoke$arity$3 = G__9547__3;
  return G__9547;
}();
cljs.core.RedNode.prototype.apply = function(self__, args9546) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9546)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__9560 = k;
      var G__9561 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9560, G__9561) : comp.call(null, G__9560, G__9561);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__9580 = k;
      var G__9581 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9580, G__9581) : comp.call(null, G__9580, G__9581);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__9592 = k;
    var G__9593 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9592, G__9593) : comp.call(null, G__9592, G__9593);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9595 = cljs.core.seq(coll);
  var chunk__9596 = null;
  var count__9597 = 0;
  var i__9598 = 0;
  while (true) {
    if (i__9598 < count__9597) {
      var vec__9599 = chunk__9596.cljs$core$IIndexed$_nth$arity$2(null, i__9598);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9599, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9599, 1, null);
      var G__9600_9612 = v;
      var G__9601_9613 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9600_9612, G__9601_9613) : f.call(null, G__9600_9612, G__9601_9613);
      var G__9614 = seq__9595;
      var G__9615 = chunk__9596;
      var G__9616 = count__9597;
      var G__9617 = i__9598 + 1;
      seq__9595 = G__9614;
      chunk__9596 = G__9615;
      count__9597 = G__9616;
      i__9598 = G__9617;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9595);
      if (temp__4126__auto__) {
        var seq__9595__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9595__$1)) {
          var c__4621__auto__ = cljs.core.chunk_first(seq__9595__$1);
          var G__9618 = cljs.core.chunk_rest(seq__9595__$1);
          var G__9619 = c__4621__auto__;
          var G__9620 = cljs.core.count(c__4621__auto__);
          var G__9621 = 0;
          seq__9595 = G__9618;
          chunk__9596 = G__9619;
          count__9597 = G__9620;
          i__9598 = G__9621;
          continue;
        } else {
          var vec__9602 = cljs.core.first(seq__9595__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9602, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9602, 1, null);
          var G__9603_9622 = v;
          var G__9604_9623 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9603_9622, G__9604_9623) : f.call(null, G__9603_9622, G__9604_9623);
          var G__9624 = cljs.core.next(seq__9595__$1);
          var G__9625 = null;
          var G__9626 = 0;
          var G__9627 = 0;
          seq__9595 = G__9624;
          chunk__9596 = G__9625;
          count__9597 = G__9626;
          i__9598 = G__9627;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9605 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9605) : cljs.core.keys.call(null, G__9605);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9606 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9606) : cljs.core.vals.call(null, G__9606);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__9607 = k;
        var G__9608 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9607, G__9608) : self__.comp.call(null, G__9607, G__9608);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__9628 = t.left;
          t = G__9628;
          continue;
        } else {
          var G__9629 = t.right;
          t = G__9629;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9630 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9631 = cljs.core.next(es);
          ret = G__9630;
          es = G__9631;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9632 = null;
  var G__9632__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9632__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9632 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9632__2.call(this, self__, k);
      case 3:
        return G__9632__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9632.cljs$core$IFn$_invoke$arity$2 = G__9632__2;
  G__9632.cljs$core$IFn$_invoke$arity$3 = G__9632__3;
  return G__9632;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args9594) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9594)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__9609 = k;
          var G__9610 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9609, G__9610) : self__.comp.call(null, G__9609, G__9610);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__9633 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9634 = t.left;
              stack = G__9633;
              t = G__9634;
              continue;
            } else {
              var G__9635 = stack;
              var G__9636 = t.right;
              stack = G__9635;
              t = G__9636;
              continue;
            }
          } else {
            if (c > 0) {
              var G__9637 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9638 = t.right;
              stack = G__9637;
              t = G__9638;
              continue;
            } else {
              var G__9639 = stack;
              var G__9640 = t.left;
              stack = G__9639;
              t = G__9640;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__9611 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9611) : cljs.core.key.call(null, G__9611);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__9641 = cljs.core.nnext(in$);
        var G__9642 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9641;
        out = G__9642;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9643__i = 0, G__9643__a = new Array(arguments.length - 0);
      while (G__9643__i < G__9643__a.length) {
        G__9643__a[G__9643__i] = arguments[G__9643__i + 0];
        ++G__9643__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9643__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__9644) {
    var keyvals = cljs.core.seq(arglist__9644);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9645__i = 0, G__9645__a = new Array(arguments.length - 0);
      while (G__9645__i < G__9645__a.length) {
        G__9645__a[G__9645__i] = arguments[G__9645__i + 0];
        ++G__9645__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9645__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__9646) {
    var keyvals = cljs.core.seq(arglist__9646);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj9650 = {};
      return obj9650;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__9651 = cljs.core.nnext(kvs);
        kvs = G__9651;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9652__i = 0, G__9652__a = new Array(arguments.length - 0);
      while (G__9652__i < G__9652__a.length) {
        G__9652__a[G__9652__i] = arguments[G__9652__i + 0];
        ++G__9652__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9652__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__9653) {
    var keyvals = cljs.core.seq(arglist__9653);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__9654 = cljs.core.nnext(in$);
        var G__9655 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9654;
        out = G__9655;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9656__i = 0, G__9656__a = new Array(arguments.length - 0);
      while (G__9656__i < G__9656__a.length) {
        G__9656__a[G__9656__i] = arguments[G__9656__i + 0];
        ++G__9656__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9656__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__9657) {
    var keyvals = cljs.core.seq(arglist__9657);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__9658 = cljs.core.nnext(in$);
        var G__9659 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9658;
        out = G__9659;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__9660__i = 0, G__9660__a = new Array(arguments.length - 1);
      while (G__9660__i < G__9660__a.length) {
        G__9660__a[G__9660__i] = arguments[G__9660__i + 1];
        ++G__9660__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9660__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__9661) {
    var comparator = cljs.core.first(arglist__9661);
    var keyvals = cljs.core.rest(arglist__9661);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9662 = self__.mseq;
    if (G__9662) {
      var bit__4515__auto__ = G__9662.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4515__auto__ || G__9662.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9662.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9662);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9662);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9663 = self__.mseq;
    if (G__9663) {
      var bit__4515__auto__ = G__9663.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4515__auto__ || G__9663.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9663.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9663);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9663);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9664 = self__.mseq;
    if (G__9664) {
      var bit__4515__auto__ = G__9664.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4515__auto__ || G__9664.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9664.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9664);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9664);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9665 = self__.mseq;
    if (G__9665) {
      var bit__4515__auto__ = G__9665.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4515__auto__ || G__9665.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9665.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9665);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9665);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__9666_SHARP_, p2__9667_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3834__auto__ = p1__9666_SHARP_;
          if (cljs.core.truth_(or__3834__auto__)) {
            return or__3834__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__9667_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__9668__i = 0, G__9668__a = new Array(arguments.length - 0);
      while (G__9668__i < G__9668__a.length) {
        G__9668__a[G__9668__i] = arguments[G__9668__i + 0];
        ++G__9668__i;
      }
      maps = new cljs.core.IndexedSeq(G__9668__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__9669) {
    var maps = cljs.core.seq(arglist__9669);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__9672 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__9673 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9672, G__9673) : f.call(null, G__9672, G__9673);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3834__auto__ = m1;
            if (cljs.core.truth_(or__3834__auto__)) {
              return or__3834__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__9674__i = 0, G__9674__a = new Array(arguments.length - 1);
      while (G__9674__i < G__9674__a.length) {
        G__9674__a[G__9674__i] = arguments[G__9674__i + 1];
        ++G__9674__i;
      }
      maps = new cljs.core.IndexedSeq(G__9674__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__9675) {
    var f = cljs.core.first(arglist__9675);
    var maps = cljs.core.rest(arglist__9675);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__9676 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__9677 = cljs.core.next(keys);
      ret = G__9676;
      keys = G__9677;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9680 = cljs.core.seq(coll);
  var chunk__9681 = null;
  var count__9682 = 0;
  var i__9683 = 0;
  while (true) {
    if (i__9683 < count__9682) {
      var vec__9684 = chunk__9681.cljs$core$IIndexed$_nth$arity$2(null, i__9683);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9684, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9684, 1, null);
      var G__9685_9690 = v;
      var G__9686_9691 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9685_9690, G__9686_9691) : f.call(null, G__9685_9690, G__9686_9691);
      var G__9692 = seq__9680;
      var G__9693 = chunk__9681;
      var G__9694 = count__9682;
      var G__9695 = i__9683 + 1;
      seq__9680 = G__9692;
      chunk__9681 = G__9693;
      count__9682 = G__9694;
      i__9683 = G__9695;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9680);
      if (temp__4126__auto__) {
        var seq__9680__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9680__$1)) {
          var c__4621__auto__ = cljs.core.chunk_first(seq__9680__$1);
          var G__9696 = cljs.core.chunk_rest(seq__9680__$1);
          var G__9697 = c__4621__auto__;
          var G__9698 = cljs.core.count(c__4621__auto__);
          var G__9699 = 0;
          seq__9680 = G__9696;
          chunk__9681 = G__9697;
          count__9682 = G__9698;
          i__9683 = G__9699;
          continue;
        } else {
          var vec__9687 = cljs.core.first(seq__9680__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9687, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9687, 1, null);
          var G__9688_9700 = v;
          var G__9689_9701 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9688_9700, G__9689_9701) : f.call(null, G__9688_9700, G__9689_9701);
          var G__9702 = cljs.core.next(seq__9680__$1);
          var G__9703 = null;
          var G__9704 = 0;
          var G__9705 = 0;
          seq__9680 = G__9702;
          chunk__9681 = G__9703;
          count__9682 = G__9704;
          i__9683 = G__9705;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9678_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9678_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__9706 = null;
  var G__9706__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9706__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9706 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9706__2.call(this, self__, k);
      case 3:
        return G__9706__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9706.cljs$core$IFn$_invoke$arity$2 = G__9706__2;
  G__9706.cljs$core$IFn$_invoke$arity$3 = G__9706__3;
  return G__9706;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args9679) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9679)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9707 = i + 1;
        var G__9708 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__9707;
        out = G__9708;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__9709 = i + 1;
        var G__9710 = cljs.core._conj_BANG_(out, items[i]);
        i = G__9709;
        out = G__9710;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__9712 = null;
  var G__9712__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__9712__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__9712 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9712__2.call(this, self__, k);
      case 3:
        return G__9712__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9712.cljs$core$IFn$_invoke$arity$2 = G__9712__2;
  G__9712.cljs$core$IFn$_invoke$arity$3 = G__9712__3;
  return G__9712;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args9711) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9711)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9715 = cljs.core.seq(coll);
  var chunk__9716 = null;
  var count__9717 = 0;
  var i__9718 = 0;
  while (true) {
    if (i__9718 < count__9717) {
      var vec__9719 = chunk__9716.cljs$core$IIndexed$_nth$arity$2(null, i__9718);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9719, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9719, 1, null);
      var G__9720_9725 = v;
      var G__9721_9726 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9720_9725, G__9721_9726) : f.call(null, G__9720_9725, G__9721_9726);
      var G__9727 = seq__9715;
      var G__9728 = chunk__9716;
      var G__9729 = count__9717;
      var G__9730 = i__9718 + 1;
      seq__9715 = G__9727;
      chunk__9716 = G__9728;
      count__9717 = G__9729;
      i__9718 = G__9730;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9715);
      if (temp__4126__auto__) {
        var seq__9715__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9715__$1)) {
          var c__4621__auto__ = cljs.core.chunk_first(seq__9715__$1);
          var G__9731 = cljs.core.chunk_rest(seq__9715__$1);
          var G__9732 = c__4621__auto__;
          var G__9733 = cljs.core.count(c__4621__auto__);
          var G__9734 = 0;
          seq__9715 = G__9731;
          chunk__9716 = G__9732;
          count__9717 = G__9733;
          i__9718 = G__9734;
          continue;
        } else {
          var vec__9722 = cljs.core.first(seq__9715__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9722, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9722, 1, null);
          var G__9723_9735 = v;
          var G__9724_9736 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9723_9735, G__9724_9736) : f.call(null, G__9723_9735, G__9724_9736);
          var G__9737 = cljs.core.next(seq__9715__$1);
          var G__9738 = null;
          var G__9739 = 0;
          var G__9740 = 0;
          seq__9715 = G__9737;
          chunk__9716 = G__9738;
          count__9717 = G__9739;
          i__9718 = G__9740;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9713_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9713_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__9741 = null;
  var G__9741__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9741__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9741 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9741__2.call(this, self__, k);
      case 3:
        return G__9741__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9741.cljs$core$IFn$_invoke$arity$2 = G__9741__2;
  G__9741.cljs$core$IFn$_invoke$arity$3 = G__9741__3;
  return G__9741;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args9714) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9714)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4715__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4715__auto__.length) {
        var G__9742 = i + 1;
        var G__9743 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__9742;
        res = G__9743;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__9744 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__9745 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__9744;
          out = G__9745;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__9746__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__9746 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__9747__i = 0, G__9747__a = new Array(arguments.length - 0);
        while (G__9747__i < G__9747__a.length) {
          G__9747__a[G__9747__i] = arguments[G__9747__i + 0];
          ++G__9747__i;
        }
        keys = new cljs.core.IndexedSeq(G__9747__a, 0);
      }
      return G__9746__delegate.call(this, keys);
    };
    G__9746.cljs$lang$maxFixedArity = 0;
    G__9746.cljs$lang$applyTo = function(arglist__9748) {
      var keys = cljs.core.seq(arglist__9748);
      return G__9746__delegate(keys);
    };
    G__9746.cljs$core$IFn$_invoke$arity$variadic = G__9746__delegate;
    return G__9746;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__9749 = null;
        if (arguments.length > 0) {
          var G__9750__i = 0, G__9750__a = new Array(arguments.length - 0);
          while (G__9750__i < G__9750__a.length) {
            G__9750__a[G__9750__i] = arguments[G__9750__i + 0];
            ++G__9750__i;
          }
          G__9749 = new cljs.core.IndexedSeq(G__9750__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9749);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__9751__i = 0, G__9751__a = new Array(arguments.length - 0);
      while (G__9751__i < G__9751__a.length) {
        G__9751__a[G__9751__i] = arguments[G__9751__i + 0];
        ++G__9751__i;
      }
      keys = new cljs.core.IndexedSeq(G__9751__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__9752) {
    var keys = cljs.core.seq(arglist__9752);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__9753__i = 0, G__9753__a = new Array(arguments.length - 1);
      while (G__9753__i < G__9753__a.length) {
        G__9753__a[G__9753__i] = arguments[G__9753__i + 1];
        ++G__9753__i;
      }
      keys = new cljs.core.IndexedSeq(G__9753__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__9754) {
    var comparator = cljs.core.first(arglist__9754);
    var keys = cljs.core.rest(arglist__9754);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__9755_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__9755_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__9755_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9756_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__9756_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__9756_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__9777 = null;
          var G__9777__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9777__1 = function(result) {
            var G__9767 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9767) : rf.call(null, G__9767);
          };
          var G__9777__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__9768 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9768) : cljs.core.deref.call(null, G__9768);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__9769 = result;
              var G__9770 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9769, G__9770) : rf.call(null, G__9769, G__9770);
            }
          };
          G__9777 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9777__0.call(this);
              case 1:
                return G__9777__1.call(this, result);
              case 2:
                return G__9777__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9777.cljs$core$IFn$_invoke$arity$0 = G__9777__0;
          G__9777.cljs$core$IFn$_invoke$arity$1 = G__9777__1;
          G__9777.cljs$core$IFn$_invoke$arity$2 = G__9777__2;
          return G__9777;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__9775, seen__$1) {
          while (true) {
            var vec__9776 = p__9775;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9776, 0, null);
            var xs__$1 = vec__9776;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__9778 = cljs.core.rest(s);
                var G__9779 = seen__$1;
                p__9775 = G__9778;
                seen__$1 = G__9779;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__9780 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__9781 = cljs.core.next(s__$1);
      ret = G__9780;
      s__$1 = G__9781;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__9783 = x;
    if (G__9783) {
      var bit__4508__auto__ = G__9783.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4508__auto__ || G__9783.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__9784 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__9785 = cljs.core.next(ks);
      var G__9786 = cljs.core.next(vs);
      map = G__9784;
      ks = G__9785;
      vs = G__9786;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__9797 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9797) : k.call(null, G__9797);
    }() > function() {
      var G__9798 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9798) : k.call(null, G__9798);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__9799__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9787_SHARP_, p2__9788_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__9787_SHARP_, p2__9788_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9799 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9800__i = 0, G__9800__a = new Array(arguments.length - 3);
        while (G__9800__i < G__9800__a.length) {
          G__9800__a[G__9800__i] = arguments[G__9800__i + 3];
          ++G__9800__i;
        }
        more = new cljs.core.IndexedSeq(G__9800__a, 0);
      }
      return G__9799__delegate.call(this, k, x, y, more);
    };
    G__9799.cljs$lang$maxFixedArity = 3;
    G__9799.cljs$lang$applyTo = function(arglist__9801) {
      var k = cljs.core.first(arglist__9801);
      arglist__9801 = cljs.core.next(arglist__9801);
      var x = cljs.core.first(arglist__9801);
      arglist__9801 = cljs.core.next(arglist__9801);
      var y = cljs.core.first(arglist__9801);
      var more = cljs.core.rest(arglist__9801);
      return G__9799__delegate(k, x, y, more);
    };
    G__9799.cljs$core$IFn$_invoke$arity$variadic = G__9799__delegate;
    return G__9799;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__9802 = null;
        if (arguments.length > 3) {
          var G__9803__i = 0, G__9803__a = new Array(arguments.length - 3);
          while (G__9803__i < G__9803__a.length) {
            G__9803__a[G__9803__i] = arguments[G__9803__i + 3];
            ++G__9803__i;
          }
          G__9802 = new cljs.core.IndexedSeq(G__9803__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9802);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__9814 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9814) : k.call(null, G__9814);
    }() < function() {
      var G__9815 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9815) : k.call(null, G__9815);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__9816__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9804_SHARP_, p2__9805_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__9804_SHARP_, p2__9805_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9816 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9817__i = 0, G__9817__a = new Array(arguments.length - 3);
        while (G__9817__i < G__9817__a.length) {
          G__9817__a[G__9817__i] = arguments[G__9817__i + 3];
          ++G__9817__i;
        }
        more = new cljs.core.IndexedSeq(G__9817__a, 0);
      }
      return G__9816__delegate.call(this, k, x, y, more);
    };
    G__9816.cljs$lang$maxFixedArity = 3;
    G__9816.cljs$lang$applyTo = function(arglist__9818) {
      var k = cljs.core.first(arglist__9818);
      arglist__9818 = cljs.core.next(arglist__9818);
      var x = cljs.core.first(arglist__9818);
      arglist__9818 = cljs.core.next(arglist__9818);
      var y = cljs.core.first(arglist__9818);
      var more = cljs.core.rest(arglist__9818);
      return G__9816__delegate(k, x, y, more);
    };
    G__9816.cljs$core$IFn$_invoke$arity$variadic = G__9816__delegate;
    return G__9816;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__9819 = null;
        if (arguments.length > 3) {
          var G__9820__i = 0, G__9820__a = new Array(arguments.length - 3);
          while (G__9820__i < G__9820__a.length) {
            G__9820__a[G__9820__i] = arguments[G__9820__i + 3];
            ++G__9820__i;
          }
          G__9819 = new cljs.core.IndexedSeq(G__9820__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9819);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__9837 = null;
          var G__9837__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9837__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9832 = result;
                var G__9833 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9832, G__9833) : rf.call(null, G__9832, G__9833);
              }());
            }();
            var G__9834 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9834) : rf.call(null, G__9834);
          };
          var G__9837__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__9835 = result;
              var G__9836 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9835, G__9836) : rf.call(null, G__9835, G__9836);
            } else {
              return result;
            }
          };
          G__9837 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9837__0.call(this);
              case 1:
                return G__9837__1.call(this, result);
              case 2:
                return G__9837__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9837.cljs$core$IFn$_invoke$arity$0 = G__9837__0;
          G__9837.cljs$core$IFn$_invoke$arity$1 = G__9837__1;
          G__9837.cljs$core$IFn$_invoke$arity$2 = G__9837__2;
          return G__9837;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__9850 = null;
        var G__9850__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9850__1 = function(result) {
          var G__9845 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9845) : rf.call(null, G__9845);
        };
        var G__9850__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__9846 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9846) : pred.call(null, G__9846);
          }())) {
            var G__9847 = result;
            var G__9848 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9847, G__9848) : rf.call(null, G__9847, G__9848);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__9850 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9850__0.call(this);
            case 1:
              return G__9850__1.call(this, result);
            case 2:
              return G__9850__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9850.cljs$core$IFn$_invoke$arity$0 = G__9850__0;
        G__9850.cljs$core$IFn$_invoke$arity$1 = G__9850__1;
        G__9850.cljs$core$IFn$_invoke$arity$2 = G__9850__2;
        return G__9850;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__9849 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9849) : pred.call(null, G__9849);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__9855 = function() {
      var G__9857 = cljs.core._entry_key(sc, e);
      var G__9858 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9857, G__9858) : comp.call(null, G__9857, G__9858);
    }();
    var G__9856 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9855, G__9856) : test.call(null, G__9855, G__9856);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9862 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9862, 0, null);
        var s = vec__9862;
        if (cljs.core.truth_(function() {
          var G__9863 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9863) : include.call(null, G__9863);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9864 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9864, 0, null);
      var s = vec__9864;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9868 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9868, 0, null);
        var s = vec__9868;
        if (cljs.core.truth_(function() {
          var G__9869 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9869) : include.call(null, G__9869);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9870 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9870, 0, null);
      var s = vec__9870;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__9871 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9871) : Math.ceil.call(null, G__9871);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4255__auto__ = self__.__hash;
  if (!(h__4255__auto__ == null)) {
    return h__4255__auto__;
  } else {
    var h__4255__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4255__auto____$1;
    return h__4255__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__9872 = ret;
        var G__9873 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9872, G__9873) : f.call(null, G__9872, G__9873);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__9874 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9874) : cljs.core.deref.call(null, G__9874);
      } else {
        var G__9875 = i + self__.step;
        var G__9876 = ret__$1;
        i = G__9875;
        ret = G__9876;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__9894 = null;
          var G__9894__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9894__1 = function(result) {
            var G__9891 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9891) : rf.call(null, G__9891);
          };
          var G__9894__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__9892 = result;
              var G__9893 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9892, G__9893) : rf.call(null, G__9892, G__9893);
            } else {
              return result;
            }
          };
          G__9894 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9894__0.call(this);
              case 1:
                return G__9894__1.call(this, result);
              case 2:
                return G__9894__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9894.cljs$core$IFn$_invoke$arity$0 = G__9894__0;
          G__9894.cljs$core$IFn$_invoke$arity$1 = G__9894__1;
          G__9894.cljs$core$IFn$_invoke$arity$2 = G__9894__2;
          return G__9894;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__9916 = null;
          var G__9916__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9916__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9907 = result;
                var G__9908 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9907, G__9908) : rf.call(null, G__9907, G__9908);
              }());
            }();
            var G__9909 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9909) : rf.call(null, G__9909);
          };
          var G__9916__2 = function(result, input) {
            var pval = function() {
              var G__9910 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9910) : cljs.core.deref.call(null, G__9910);
            }();
            var val = function() {
              var G__9911 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9911) : f.call(null, G__9911);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__9912 = result;
                var G__9913 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9912, G__9913) : rf.call(null, G__9912, G__9913);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__9916 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9916__0.call(this);
              case 1:
                return G__9916__1.call(this, result);
              case 2:
                return G__9916__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9916.cljs$core$IFn$_invoke$arity$0 = G__9916__0;
          G__9916.cljs$core$IFn$_invoke$arity$1 = G__9916__1;
          G__9916.cljs$core$IFn$_invoke$arity$2 = G__9916__2;
          return G__9916;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__9914 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9914) : f.call(null, G__9914);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__9895_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__9915 = p1__9895_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9915) : f.call(null, G__9915);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__9925 = init;
          var G__9926 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9925, G__9926) : f.call(null, G__9925, G__9926);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10021 = null;
      var G__10021__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__10021__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9979 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9979) : f.call(null, G__9979);
        }()], null);
      };
      var G__10021__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9980 = x;
          var G__9981 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9980, G__9981) : f.call(null, G__9980, G__9981);
        }()], null);
      };
      var G__10021__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9982 = x;
          var G__9983 = y;
          var G__9984 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9982, G__9983, G__9984) : f.call(null, G__9982, G__9983, G__9984);
        }()], null);
      };
      var G__10021__4 = function() {
        var G__10022__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__10022 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10023__i = 0, G__10023__a = new Array(arguments.length - 3);
            while (G__10023__i < G__10023__a.length) {
              G__10023__a[G__10023__i] = arguments[G__10023__i + 3];
              ++G__10023__i;
            }
            args = new cljs.core.IndexedSeq(G__10023__a, 0);
          }
          return G__10022__delegate.call(this, x, y, z, args);
        };
        G__10022.cljs$lang$maxFixedArity = 3;
        G__10022.cljs$lang$applyTo = function(arglist__10024) {
          var x = cljs.core.first(arglist__10024);
          arglist__10024 = cljs.core.next(arglist__10024);
          var y = cljs.core.first(arglist__10024);
          arglist__10024 = cljs.core.next(arglist__10024);
          var z = cljs.core.first(arglist__10024);
          var args = cljs.core.rest(arglist__10024);
          return G__10022__delegate(x, y, z, args);
        };
        G__10022.cljs$core$IFn$_invoke$arity$variadic = G__10022__delegate;
        return G__10022;
      }();
      G__10021 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10021__0.call(this);
          case 1:
            return G__10021__1.call(this, x);
          case 2:
            return G__10021__2.call(this, x, y);
          case 3:
            return G__10021__3.call(this, x, y, z);
          default:
            var G__10025 = null;
            if (arguments.length > 3) {
              var G__10026__i = 0, G__10026__a = new Array(arguments.length - 3);
              while (G__10026__i < G__10026__a.length) {
                G__10026__a[G__10026__i] = arguments[G__10026__i + 3];
                ++G__10026__i;
              }
              G__10025 = new cljs.core.IndexedSeq(G__10026__a, 0);
            }
            return G__10021__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10025);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10021.cljs$lang$maxFixedArity = 3;
      G__10021.cljs$lang$applyTo = G__10021__4.cljs$lang$applyTo;
      G__10021.cljs$core$IFn$_invoke$arity$0 = G__10021__0;
      G__10021.cljs$core$IFn$_invoke$arity$1 = G__10021__1;
      G__10021.cljs$core$IFn$_invoke$arity$2 = G__10021__2;
      G__10021.cljs$core$IFn$_invoke$arity$3 = G__10021__3;
      G__10021.cljs$core$IFn$_invoke$arity$variadic = G__10021__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10021;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10027 = null;
      var G__10027__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__10027__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9985 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9985) : f.call(null, G__9985);
        }(), function() {
          var G__9986 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9986) : g.call(null, G__9986);
        }()], null);
      };
      var G__10027__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9987 = x;
          var G__9988 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9987, G__9988) : f.call(null, G__9987, G__9988);
        }(), function() {
          var G__9989 = x;
          var G__9990 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9989, G__9990) : g.call(null, G__9989, G__9990);
        }()], null);
      };
      var G__10027__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9991 = x;
          var G__9992 = y;
          var G__9993 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9991, G__9992, G__9993) : f.call(null, G__9991, G__9992, G__9993);
        }(), function() {
          var G__9994 = x;
          var G__9995 = y;
          var G__9996 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9994, G__9995, G__9996) : g.call(null, G__9994, G__9995, G__9996);
        }()], null);
      };
      var G__10027__4 = function() {
        var G__10028__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__10028 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10029__i = 0, G__10029__a = new Array(arguments.length - 3);
            while (G__10029__i < G__10029__a.length) {
              G__10029__a[G__10029__i] = arguments[G__10029__i + 3];
              ++G__10029__i;
            }
            args = new cljs.core.IndexedSeq(G__10029__a, 0);
          }
          return G__10028__delegate.call(this, x, y, z, args);
        };
        G__10028.cljs$lang$maxFixedArity = 3;
        G__10028.cljs$lang$applyTo = function(arglist__10030) {
          var x = cljs.core.first(arglist__10030);
          arglist__10030 = cljs.core.next(arglist__10030);
          var y = cljs.core.first(arglist__10030);
          arglist__10030 = cljs.core.next(arglist__10030);
          var z = cljs.core.first(arglist__10030);
          var args = cljs.core.rest(arglist__10030);
          return G__10028__delegate(x, y, z, args);
        };
        G__10028.cljs$core$IFn$_invoke$arity$variadic = G__10028__delegate;
        return G__10028;
      }();
      G__10027 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10027__0.call(this);
          case 1:
            return G__10027__1.call(this, x);
          case 2:
            return G__10027__2.call(this, x, y);
          case 3:
            return G__10027__3.call(this, x, y, z);
          default:
            var G__10031 = null;
            if (arguments.length > 3) {
              var G__10032__i = 0, G__10032__a = new Array(arguments.length - 3);
              while (G__10032__i < G__10032__a.length) {
                G__10032__a[G__10032__i] = arguments[G__10032__i + 3];
                ++G__10032__i;
              }
              G__10031 = new cljs.core.IndexedSeq(G__10032__a, 0);
            }
            return G__10027__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10031);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10027.cljs$lang$maxFixedArity = 3;
      G__10027.cljs$lang$applyTo = G__10027__4.cljs$lang$applyTo;
      G__10027.cljs$core$IFn$_invoke$arity$0 = G__10027__0;
      G__10027.cljs$core$IFn$_invoke$arity$1 = G__10027__1;
      G__10027.cljs$core$IFn$_invoke$arity$2 = G__10027__2;
      G__10027.cljs$core$IFn$_invoke$arity$3 = G__10027__3;
      G__10027.cljs$core$IFn$_invoke$arity$variadic = G__10027__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10027;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10033 = null;
      var G__10033__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__10033__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9997 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9997) : f.call(null, G__9997);
        }(), function() {
          var G__9998 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9998) : g.call(null, G__9998);
        }(), function() {
          var G__9999 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9999) : h.call(null, G__9999);
        }()], null);
      };
      var G__10033__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__10000 = x;
          var G__10001 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10000, G__10001) : f.call(null, G__10000, G__10001);
        }(), function() {
          var G__10002 = x;
          var G__10003 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10002, G__10003) : g.call(null, G__10002, G__10003);
        }(), function() {
          var G__10004 = x;
          var G__10005 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10004, G__10005) : h.call(null, G__10004, G__10005);
        }()], null);
      };
      var G__10033__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__10006 = x;
          var G__10007 = y;
          var G__10008 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10006, G__10007, G__10008) : f.call(null, G__10006, G__10007, G__10008);
        }(), function() {
          var G__10009 = x;
          var G__10010 = y;
          var G__10011 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10009, G__10010, G__10011) : g.call(null, G__10009, G__10010, G__10011);
        }(), function() {
          var G__10012 = x;
          var G__10013 = y;
          var G__10014 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10012, G__10013, G__10014) : h.call(null, G__10012, G__10013, G__10014);
        }()], null);
      };
      var G__10033__4 = function() {
        var G__10034__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__10034 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10035__i = 0, G__10035__a = new Array(arguments.length - 3);
            while (G__10035__i < G__10035__a.length) {
              G__10035__a[G__10035__i] = arguments[G__10035__i + 3];
              ++G__10035__i;
            }
            args = new cljs.core.IndexedSeq(G__10035__a, 0);
          }
          return G__10034__delegate.call(this, x, y, z, args);
        };
        G__10034.cljs$lang$maxFixedArity = 3;
        G__10034.cljs$lang$applyTo = function(arglist__10036) {
          var x = cljs.core.first(arglist__10036);
          arglist__10036 = cljs.core.next(arglist__10036);
          var y = cljs.core.first(arglist__10036);
          arglist__10036 = cljs.core.next(arglist__10036);
          var z = cljs.core.first(arglist__10036);
          var args = cljs.core.rest(arglist__10036);
          return G__10034__delegate(x, y, z, args);
        };
        G__10034.cljs$core$IFn$_invoke$arity$variadic = G__10034__delegate;
        return G__10034;
      }();
      G__10033 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10033__0.call(this);
          case 1:
            return G__10033__1.call(this, x);
          case 2:
            return G__10033__2.call(this, x, y);
          case 3:
            return G__10033__3.call(this, x, y, z);
          default:
            var G__10037 = null;
            if (arguments.length > 3) {
              var G__10038__i = 0, G__10038__a = new Array(arguments.length - 3);
              while (G__10038__i < G__10038__a.length) {
                G__10038__a[G__10038__i] = arguments[G__10038__i + 3];
                ++G__10038__i;
              }
              G__10037 = new cljs.core.IndexedSeq(G__10038__a, 0);
            }
            return G__10033__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10037);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10033.cljs$lang$maxFixedArity = 3;
      G__10033.cljs$lang$applyTo = G__10033__4.cljs$lang$applyTo;
      G__10033.cljs$core$IFn$_invoke$arity$0 = G__10033__0;
      G__10033.cljs$core$IFn$_invoke$arity$1 = G__10033__1;
      G__10033.cljs$core$IFn$_invoke$arity$2 = G__10033__2;
      G__10033.cljs$core$IFn$_invoke$arity$3 = G__10033__3;
      G__10033.cljs$core$IFn$_invoke$arity$variadic = G__10033__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10033;
    }();
  };
  var juxt__4 = function() {
    var G__10039__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__10040 = null;
          var G__10040__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9927_SHARP_, p2__9928_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9927_SHARP_, function() {
                  return p2__9928_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9928_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9928_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10040__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9929_SHARP_, p2__9930_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9929_SHARP_, function() {
                  var G__10015 = x;
                  return p2__9930_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9930_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10015) : p2__9930_SHARP_.call(null, G__10015);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10040__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9931_SHARP_, p2__9932_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9931_SHARP_, function() {
                  var G__10016 = x;
                  var G__10017 = y;
                  return p2__9932_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9932_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10016, G__10017) : p2__9932_SHARP_.call(null, G__10016, G__10017);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10040__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9933_SHARP_, p2__9934_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9933_SHARP_, function() {
                  var G__10018 = x;
                  var G__10019 = y;
                  var G__10020 = z;
                  return p2__9934_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9934_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10018, G__10019, G__10020) : p2__9934_SHARP_.call(null, G__10018, G__10019, G__10020);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10040__4 = function() {
            var G__10041__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__9935_SHARP_, p2__9936_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9935_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9936_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__10041 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__10042__i = 0, G__10042__a = new Array(arguments.length - 3);
                while (G__10042__i < G__10042__a.length) {
                  G__10042__a[G__10042__i] = arguments[G__10042__i + 3];
                  ++G__10042__i;
                }
                args = new cljs.core.IndexedSeq(G__10042__a, 0);
              }
              return G__10041__delegate.call(this, x, y, z, args);
            };
            G__10041.cljs$lang$maxFixedArity = 3;
            G__10041.cljs$lang$applyTo = function(arglist__10043) {
              var x = cljs.core.first(arglist__10043);
              arglist__10043 = cljs.core.next(arglist__10043);
              var y = cljs.core.first(arglist__10043);
              arglist__10043 = cljs.core.next(arglist__10043);
              var z = cljs.core.first(arglist__10043);
              var args = cljs.core.rest(arglist__10043);
              return G__10041__delegate(x, y, z, args);
            };
            G__10041.cljs$core$IFn$_invoke$arity$variadic = G__10041__delegate;
            return G__10041;
          }();
          G__10040 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__10040__0.call(this);
              case 1:
                return G__10040__1.call(this, x);
              case 2:
                return G__10040__2.call(this, x, y);
              case 3:
                return G__10040__3.call(this, x, y, z);
              default:
                var G__10044 = null;
                if (arguments.length > 3) {
                  var G__10045__i = 0, G__10045__a = new Array(arguments.length - 3);
                  while (G__10045__i < G__10045__a.length) {
                    G__10045__a[G__10045__i] = arguments[G__10045__i + 3];
                    ++G__10045__i;
                  }
                  G__10044 = new cljs.core.IndexedSeq(G__10045__a, 0);
                }
                return G__10040__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10044);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10040.cljs$lang$maxFixedArity = 3;
          G__10040.cljs$lang$applyTo = G__10040__4.cljs$lang$applyTo;
          G__10040.cljs$core$IFn$_invoke$arity$0 = G__10040__0;
          G__10040.cljs$core$IFn$_invoke$arity$1 = G__10040__1;
          G__10040.cljs$core$IFn$_invoke$arity$2 = G__10040__2;
          G__10040.cljs$core$IFn$_invoke$arity$3 = G__10040__3;
          G__10040.cljs$core$IFn$_invoke$arity$variadic = G__10040__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__10040;
        }();
      }(fs__$1);
    };
    var G__10039 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__10046__i = 0, G__10046__a = new Array(arguments.length - 3);
        while (G__10046__i < G__10046__a.length) {
          G__10046__a[G__10046__i] = arguments[G__10046__i + 3];
          ++G__10046__i;
        }
        fs = new cljs.core.IndexedSeq(G__10046__a, 0);
      }
      return G__10039__delegate.call(this, f, g, h, fs);
    };
    G__10039.cljs$lang$maxFixedArity = 3;
    G__10039.cljs$lang$applyTo = function(arglist__10047) {
      var f = cljs.core.first(arglist__10047);
      arglist__10047 = cljs.core.next(arglist__10047);
      var g = cljs.core.first(arglist__10047);
      arglist__10047 = cljs.core.next(arglist__10047);
      var h = cljs.core.first(arglist__10047);
      var fs = cljs.core.rest(arglist__10047);
      return G__10039__delegate(f, g, h, fs);
    };
    G__10039.cljs$core$IFn$_invoke$arity$variadic = G__10039__delegate;
    return G__10039;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__10048 = null;
        if (arguments.length > 3) {
          var G__10049__i = 0, G__10049__a = new Array(arguments.length - 3);
          while (G__10049__i < G__10049__a.length) {
            G__10049__a[G__10049__i] = arguments[G__10049__i + 3];
            ++G__10049__i;
          }
          G__10048 = new cljs.core.IndexedSeq(G__10049__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__10048);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__10050 = cljs.core.next(coll);
        coll = G__10050;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__10051 = n - 1;
        var G__10052 = cljs.core.next(coll);
        n = G__10051;
        coll = G__10052;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__10056 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10056, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10056, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10056, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10064 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__10065_10071 = cljs.core.first(coll);
        var G__10066_10072 = writer;
        var G__10067_10073 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10065_10071, G__10066_10072, G__10067_10073) : print_one.call(null, G__10065_10071, G__10066_10072, G__10067_10073);
      } else {
      }
      var coll_10074__$1 = cljs.core.next(coll);
      var n_10075 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_10074__$1 && (n_10075 == null || !(n_10075 === 0))) {
          cljs.core._write(writer, sep);
          var G__10068_10076 = cljs.core.first(coll_10074__$1);
          var G__10069_10077 = writer;
          var G__10070_10078 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10068_10076, G__10069_10077, G__10070_10078) : print_one.call(null, G__10068_10076, G__10069_10077, G__10070_10078);
          var G__10079 = cljs.core.next(coll_10074__$1);
          var G__10080 = n_10075 - 1;
          coll_10074__$1 = G__10079;
          n_10075 = G__10080;
          continue;
        } else {
          if (cljs.core.seq(coll_10074__$1) && n_10075 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10064;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10085 = cljs.core.seq(ss);
    var chunk__10086 = null;
    var count__10087 = 0;
    var i__10088 = 0;
    while (true) {
      if (i__10088 < count__10087) {
        var s = chunk__10086.cljs$core$IIndexed$_nth$arity$2(null, i__10088);
        cljs.core._write(writer, s);
        var G__10089 = seq__10085;
        var G__10090 = chunk__10086;
        var G__10091 = count__10087;
        var G__10092 = i__10088 + 1;
        seq__10085 = G__10089;
        chunk__10086 = G__10090;
        count__10087 = G__10091;
        i__10088 = G__10092;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__10085);
        if (temp__4126__auto__) {
          var seq__10085__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__10085__$1)) {
            var c__4621__auto__ = cljs.core.chunk_first(seq__10085__$1);
            var G__10093 = cljs.core.chunk_rest(seq__10085__$1);
            var G__10094 = c__4621__auto__;
            var G__10095 = cljs.core.count(c__4621__auto__);
            var G__10096 = 0;
            seq__10085 = G__10093;
            chunk__10086 = G__10094;
            count__10087 = G__10095;
            i__10088 = G__10096;
            continue;
          } else {
            var s = cljs.core.first(seq__10085__$1);
            cljs.core._write(writer, s);
            var G__10097 = cljs.core.next(seq__10085__$1);
            var G__10098 = null;
            var G__10099 = 0;
            var G__10100 = 0;
            seq__10085 = G__10097;
            chunk__10086 = G__10098;
            count__10087 = G__10099;
            i__10088 = G__10100;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__10101__i = 0, G__10101__a = new Array(arguments.length - 1);
      while (G__10101__i < G__10101__a.length) {
        G__10101__a[G__10101__i] = arguments[G__10101__i + 1];
        ++G__10101__i;
      }
      ss = new cljs.core.IndexedSeq(G__10101__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10102) {
    var writer = cljs.core.first(arglist__10102);
    var ss = cljs.core.rest(arglist__10102);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10104 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10104;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__10107 = '[\\\\"\b\f\n\r\t]';
    var G__10108 = "g";
    return RegExp(G__10107, G__10108);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3822__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3822__auto__)) {
          var and__3822__auto____$1 = function() {
            var G__10122 = obj;
            if (G__10122) {
              var bit__4515__auto__ = G__10122.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4515__auto__ || G__10122.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__10122.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10122);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10122);
            }
          }();
          if (and__3822__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3822__auto____$1;
          }
        } else {
          return and__3822__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__10123 = obj;
            if (G__10123) {
              var bit__4508__auto__ = G__10123.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4508__auto__ || G__10123.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__10124 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__10125 = pr_writer;
                var G__10126 = writer;
                var G__10127 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10124, G__10125, G__10126, G__10127) : cljs.core.print_map.call(null, G__10124, G__10125, G__10126, G__10127);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__10128 = obj;
                    return goog.isString(G__10128);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__10130 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__10130;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__10129 = obj;
                            if (G__10129) {
                              var bit__4515__auto__ = G__10129.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4515__auto__ || G__10129.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__10129.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10129);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10129);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__10135 = cljs.core.seq(cljs.core.next(objs));
  var chunk__10136 = null;
  var count__10137 = 0;
  var i__10138 = 0;
  while (true) {
    if (i__10138 < count__10137) {
      var obj = chunk__10136.cljs$core$IIndexed$_nth$arity$2(null, i__10138);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__10139 = seq__10135;
      var G__10140 = chunk__10136;
      var G__10141 = count__10137;
      var G__10142 = i__10138 + 1;
      seq__10135 = G__10139;
      chunk__10136 = G__10140;
      count__10137 = G__10141;
      i__10138 = G__10142;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__10135);
      if (temp__4126__auto__) {
        var seq__10135__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10135__$1)) {
          var c__4621__auto__ = cljs.core.chunk_first(seq__10135__$1);
          var G__10143 = cljs.core.chunk_rest(seq__10135__$1);
          var G__10144 = c__4621__auto__;
          var G__10145 = cljs.core.count(c__4621__auto__);
          var G__10146 = 0;
          seq__10135 = G__10143;
          chunk__10136 = G__10144;
          count__10137 = G__10145;
          i__10138 = G__10146;
          continue;
        } else {
          var obj = cljs.core.first(seq__10135__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__10147 = cljs.core.next(seq__10135__$1);
          var G__10148 = null;
          var G__10149 = 0;
          var G__10150 = 0;
          seq__10135 = G__10147;
          chunk__10136 = G__10148;
          count__10137 = G__10149;
          i__10138 = G__10150;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10151__i = 0, G__10151__a = new Array(arguments.length - 0);
      while (G__10151__i < G__10151__a.length) {
        G__10151__a[G__10151__i] = arguments[G__10151__i + 0];
        ++G__10151__i;
      }
      objs = new cljs.core.IndexedSeq(G__10151__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10152) {
    var objs = cljs.core.seq(arglist__10152);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10153__i = 0, G__10153__a = new Array(arguments.length - 0);
      while (G__10153__i < G__10153__a.length) {
        G__10153__a[G__10153__i] = arguments[G__10153__i + 0];
        ++G__10153__i;
      }
      objs = new cljs.core.IndexedSeq(G__10153__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10154) {
    var objs = cljs.core.seq(arglist__10154);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10155__i = 0, G__10155__a = new Array(arguments.length - 0);
      while (G__10155__i < G__10155__a.length) {
        G__10155__a[G__10155__i] = arguments[G__10155__i + 0];
        ++G__10155__i;
      }
      objs = new cljs.core.IndexedSeq(G__10155__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10156) {
    var objs = cljs.core.seq(arglist__10156);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10157__i = 0, G__10157__a = new Array(arguments.length - 0);
      while (G__10157__i < G__10157__a.length) {
        G__10157__a[G__10157__i] = arguments[G__10157__i + 0];
        ++G__10157__i;
      }
      objs = new cljs.core.IndexedSeq(G__10157__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10158) {
    var objs = cljs.core.seq(arglist__10158);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10159__i = 0, G__10159__a = new Array(arguments.length - 0);
      while (G__10159__i < G__10159__a.length) {
        G__10159__a[G__10159__i] = arguments[G__10159__i + 0];
        ++G__10159__i;
      }
      objs = new cljs.core.IndexedSeq(G__10159__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10160) {
    var objs = cljs.core.seq(arglist__10160);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10161__i = 0, G__10161__a = new Array(arguments.length - 0);
      while (G__10161__i < G__10161__a.length) {
        G__10161__a[G__10161__i] = arguments[G__10161__i + 0];
        ++G__10161__i;
      }
      objs = new cljs.core.IndexedSeq(G__10161__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10162) {
    var objs = cljs.core.seq(arglist__10162);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10163__i = 0, G__10163__a = new Array(arguments.length - 0);
      while (G__10163__i < G__10163__a.length) {
        G__10163__a[G__10163__i] = arguments[G__10163__i + 0];
        ++G__10163__i;
      }
      objs = new cljs.core.IndexedSeq(G__10163__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10164) {
    var objs = cljs.core.seq(arglist__10164);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10165__i = 0, G__10165__a = new Array(arguments.length - 0);
      while (G__10165__i < G__10165__a.length) {
        G__10165__a[G__10165__i] = arguments[G__10165__i + 0];
        ++G__10165__i;
      }
      objs = new cljs.core.IndexedSeq(G__10165__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10166) {
    var objs = cljs.core.seq(arglist__10166);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__10173_10179 = cljs.core.key(e);
    var G__10174_10180 = w;
    var G__10175_10181 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10173_10179, G__10174_10180, G__10175_10181) : print_one.call(null, G__10173_10179, G__10174_10180, G__10175_10181);
    cljs.core._write(w, " ");
    var G__10176 = cljs.core.val(e);
    var G__10177 = w;
    var G__10178 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10176, G__10177, G__10178) : print_one.call(null, G__10176, G__10177, G__10178);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__10182__i = 0, G__10182__a = new Array(arguments.length - 2);
      while (G__10182__i < G__10182__a.length) {
        G__10182__a[G__10182__i] = arguments[G__10182__i + 2];
        ++G__10182__i;
      }
      args = new cljs.core.IndexedSeq(G__10182__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10183) {
    var iref = cljs.core.first(arglist__10183);
    arglist__10183 = cljs.core.next(arglist__10183);
    var f = cljs.core.first(arglist__10183);
    var args = cljs.core.rest(arglist__10183);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__10186 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10186) : cljs.core.atom.call(null, G__10186);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__10188 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10188) : cljs.core.deref.call(null, G__10188);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__10189_SHARP_, p2__10190_SHARP_) {
    var ret = function() {
      var G__10193 = p1__10189_SHARP_;
      var G__10194 = p2__10190_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10193, G__10194) : rf.call(null, G__10193, G__10194);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__10197 = null;
      var G__10197__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10197__1 = function(result) {
        var G__10196 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10196) : rf.call(null, G__10196);
      };
      var G__10197__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__10197 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10197__0.call(this);
          case 1:
            return G__10197__1.call(this, result);
          case 2:
            return G__10197__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10197.cljs$core$IFn$_invoke$arity$0 = G__10197__0;
      G__10197.cljs$core$IFn$_invoke$arity$1 = G__10197__1;
      G__10197.cljs$core$IFn$_invoke$arity$2 = G__10197__2;
      return G__10197;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__10206 = null;
          var G__10206__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__10206__1 = function(result) {
            var G__10202 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10202) : rf.call(null, G__10202);
          };
          var G__10206__2 = function(result, input) {
            var prior = function() {
              var G__10203 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10203) : cljs.core.deref.call(null, G__10203);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__10204 = result;
              var G__10205 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10204, G__10205) : rf.call(null, G__10204, G__10205);
            }
          };
          G__10206 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__10206__0.call(this);
              case 1:
                return G__10206__1.call(this, result);
              case 2:
                return G__10206__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10206.cljs$core$IFn$_invoke$arity$0 = G__10206__0;
          G__10206.cljs$core$IFn$_invoke$arity$1 = G__10206__1;
          G__10206.cljs$core$IFn$_invoke$arity$2 = G__10206__2;
          return G__10206;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4812__auto__ = this;
  return cljs.core.es6_iterator(this__4812__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10208_SHARP_, p2__10207_SHARP_) {
    var G__10210 = p2__10207_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10210) : proc.call(null, G__10210);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj10212 = {};
  return obj10212;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3822__auto__ = x;
    if (and__3822__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4478__auto__ = x == null ? null : x;
    return function() {
      var or__3834__auto__ = cljs.core._clj__GT_js[function() {
        var G__10216 = x__4478__auto__;
        return goog.typeOf(G__10216);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3822__auto__ = x;
    if (and__3822__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4478__auto__ = x == null ? null : x;
    return function() {
      var or__3834__auto__ = cljs.core._key__GT_js[function() {
        var G__10220 = x__4478__auto__;
        return goog.typeOf(G__10220);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__10223 = k;
    if (G__10223) {
      var bit__4515__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3834__auto__ = bit__4515__auto__;
        if (cljs.core.truth_(or__3834__auto__)) {
          return or__3834__auto__;
        } else {
          return G__10223.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10223.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10223);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10223);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__10224 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10224) : cljs.core.clj__GT_js.call(null, G__10224);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10240 = x;
      if (G__10240) {
        var bit__4515__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3834__auto__ = bit__4515__auto__;
          if (cljs.core.truth_(or__3834__auto__)) {
            return or__3834__auto__;
          } else {
            return G__10240.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10240.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10240);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10240);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj10242 = {};
              return obj10242;
            }();
            var seq__10243_10253 = cljs.core.seq(x);
            var chunk__10244_10254 = null;
            var count__10245_10255 = 0;
            var i__10246_10256 = 0;
            while (true) {
              if (i__10246_10256 < count__10245_10255) {
                var vec__10247_10257 = chunk__10244_10254.cljs$core$IIndexed$_nth$arity$2(null, i__10246_10256);
                var k_10258 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10247_10257, 0, null);
                var v_10259 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10247_10257, 1, null);
                m[cljs.core.key__GT_js(k_10258)] = clj__GT_js(v_10259);
                var G__10260 = seq__10243_10253;
                var G__10261 = chunk__10244_10254;
                var G__10262 = count__10245_10255;
                var G__10263 = i__10246_10256 + 1;
                seq__10243_10253 = G__10260;
                chunk__10244_10254 = G__10261;
                count__10245_10255 = G__10262;
                i__10246_10256 = G__10263;
                continue;
              } else {
                var temp__4126__auto___10264 = cljs.core.seq(seq__10243_10253);
                if (temp__4126__auto___10264) {
                  var seq__10243_10265__$1 = temp__4126__auto___10264;
                  if (cljs.core.chunked_seq_QMARK_(seq__10243_10265__$1)) {
                    var c__4621__auto___10266 = cljs.core.chunk_first(seq__10243_10265__$1);
                    var G__10267 = cljs.core.chunk_rest(seq__10243_10265__$1);
                    var G__10268 = c__4621__auto___10266;
                    var G__10269 = cljs.core.count(c__4621__auto___10266);
                    var G__10270 = 0;
                    seq__10243_10253 = G__10267;
                    chunk__10244_10254 = G__10268;
                    count__10245_10255 = G__10269;
                    i__10246_10256 = G__10270;
                    continue;
                  } else {
                    var vec__10248_10271 = cljs.core.first(seq__10243_10265__$1);
                    var k_10272 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10248_10271, 0, null);
                    var v_10273 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10248_10271, 1, null);
                    m[cljs.core.key__GT_js(k_10272)] = clj__GT_js(v_10273);
                    var G__10274 = cljs.core.next(seq__10243_10265__$1);
                    var G__10275 = null;
                    var G__10276 = 0;
                    var G__10277 = 0;
                    seq__10243_10253 = G__10274;
                    chunk__10244_10254 = G__10275;
                    count__10245_10255 = G__10276;
                    i__10246_10256 = G__10277;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__10249_10278 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__10250_10279 = null;
              var count__10251_10280 = 0;
              var i__10252_10281 = 0;
              while (true) {
                if (i__10252_10281 < count__10251_10280) {
                  var x_10282__$1 = chunk__10250_10279.cljs$core$IIndexed$_nth$arity$2(null, i__10252_10281);
                  arr.push(x_10282__$1);
                  var G__10283 = seq__10249_10278;
                  var G__10284 = chunk__10250_10279;
                  var G__10285 = count__10251_10280;
                  var G__10286 = i__10252_10281 + 1;
                  seq__10249_10278 = G__10283;
                  chunk__10250_10279 = G__10284;
                  count__10251_10280 = G__10285;
                  i__10252_10281 = G__10286;
                  continue;
                } else {
                  var temp__4126__auto___10287 = cljs.core.seq(seq__10249_10278);
                  if (temp__4126__auto___10287) {
                    var seq__10249_10288__$1 = temp__4126__auto___10287;
                    if (cljs.core.chunked_seq_QMARK_(seq__10249_10288__$1)) {
                      var c__4621__auto___10289 = cljs.core.chunk_first(seq__10249_10288__$1);
                      var G__10290 = cljs.core.chunk_rest(seq__10249_10288__$1);
                      var G__10291 = c__4621__auto___10289;
                      var G__10292 = cljs.core.count(c__4621__auto___10289);
                      var G__10293 = 0;
                      seq__10249_10278 = G__10290;
                      chunk__10250_10279 = G__10291;
                      count__10251_10280 = G__10292;
                      i__10252_10281 = G__10293;
                      continue;
                    } else {
                      var x_10294__$1 = cljs.core.first(seq__10249_10288__$1);
                      arr.push(x_10294__$1);
                      var G__10295 = cljs.core.next(seq__10249_10288__$1);
                      var G__10296 = null;
                      var G__10297 = 0;
                      var G__10298 = 0;
                      seq__10249_10278 = G__10295;
                      chunk__10250_10279 = G__10296;
                      count__10251_10280 = G__10297;
                      i__10252_10281 = G__10298;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10300 = {};
  return obj10300;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3822__auto__ = x;
    if (and__3822__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4478__auto__ = x == null ? null : x;
    return function() {
      var or__3834__auto__ = cljs.core._js__GT_clj[function() {
        var G__10304 = x__4478__auto__;
        return goog.typeOf(G__10304);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__10361__delegate = function(x, opts) {
      var map__10334 = opts;
      var map__10334__$1 = cljs.core.seq_QMARK_(map__10334) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__10334) : map__10334;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10334__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__10334, map__10334__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__10350 = x__$1;
            if (G__10350) {
              var bit__4515__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3834__auto__ = bit__4515__auto__;
                if (cljs.core.truth_(or__3834__auto__)) {
                  return or__3834__auto__;
                } else {
                  return G__10350.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__10350.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10350);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10350);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4590__auto__ = function(map__10334, map__10334__$1, keywordize_keys, keyfn) {
                        return function iter__10351(s__10352) {
                          return new cljs.core.LazySeq(null, function(map__10334, map__10334__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__10352__$1 = s__10352;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__10352__$1);
                                if (temp__4126__auto__) {
                                  var s__10352__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__10352__$2)) {
                                    var c__4588__auto__ = cljs.core.chunk_first(s__10352__$2);
                                    var size__4589__auto__ = cljs.core.count(c__4588__auto__);
                                    var b__10354 = cljs.core.chunk_buffer(size__4589__auto__);
                                    if (function() {
                                      var i__10353 = 0;
                                      while (true) {
                                        if (i__10353 < size__4589__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4588__auto__, i__10353);
                                          cljs.core.chunk_append(b__10354, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__10359 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10359) : keyfn.call(null, G__10359);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__10362 = i__10353 + 1;
                                          i__10353 = G__10362;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__10354), iter__10351(cljs.core.chunk_rest(s__10352__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__10354), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__10352__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__10360 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10360) : keyfn.call(null, G__10360);
                                    }(), thisfn(x__$1[k])], null), iter__10351(cljs.core.rest(s__10352__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__10334, map__10334__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__10334, map__10334__$1, keywordize_keys, keyfn);
                      return iter__4590__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__10334, map__10334__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__10361 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__10363__i = 0, G__10363__a = new Array(arguments.length - 1);
        while (G__10363__i < G__10363__a.length) {
          G__10363__a[G__10363__i] = arguments[G__10363__i + 1];
          ++G__10363__i;
        }
        opts = new cljs.core.IndexedSeq(G__10363__a, 0);
      }
      return G__10361__delegate.call(this, x, opts);
    };
    G__10361.cljs$lang$maxFixedArity = 1;
    G__10361.cljs$lang$applyTo = function(arglist__10364) {
      var x = cljs.core.first(arglist__10364);
      var opts = cljs.core.rest(arglist__10364);
      return G__10361__delegate(x, opts);
    };
    G__10361.cljs$core$IFn$_invoke$arity$variadic = G__10361__delegate;
    return G__10361;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__10365 = null;
        if (arguments.length > 1) {
          var G__10366__i = 0, G__10366__a = new Array(arguments.length - 1);
          while (G__10366__i < G__10366__a.length) {
            G__10366__a[G__10366__i] = arguments[G__10366__i + 1];
            ++G__10366__i;
          }
          G__10365 = new cljs.core.IndexedSeq(G__10366__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10365);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__10369 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10369) : cljs.core.atom.call(null, G__10369);
  }();
  return function(mem) {
    return function() {
      var G__10371__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__10370 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10370) : cljs.core.deref.call(null, G__10370);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__10371 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10372__i = 0, G__10372__a = new Array(arguments.length - 0);
          while (G__10372__i < G__10372__a.length) {
            G__10372__a[G__10372__i] = arguments[G__10372__i + 0];
            ++G__10372__i;
          }
          args = new cljs.core.IndexedSeq(G__10372__a, 0);
        }
        return G__10371__delegate.call(this, args);
      };
      G__10371.cljs$lang$maxFixedArity = 0;
      G__10371.cljs$lang$applyTo = function(arglist__10373) {
        var args = cljs.core.seq(arglist__10373);
        return G__10371__delegate(args);
      };
      G__10371.cljs$core$IFn$_invoke$arity$variadic = G__10371__delegate;
      return G__10371;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__10375 = ret;
        f = G__10375;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__10376__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__10376 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__10377__i = 0, G__10377__a = new Array(arguments.length - 1);
        while (G__10377__i < G__10377__a.length) {
          G__10377__a[G__10377__i] = arguments[G__10377__i + 1];
          ++G__10377__i;
        }
        args = new cljs.core.IndexedSeq(G__10377__a, 0);
      }
      return G__10376__delegate.call(this, f, args);
    };
    G__10376.cljs$lang$maxFixedArity = 1;
    G__10376.cljs$lang$applyTo = function(arglist__10378) {
      var f = cljs.core.first(arglist__10378);
      var args = cljs.core.rest(arglist__10378);
      return G__10376__delegate(f, args);
    };
    G__10376.cljs$core$IFn$_invoke$arity$variadic = G__10376__delegate;
    return G__10376;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__10379 = null;
        if (arguments.length > 1) {
          var G__10380__i = 0, G__10380__a = new Array(arguments.length - 1);
          while (G__10380__i < G__10380__a.length) {
            G__10380__a[G__10380__i] = arguments[G__10380__i + 1];
            ++G__10380__i;
          }
          G__10379 = new cljs.core.IndexedSeq(G__10380__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10379);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__10383 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10383) : Math.floor.call(null, G__10383);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__10385 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10385) : f.call(null, G__10385);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__10387 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10387) : cljs.core.atom.call(null, G__10387);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__10388__i = 0, G__10388__a = new Array(arguments.length - 1);
      while (G__10388__i < G__10388__a.length) {
        G__10388__a[G__10388__i] = arguments[G__10388__i + 1];
        ++G__10388__i;
      }
      args = new cljs.core.IndexedSeq(G__10388__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10389) {
    var f = cljs.core.first(arglist__10389);
    var args = cljs.core.rest(arglist__10389);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10454 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10454) : cljs.core.deref.call(null, G__10454);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3834__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3834__auto__) {
      return or__3834__auto__;
    } else {
      var or__3834__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3834__auto____$1) {
        return or__3834__auto____$1;
      } else {
        var and__3822__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3822__auto__) {
          var and__3822__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3822__auto____$1) {
            var and__3822__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3822__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__10479 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__10477 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10477) : child.call(null, G__10477);
                  }(), function() {
                    var G__10478 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10478) : parent.call(null, G__10478);
                  }());
                  var G__10480 = i + 1;
                  ret = G__10479;
                  i = G__10480;
                  continue;
                }
                break;
              }
            } else {
              return and__3822__auto____$2;
            }
          } else {
            return and__3822__auto____$1;
          }
        } else {
          return and__3822__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10484 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10484) : cljs.core.deref.call(null, G__10484);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10488 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10488) : cljs.core.deref.call(null, G__10488);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10492 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10492) : cljs.core.deref.call(null, G__10492);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__10501 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10501) : targets.call(null, G__10501);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__10502 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10502) : sources.call(null, G__10502);
        }()));
      };
    }(tp, td, ta);
    var or__3834__auto__ = cljs.core.contains_QMARK_(function() {
      var G__10506 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10506) : tp.call(null, G__10506);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__10507 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10507) : ta.call(null, G__10507);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__10508 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10508) : ta.call(null, G__10508);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3834__auto__)) {
      return or__3834__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__10515 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10515) : parentMap.call(null, G__10515);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10516 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10516) : parentMap.call(null, G__10516);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__10509_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__10509_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10509_SHARP_), cljs.core.second(p1__10509_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__10517 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10517) : parentMap.call(null, G__10517);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__10510_SHARP_, p2__10511_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__10510_SHARP_, p2__10511_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__10520 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10520) : cljs.core.deref.call(null, G__10520);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__10521 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10521) : cljs.core.deref.call(null, G__10521);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__10537 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10537) : cljs.core.deref.call(null, G__10537);
  }().call(null, x);
  var or__3834__auto__ = cljs.core.truth_(function() {
    var and__3822__auto__ = xprefs;
    if (cljs.core.truth_(and__3822__auto__)) {
      var G__10539 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10539) : xprefs.call(null, G__10539);
    } else {
      return and__3822__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3834__auto__)) {
    return or__3834__auto__;
  } else {
    var or__3834__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__10540 = cljs.core.rest(ps);
          ps = G__10540;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3834__auto____$1)) {
      return or__3834__auto____$1;
    } else {
      var or__3834__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__10541 = cljs.core.rest(ps);
            ps = G__10541;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3834__auto____$2)) {
        return or__3834__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3834__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3834__auto__)) {
    return or__3834__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__10555) {
    var vec__10556 = p__10555;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10556, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10556, 1, null);
    var e = vec__10556;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10557 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10557) : cljs.core.deref.call(null, G__10557);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3834__auto__ = be == null;
        if (or__3834__auto__) {
          return or__3834__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__10558 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10558) : cljs.core.deref.call(null, G__10558);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10559 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10559) : cljs.core.deref.call(null, G__10559);
    }(), function() {
      var G__10560 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10560) : cljs.core.deref.call(null, G__10560);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10562 = {};
  return obj10562;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3822__auto__ = mf;
    if (and__3822__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4478__auto__ = mf == null ? null : mf;
    return function() {
      var or__3834__auto__ = cljs.core._reset[function() {
        var G__10566 = x__4478__auto__;
        return goog.typeOf(G__10566);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._reset["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3822__auto__ = mf;
    if (and__3822__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4478__auto__ = mf == null ? null : mf;
    return function() {
      var or__3834__auto__ = cljs.core._add_method[function() {
        var G__10570 = x__4478__auto__;
        return goog.typeOf(G__10570);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._add_method["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3822__auto__ = mf;
    if (and__3822__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4478__auto__ = mf == null ? null : mf;
    return function() {
      var or__3834__auto__ = cljs.core._remove_method[function() {
        var G__10574 = x__4478__auto__;
        return goog.typeOf(G__10574);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._remove_method["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3822__auto__ = mf;
    if (and__3822__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4478__auto__ = mf == null ? null : mf;
    return function() {
      var or__3834__auto__ = cljs.core._prefer_method[function() {
        var G__10578 = x__4478__auto__;
        return goog.typeOf(G__10578);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3822__auto__ = mf;
    if (and__3822__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4478__auto__ = mf == null ? null : mf;
    return function() {
      var or__3834__auto__ = cljs.core._get_method[function() {
        var G__10582 = x__4478__auto__;
        return goog.typeOf(G__10582);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._get_method["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3822__auto__ = mf;
    if (and__3822__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4478__auto__ = mf == null ? null : mf;
    return function() {
      var or__3834__auto__ = cljs.core._methods[function() {
        var G__10586 = x__4478__auto__;
        return goog.typeOf(G__10586);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._methods["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3822__auto__ = mf;
    if (and__3822__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3822__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4478__auto__ = mf == null ? null : mf;
    return function() {
      var or__3834__auto__ = cljs.core._prefers[function() {
        var G__10590 = x__4478__auto__;
        return goog.typeOf(G__10590);
      }()];
      if (or__3834__auto__) {
        return or__3834__auto__;
      } else {
        var or__3834__auto____$1 = cljs.core._prefers["_"];
        if (or__3834__auto____$1) {
          return or__3834__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__10592 = this$__$1;
  return goog.getUid(G__10592);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10593 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10593) : cljs.core.deref.call(null, G__10593);
  }(), function() {
    var G__10594 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10594) : cljs.core.deref.call(null, G__10594);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__10595 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10595) : cljs.core.deref.call(null, G__10595);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__10596 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10596) : cljs.core.deref.call(null, G__10596);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10597 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10597) : cljs.core.deref.call(null, G__10597);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10598 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10598) : cljs.core.deref.call(null, G__10598);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11439 = null;
  var G__11439__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11439__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10599 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10599) : self__.dispatch_fn.call(null, G__10599);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10600 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10600) : target_fn.call(null, G__10600);
  };
  var G__11439__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10601 = a;
      var G__10602 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10601, G__10602) : self__.dispatch_fn.call(null, G__10601, G__10602);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10603 = a;
    var G__10604 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10603, G__10604) : target_fn.call(null, G__10603, G__10604);
  };
  var G__11439__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10605 = a;
      var G__10606 = b;
      var G__10607 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10605, G__10606, G__10607) : self__.dispatch_fn.call(null, G__10605, G__10606, G__10607);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10608 = a;
    var G__10609 = b;
    var G__10610 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10608, G__10609, G__10610) : target_fn.call(null, G__10608, G__10609, G__10610);
  };
  var G__11439__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10611 = a;
      var G__10612 = b;
      var G__10613 = c;
      var G__10614 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10611, G__10612, G__10613, G__10614) : self__.dispatch_fn.call(null, G__10611, G__10612, G__10613, G__10614);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10615 = a;
    var G__10616 = b;
    var G__10617 = c;
    var G__10618 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10615, G__10616, G__10617, G__10618) : target_fn.call(null, G__10615, G__10616, G__10617, G__10618);
  };
  var G__11439__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10619 = a;
      var G__10620 = b;
      var G__10621 = c;
      var G__10622 = d;
      var G__10623 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10619, G__10620, G__10621, G__10622, G__10623) : self__.dispatch_fn.call(null, G__10619, G__10620, G__10621, G__10622, G__10623);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10624 = a;
    var G__10625 = b;
    var G__10626 = c;
    var G__10627 = d;
    var G__10628 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10624, G__10625, G__10626, G__10627, G__10628) : target_fn.call(null, G__10624, G__10625, G__10626, G__10627, G__10628);
  };
  var G__11439__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10629 = a;
      var G__10630 = b;
      var G__10631 = c;
      var G__10632 = d;
      var G__10633 = e;
      var G__10634 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10629, G__10630, G__10631, G__10632, G__10633, G__10634) : self__.dispatch_fn.call(null, G__10629, G__10630, G__10631, G__10632, G__10633, G__10634);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10635 = a;
    var G__10636 = b;
    var G__10637 = c;
    var G__10638 = d;
    var G__10639 = e;
    var G__10640 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10635, G__10636, G__10637, G__10638, G__10639, G__10640) : target_fn.call(null, G__10635, G__10636, G__10637, G__10638, G__10639, G__10640);
  };
  var G__11439__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10641 = a;
      var G__10642 = b;
      var G__10643 = c;
      var G__10644 = d;
      var G__10645 = e;
      var G__10646 = f;
      var G__10647 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10641, G__10642, G__10643, G__10644, G__10645, G__10646, G__10647) : self__.dispatch_fn.call(null, G__10641, G__10642, G__10643, G__10644, G__10645, G__10646, G__10647);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10648 = a;
    var G__10649 = b;
    var G__10650 = c;
    var G__10651 = d;
    var G__10652 = e;
    var G__10653 = f;
    var G__10654 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10648, G__10649, G__10650, G__10651, G__10652, G__10653, G__10654) : target_fn.call(null, G__10648, G__10649, G__10650, G__10651, G__10652, G__10653, G__10654);
  };
  var G__11439__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10655 = a;
      var G__10656 = b;
      var G__10657 = c;
      var G__10658 = d;
      var G__10659 = e;
      var G__10660 = f;
      var G__10661 = g;
      var G__10662 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661, G__10662) : self__.dispatch_fn.call(null, G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661, G__10662);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10663 = a;
    var G__10664 = b;
    var G__10665 = c;
    var G__10666 = d;
    var G__10667 = e;
    var G__10668 = f;
    var G__10669 = g;
    var G__10670 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10663, G__10664, G__10665, G__10666, G__10667, G__10668, G__10669, G__10670) : target_fn.call(null, G__10663, G__10664, G__10665, G__10666, G__10667, G__10668, G__10669, G__10670);
  };
  var G__11439__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10671 = a;
      var G__10672 = b;
      var G__10673 = c;
      var G__10674 = d;
      var G__10675 = e;
      var G__10676 = f;
      var G__10677 = g;
      var G__10678 = h;
      var G__10679 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679) : self__.dispatch_fn.call(null, G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10680 = a;
    var G__10681 = b;
    var G__10682 = c;
    var G__10683 = d;
    var G__10684 = e;
    var G__10685 = f;
    var G__10686 = g;
    var G__10687 = h;
    var G__10688 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10680, G__10681, G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, G__10688) : target_fn.call(null, G__10680, G__10681, G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, G__10688);
  };
  var G__11439__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10689 = a;
      var G__10690 = b;
      var G__10691 = c;
      var G__10692 = d;
      var G__10693 = e;
      var G__10694 = f;
      var G__10695 = g;
      var G__10696 = h;
      var G__10697 = i;
      var G__10698 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698) : self__.dispatch_fn.call(null, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10699 = a;
    var G__10700 = b;
    var G__10701 = c;
    var G__10702 = d;
    var G__10703 = e;
    var G__10704 = f;
    var G__10705 = g;
    var G__10706 = h;
    var G__10707 = i;
    var G__10708 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10699, G__10700, G__10701, G__10702, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708) : target_fn.call(null, G__10699, G__10700, G__10701, G__10702, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708);
  };
  var G__11439__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10709 = a;
      var G__10710 = b;
      var G__10711 = c;
      var G__10712 = d;
      var G__10713 = e;
      var G__10714 = f;
      var G__10715 = g;
      var G__10716 = h;
      var G__10717 = i;
      var G__10718 = j;
      var G__10719 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10709, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715, G__10716, G__10717, G__10718, G__10719) : self__.dispatch_fn.call(null, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715, G__10716, G__10717, G__10718, G__10719);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10720 = a;
    var G__10721 = b;
    var G__10722 = c;
    var G__10723 = d;
    var G__10724 = e;
    var G__10725 = f;
    var G__10726 = g;
    var G__10727 = h;
    var G__10728 = i;
    var G__10729 = j;
    var G__10730 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10720, G__10721, G__10722, G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730) : target_fn.call(null, G__10720, G__10721, G__10722, G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730);
  };
  var G__11439__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10731 = a;
      var G__10732 = b;
      var G__10733 = c;
      var G__10734 = d;
      var G__10735 = e;
      var G__10736 = f;
      var G__10737 = g;
      var G__10738 = h;
      var G__10739 = i;
      var G__10740 = j;
      var G__10741 = k;
      var G__10742 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10731, G__10732, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742) : self__.dispatch_fn.call(null, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10743 = a;
    var G__10744 = b;
    var G__10745 = c;
    var G__10746 = d;
    var G__10747 = e;
    var G__10748 = f;
    var G__10749 = g;
    var G__10750 = h;
    var G__10751 = i;
    var G__10752 = j;
    var G__10753 = k;
    var G__10754 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753, G__10754) : target_fn.call(null, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753, G__10754);
  };
  var G__11439__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10755 = a;
      var G__10756 = b;
      var G__10757 = c;
      var G__10758 = d;
      var G__10759 = e;
      var G__10760 = f;
      var G__10761 = g;
      var G__10762 = h;
      var G__10763 = i;
      var G__10764 = j;
      var G__10765 = k;
      var G__10766 = l;
      var G__10767 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767) : self__.dispatch_fn.call(null, G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10768 = a;
    var G__10769 = b;
    var G__10770 = c;
    var G__10771 = d;
    var G__10772 = e;
    var G__10773 = f;
    var G__10774 = g;
    var G__10775 = h;
    var G__10776 = i;
    var G__10777 = j;
    var G__10778 = k;
    var G__10779 = l;
    var G__10780 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10768, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780) : target_fn.call(null, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780);
  };
  var G__11439__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10781 = a;
      var G__10782 = b;
      var G__10783 = c;
      var G__10784 = d;
      var G__10785 = e;
      var G__10786 = f;
      var G__10787 = g;
      var G__10788 = h;
      var G__10789 = i;
      var G__10790 = j;
      var G__10791 = k;
      var G__10792 = l;
      var G__10793 = m;
      var G__10794 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793, G__10794) : self__.dispatch_fn.call(null, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793, G__10794);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10795 = a;
    var G__10796 = b;
    var G__10797 = c;
    var G__10798 = d;
    var G__10799 = e;
    var G__10800 = f;
    var G__10801 = g;
    var G__10802 = h;
    var G__10803 = i;
    var G__10804 = j;
    var G__10805 = k;
    var G__10806 = l;
    var G__10807 = m;
    var G__10808 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805, G__10806, G__10807, G__10808) : target_fn.call(null, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805, G__10806, G__10807, G__10808);
  };
  var G__11439__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10809 = a;
      var G__10810 = b;
      var G__10811 = c;
      var G__10812 = d;
      var G__10813 = e;
      var G__10814 = f;
      var G__10815 = g;
      var G__10816 = h;
      var G__10817 = i;
      var G__10818 = j;
      var G__10819 = k;
      var G__10820 = l;
      var G__10821 = m;
      var G__10822 = n;
      var G__10823 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823) : self__.dispatch_fn.call(null, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10824 = a;
    var G__10825 = b;
    var G__10826 = c;
    var G__10827 = d;
    var G__10828 = e;
    var G__10829 = f;
    var G__10830 = g;
    var G__10831 = h;
    var G__10832 = i;
    var G__10833 = j;
    var G__10834 = k;
    var G__10835 = l;
    var G__10836 = m;
    var G__10837 = n;
    var G__10838 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838) : target_fn.call(null, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838);
  };
  var G__11439__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10839 = a;
      var G__10840 = b;
      var G__10841 = c;
      var G__10842 = d;
      var G__10843 = e;
      var G__10844 = f;
      var G__10845 = g;
      var G__10846 = h;
      var G__10847 = i;
      var G__10848 = j;
      var G__10849 = k;
      var G__10850 = l;
      var G__10851 = m;
      var G__10852 = n;
      var G__10853 = o;
      var G__10854 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854) : self__.dispatch_fn.call(null, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10855 = a;
    var G__10856 = b;
    var G__10857 = c;
    var G__10858 = d;
    var G__10859 = e;
    var G__10860 = f;
    var G__10861 = g;
    var G__10862 = h;
    var G__10863 = i;
    var G__10864 = j;
    var G__10865 = k;
    var G__10866 = l;
    var G__10867 = m;
    var G__10868 = n;
    var G__10869 = o;
    var G__10870 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870) : target_fn.call(null, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870);
  };
  var G__11439__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10871 = a;
      var G__10872 = b;
      var G__10873 = c;
      var G__10874 = d;
      var G__10875 = e;
      var G__10876 = f;
      var G__10877 = g;
      var G__10878 = h;
      var G__10879 = i;
      var G__10880 = j;
      var G__10881 = k;
      var G__10882 = l;
      var G__10883 = m;
      var G__10884 = n;
      var G__10885 = o;
      var G__10886 = p;
      var G__10887 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887) : self__.dispatch_fn.call(null, G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10888 = a;
    var G__10889 = b;
    var G__10890 = c;
    var G__10891 = d;
    var G__10892 = e;
    var G__10893 = f;
    var G__10894 = g;
    var G__10895 = h;
    var G__10896 = i;
    var G__10897 = j;
    var G__10898 = k;
    var G__10899 = l;
    var G__10900 = m;
    var G__10901 = n;
    var G__10902 = o;
    var G__10903 = p;
    var G__10904 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10888, G__10889, G__10890, G__10891, G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904) : target_fn.call(null, G__10888, G__10889, G__10890, G__10891, G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904);
  };
  var G__11439__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10905 = a;
      var G__10906 = b;
      var G__10907 = c;
      var G__10908 = d;
      var G__10909 = e;
      var G__10910 = f;
      var G__10911 = g;
      var G__10912 = h;
      var G__10913 = i;
      var G__10914 = j;
      var G__10915 = k;
      var G__10916 = l;
      var G__10917 = m;
      var G__10918 = n;
      var G__10919 = o;
      var G__10920 = p;
      var G__10921 = q;
      var G__10922 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922) : self__.dispatch_fn.call(null, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10923 = a;
    var G__10924 = b;
    var G__10925 = c;
    var G__10926 = d;
    var G__10927 = e;
    var G__10928 = f;
    var G__10929 = g;
    var G__10930 = h;
    var G__10931 = i;
    var G__10932 = j;
    var G__10933 = k;
    var G__10934 = l;
    var G__10935 = m;
    var G__10936 = n;
    var G__10937 = o;
    var G__10938 = p;
    var G__10939 = q;
    var G__10940 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940) : target_fn.call(null, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940);
  };
  var G__11439__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10941 = a;
      var G__10942 = b;
      var G__10943 = c;
      var G__10944 = d;
      var G__10945 = e;
      var G__10946 = f;
      var G__10947 = g;
      var G__10948 = h;
      var G__10949 = i;
      var G__10950 = j;
      var G__10951 = k;
      var G__10952 = l;
      var G__10953 = m;
      var G__10954 = n;
      var G__10955 = o;
      var G__10956 = p;
      var G__10957 = q;
      var G__10958 = r;
      var G__10959 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959) : self__.dispatch_fn.call(null, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, 
      G__10958, G__10959);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10960 = a;
    var G__10961 = b;
    var G__10962 = c;
    var G__10963 = d;
    var G__10964 = e;
    var G__10965 = f;
    var G__10966 = g;
    var G__10967 = h;
    var G__10968 = i;
    var G__10969 = j;
    var G__10970 = k;
    var G__10971 = l;
    var G__10972 = m;
    var G__10973 = n;
    var G__10974 = o;
    var G__10975 = p;
    var G__10976 = q;
    var G__10977 = r;
    var G__10978 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10960, G__10961, G__10962, G__10963, G__10964, G__10965, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974, G__10975, G__10976, G__10977, G__10978) : target_fn.call(null, G__10960, G__10961, G__10962, G__10963, G__10964, G__10965, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974, G__10975, G__10976, G__10977, G__10978);
  };
  var G__11439__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10979 = a;
      var G__10980 = b;
      var G__10981 = c;
      var G__10982 = d;
      var G__10983 = e;
      var G__10984 = f;
      var G__10985 = g;
      var G__10986 = h;
      var G__10987 = i;
      var G__10988 = j;
      var G__10989 = k;
      var G__10990 = l;
      var G__10991 = m;
      var G__10992 = n;
      var G__10993 = o;
      var G__10994 = p;
      var G__10995 = q;
      var G__10996 = r;
      var G__10997 = s;
      var G__10998 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10979, G__10980, G__10981, G__10982, G__10983, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989, G__10990, G__10991, G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998) : self__.dispatch_fn.call(null, G__10979, G__10980, G__10981, G__10982, G__10983, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989, G__10990, G__10991, G__10992, G__10993, G__10994, 
      G__10995, G__10996, G__10997, G__10998);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10999 = a;
    var G__11000 = b;
    var G__11001 = c;
    var G__11002 = d;
    var G__11003 = e;
    var G__11004 = f;
    var G__11005 = g;
    var G__11006 = h;
    var G__11007 = i;
    var G__11008 = j;
    var G__11009 = k;
    var G__11010 = l;
    var G__11011 = m;
    var G__11012 = n;
    var G__11013 = o;
    var G__11014 = p;
    var G__11015 = q;
    var G__11016 = r;
    var G__11017 = s;
    var G__11018 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10999, G__11000, G__11001, G__11002, G__11003, G__11004, G__11005, G__11006, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018) : target_fn.call(null, G__10999, G__11000, G__11001, G__11002, G__11003, G__11004, G__11005, G__11006, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, 
    G__11018);
  };
  var G__11439__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11439 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11439__1.call(this, self__);
      case 2:
        return G__11439__2.call(this, self__, a);
      case 3:
        return G__11439__3.call(this, self__, a, b);
      case 4:
        return G__11439__4.call(this, self__, a, b, c);
      case 5:
        return G__11439__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11439__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11439__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11439__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11439__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11439__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11439__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11439__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11439__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11439__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11439__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11439__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11439__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11439__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11439__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11439__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11439__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11439__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11439.cljs$core$IFn$_invoke$arity$1 = G__11439__1;
  G__11439.cljs$core$IFn$_invoke$arity$2 = G__11439__2;
  G__11439.cljs$core$IFn$_invoke$arity$3 = G__11439__3;
  G__11439.cljs$core$IFn$_invoke$arity$4 = G__11439__4;
  G__11439.cljs$core$IFn$_invoke$arity$5 = G__11439__5;
  G__11439.cljs$core$IFn$_invoke$arity$6 = G__11439__6;
  G__11439.cljs$core$IFn$_invoke$arity$7 = G__11439__7;
  G__11439.cljs$core$IFn$_invoke$arity$8 = G__11439__8;
  G__11439.cljs$core$IFn$_invoke$arity$9 = G__11439__9;
  G__11439.cljs$core$IFn$_invoke$arity$10 = G__11439__10;
  G__11439.cljs$core$IFn$_invoke$arity$11 = G__11439__11;
  G__11439.cljs$core$IFn$_invoke$arity$12 = G__11439__12;
  G__11439.cljs$core$IFn$_invoke$arity$13 = G__11439__13;
  G__11439.cljs$core$IFn$_invoke$arity$14 = G__11439__14;
  G__11439.cljs$core$IFn$_invoke$arity$15 = G__11439__15;
  G__11439.cljs$core$IFn$_invoke$arity$16 = G__11439__16;
  G__11439.cljs$core$IFn$_invoke$arity$17 = G__11439__17;
  G__11439.cljs$core$IFn$_invoke$arity$18 = G__11439__18;
  G__11439.cljs$core$IFn$_invoke$arity$19 = G__11439__19;
  G__11439.cljs$core$IFn$_invoke$arity$20 = G__11439__20;
  G__11439.cljs$core$IFn$_invoke$arity$21 = G__11439__21;
  G__11439.cljs$core$IFn$_invoke$arity$22 = G__11439__22;
  return G__11439;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args10591) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10591)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11019 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11019) : self__.dispatch_fn.call(null, G__11019);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11020 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11020) : target_fn.call(null, G__11020);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11021 = a;
    var G__11022 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11021, G__11022) : self__.dispatch_fn.call(null, G__11021, G__11022);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11023 = a;
  var G__11024 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11023, G__11024) : target_fn.call(null, G__11023, G__11024);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11025 = a;
    var G__11026 = b;
    var G__11027 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11025, G__11026, G__11027) : self__.dispatch_fn.call(null, G__11025, G__11026, G__11027);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11028 = a;
  var G__11029 = b;
  var G__11030 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11028, G__11029, G__11030) : target_fn.call(null, G__11028, G__11029, G__11030);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11031 = a;
    var G__11032 = b;
    var G__11033 = c;
    var G__11034 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11031, G__11032, G__11033, G__11034) : self__.dispatch_fn.call(null, G__11031, G__11032, G__11033, G__11034);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11035 = a;
  var G__11036 = b;
  var G__11037 = c;
  var G__11038 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11035, G__11036, G__11037, G__11038) : target_fn.call(null, G__11035, G__11036, G__11037, G__11038);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11039 = a;
    var G__11040 = b;
    var G__11041 = c;
    var G__11042 = d;
    var G__11043 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11039, G__11040, G__11041, G__11042, G__11043) : self__.dispatch_fn.call(null, G__11039, G__11040, G__11041, G__11042, G__11043);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11044 = a;
  var G__11045 = b;
  var G__11046 = c;
  var G__11047 = d;
  var G__11048 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11044, G__11045, G__11046, G__11047, G__11048) : target_fn.call(null, G__11044, G__11045, G__11046, G__11047, G__11048);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11049 = a;
    var G__11050 = b;
    var G__11051 = c;
    var G__11052 = d;
    var G__11053 = e;
    var G__11054 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11049, G__11050, G__11051, G__11052, G__11053, G__11054) : self__.dispatch_fn.call(null, G__11049, G__11050, G__11051, G__11052, G__11053, G__11054);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11055 = a;
  var G__11056 = b;
  var G__11057 = c;
  var G__11058 = d;
  var G__11059 = e;
  var G__11060 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11055, G__11056, G__11057, G__11058, G__11059, G__11060) : target_fn.call(null, G__11055, G__11056, G__11057, G__11058, G__11059, G__11060);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11061 = a;
    var G__11062 = b;
    var G__11063 = c;
    var G__11064 = d;
    var G__11065 = e;
    var G__11066 = f;
    var G__11067 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067) : self__.dispatch_fn.call(null, G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11068 = a;
  var G__11069 = b;
  var G__11070 = c;
  var G__11071 = d;
  var G__11072 = e;
  var G__11073 = f;
  var G__11074 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11068, G__11069, G__11070, G__11071, G__11072, G__11073, G__11074) : target_fn.call(null, G__11068, G__11069, G__11070, G__11071, G__11072, G__11073, G__11074);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11075 = a;
    var G__11076 = b;
    var G__11077 = c;
    var G__11078 = d;
    var G__11079 = e;
    var G__11080 = f;
    var G__11081 = g;
    var G__11082 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082) : self__.dispatch_fn.call(null, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11083 = a;
  var G__11084 = b;
  var G__11085 = c;
  var G__11086 = d;
  var G__11087 = e;
  var G__11088 = f;
  var G__11089 = g;
  var G__11090 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11083, G__11084, G__11085, G__11086, G__11087, G__11088, G__11089, G__11090) : target_fn.call(null, G__11083, G__11084, G__11085, G__11086, G__11087, G__11088, G__11089, G__11090);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11091 = a;
    var G__11092 = b;
    var G__11093 = c;
    var G__11094 = d;
    var G__11095 = e;
    var G__11096 = f;
    var G__11097 = g;
    var G__11098 = h;
    var G__11099 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099) : self__.dispatch_fn.call(null, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11100 = a;
  var G__11101 = b;
  var G__11102 = c;
  var G__11103 = d;
  var G__11104 = e;
  var G__11105 = f;
  var G__11106 = g;
  var G__11107 = h;
  var G__11108 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108) : target_fn.call(null, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11109 = a;
    var G__11110 = b;
    var G__11111 = c;
    var G__11112 = d;
    var G__11113 = e;
    var G__11114 = f;
    var G__11115 = g;
    var G__11116 = h;
    var G__11117 = i;
    var G__11118 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11109, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118) : self__.dispatch_fn.call(null, G__11109, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11119 = a;
  var G__11120 = b;
  var G__11121 = c;
  var G__11122 = d;
  var G__11123 = e;
  var G__11124 = f;
  var G__11125 = g;
  var G__11126 = h;
  var G__11127 = i;
  var G__11128 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128) : target_fn.call(null, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11129 = a;
    var G__11130 = b;
    var G__11131 = c;
    var G__11132 = d;
    var G__11133 = e;
    var G__11134 = f;
    var G__11135 = g;
    var G__11136 = h;
    var G__11137 = i;
    var G__11138 = j;
    var G__11139 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136, G__11137, G__11138, G__11139) : self__.dispatch_fn.call(null, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136, G__11137, G__11138, G__11139);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11140 = a;
  var G__11141 = b;
  var G__11142 = c;
  var G__11143 = d;
  var G__11144 = e;
  var G__11145 = f;
  var G__11146 = g;
  var G__11147 = h;
  var G__11148 = i;
  var G__11149 = j;
  var G__11150 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149, G__11150) : target_fn.call(null, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149, G__11150);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11151 = a;
    var G__11152 = b;
    var G__11153 = c;
    var G__11154 = d;
    var G__11155 = e;
    var G__11156 = f;
    var G__11157 = g;
    var G__11158 = h;
    var G__11159 = i;
    var G__11160 = j;
    var G__11161 = k;
    var G__11162 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162) : self__.dispatch_fn.call(null, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11163 = a;
  var G__11164 = b;
  var G__11165 = c;
  var G__11166 = d;
  var G__11167 = e;
  var G__11168 = f;
  var G__11169 = g;
  var G__11170 = h;
  var G__11171 = i;
  var G__11172 = j;
  var G__11173 = k;
  var G__11174 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169, G__11170, G__11171, G__11172, G__11173, G__11174) : target_fn.call(null, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169, G__11170, G__11171, G__11172, G__11173, G__11174);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11175 = a;
    var G__11176 = b;
    var G__11177 = c;
    var G__11178 = d;
    var G__11179 = e;
    var G__11180 = f;
    var G__11181 = g;
    var G__11182 = h;
    var G__11183 = i;
    var G__11184 = j;
    var G__11185 = k;
    var G__11186 = l;
    var G__11187 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181, G__11182, G__11183, G__11184, G__11185, G__11186, G__11187) : self__.dispatch_fn.call(null, G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181, G__11182, G__11183, G__11184, G__11185, G__11186, G__11187);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11188 = a;
  var G__11189 = b;
  var G__11190 = c;
  var G__11191 = d;
  var G__11192 = e;
  var G__11193 = f;
  var G__11194 = g;
  var G__11195 = h;
  var G__11196 = i;
  var G__11197 = j;
  var G__11198 = k;
  var G__11199 = l;
  var G__11200 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200) : target_fn.call(null, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11201 = a;
    var G__11202 = b;
    var G__11203 = c;
    var G__11204 = d;
    var G__11205 = e;
    var G__11206 = f;
    var G__11207 = g;
    var G__11208 = h;
    var G__11209 = i;
    var G__11210 = j;
    var G__11211 = k;
    var G__11212 = l;
    var G__11213 = m;
    var G__11214 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11201, G__11202, G__11203, G__11204, G__11205, G__11206, G__11207, G__11208, G__11209, G__11210, G__11211, G__11212, G__11213, G__11214) : self__.dispatch_fn.call(null, G__11201, G__11202, G__11203, G__11204, G__11205, G__11206, G__11207, G__11208, G__11209, G__11210, G__11211, G__11212, G__11213, G__11214);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11215 = a;
  var G__11216 = b;
  var G__11217 = c;
  var G__11218 = d;
  var G__11219 = e;
  var G__11220 = f;
  var G__11221 = g;
  var G__11222 = h;
  var G__11223 = i;
  var G__11224 = j;
  var G__11225 = k;
  var G__11226 = l;
  var G__11227 = m;
  var G__11228 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11215, G__11216, G__11217, G__11218, G__11219, G__11220, G__11221, G__11222, G__11223, G__11224, G__11225, G__11226, G__11227, G__11228) : target_fn.call(null, G__11215, G__11216, G__11217, G__11218, G__11219, G__11220, G__11221, G__11222, G__11223, G__11224, G__11225, G__11226, G__11227, G__11228);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11229 = a;
    var G__11230 = b;
    var G__11231 = c;
    var G__11232 = d;
    var G__11233 = e;
    var G__11234 = f;
    var G__11235 = g;
    var G__11236 = h;
    var G__11237 = i;
    var G__11238 = j;
    var G__11239 = k;
    var G__11240 = l;
    var G__11241 = m;
    var G__11242 = n;
    var G__11243 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11229, G__11230, G__11231, G__11232, G__11233, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241, G__11242, G__11243) : self__.dispatch_fn.call(null, G__11229, G__11230, G__11231, G__11232, G__11233, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241, G__11242, G__11243);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11244 = a;
  var G__11245 = b;
  var G__11246 = c;
  var G__11247 = d;
  var G__11248 = e;
  var G__11249 = f;
  var G__11250 = g;
  var G__11251 = h;
  var G__11252 = i;
  var G__11253 = j;
  var G__11254 = k;
  var G__11255 = l;
  var G__11256 = m;
  var G__11257 = n;
  var G__11258 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258) : target_fn.call(null, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11259 = a;
    var G__11260 = b;
    var G__11261 = c;
    var G__11262 = d;
    var G__11263 = e;
    var G__11264 = f;
    var G__11265 = g;
    var G__11266 = h;
    var G__11267 = i;
    var G__11268 = j;
    var G__11269 = k;
    var G__11270 = l;
    var G__11271 = m;
    var G__11272 = n;
    var G__11273 = o;
    var G__11274 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11259, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265, G__11266, G__11267, G__11268, G__11269, G__11270, G__11271, G__11272, G__11273, G__11274) : self__.dispatch_fn.call(null, G__11259, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265, G__11266, G__11267, G__11268, G__11269, G__11270, G__11271, G__11272, G__11273, G__11274);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11275 = a;
  var G__11276 = b;
  var G__11277 = c;
  var G__11278 = d;
  var G__11279 = e;
  var G__11280 = f;
  var G__11281 = g;
  var G__11282 = h;
  var G__11283 = i;
  var G__11284 = j;
  var G__11285 = k;
  var G__11286 = l;
  var G__11287 = m;
  var G__11288 = n;
  var G__11289 = o;
  var G__11290 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11275, G__11276, G__11277, G__11278, G__11279, G__11280, G__11281, G__11282, G__11283, G__11284, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290) : target_fn.call(null, G__11275, G__11276, G__11277, G__11278, G__11279, G__11280, G__11281, G__11282, G__11283, G__11284, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11291 = a;
    var G__11292 = b;
    var G__11293 = c;
    var G__11294 = d;
    var G__11295 = e;
    var G__11296 = f;
    var G__11297 = g;
    var G__11298 = h;
    var G__11299 = i;
    var G__11300 = j;
    var G__11301 = k;
    var G__11302 = l;
    var G__11303 = m;
    var G__11304 = n;
    var G__11305 = o;
    var G__11306 = p;
    var G__11307 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11291, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297, G__11298, G__11299, G__11300, G__11301, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307) : self__.dispatch_fn.call(null, G__11291, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297, G__11298, G__11299, G__11300, G__11301, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11308 = a;
  var G__11309 = b;
  var G__11310 = c;
  var G__11311 = d;
  var G__11312 = e;
  var G__11313 = f;
  var G__11314 = g;
  var G__11315 = h;
  var G__11316 = i;
  var G__11317 = j;
  var G__11318 = k;
  var G__11319 = l;
  var G__11320 = m;
  var G__11321 = n;
  var G__11322 = o;
  var G__11323 = p;
  var G__11324 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11308, G__11309, G__11310, G__11311, G__11312, G__11313, G__11314, G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324) : target_fn.call(null, G__11308, G__11309, G__11310, G__11311, G__11312, G__11313, G__11314, G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11325 = a;
    var G__11326 = b;
    var G__11327 = c;
    var G__11328 = d;
    var G__11329 = e;
    var G__11330 = f;
    var G__11331 = g;
    var G__11332 = h;
    var G__11333 = i;
    var G__11334 = j;
    var G__11335 = k;
    var G__11336 = l;
    var G__11337 = m;
    var G__11338 = n;
    var G__11339 = o;
    var G__11340 = p;
    var G__11341 = q;
    var G__11342 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11325, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340, G__11341, G__11342) : self__.dispatch_fn.call(null, G__11325, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340, G__11341, G__11342);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11343 = a;
  var G__11344 = b;
  var G__11345 = c;
  var G__11346 = d;
  var G__11347 = e;
  var G__11348 = f;
  var G__11349 = g;
  var G__11350 = h;
  var G__11351 = i;
  var G__11352 = j;
  var G__11353 = k;
  var G__11354 = l;
  var G__11355 = m;
  var G__11356 = n;
  var G__11357 = o;
  var G__11358 = p;
  var G__11359 = q;
  var G__11360 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351, G__11352, G__11353, G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360) : target_fn.call(null, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351, G__11352, G__11353, G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11361 = a;
    var G__11362 = b;
    var G__11363 = c;
    var G__11364 = d;
    var G__11365 = e;
    var G__11366 = f;
    var G__11367 = g;
    var G__11368 = h;
    var G__11369 = i;
    var G__11370 = j;
    var G__11371 = k;
    var G__11372 = l;
    var G__11373 = m;
    var G__11374 = n;
    var G__11375 = o;
    var G__11376 = p;
    var G__11377 = q;
    var G__11378 = r;
    var G__11379 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367, G__11368, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379) : self__.dispatch_fn.call(null, G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367, G__11368, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, 
    G__11378, G__11379);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11380 = a;
  var G__11381 = b;
  var G__11382 = c;
  var G__11383 = d;
  var G__11384 = e;
  var G__11385 = f;
  var G__11386 = g;
  var G__11387 = h;
  var G__11388 = i;
  var G__11389 = j;
  var G__11390 = k;
  var G__11391 = l;
  var G__11392 = m;
  var G__11393 = n;
  var G__11394 = o;
  var G__11395 = p;
  var G__11396 = q;
  var G__11397 = r;
  var G__11398 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11380, G__11381, G__11382, G__11383, G__11384, G__11385, G__11386, G__11387, G__11388, G__11389, G__11390, G__11391, G__11392, G__11393, G__11394, G__11395, G__11396, G__11397, G__11398) : target_fn.call(null, G__11380, G__11381, G__11382, G__11383, G__11384, G__11385, G__11386, G__11387, G__11388, G__11389, G__11390, G__11391, G__11392, G__11393, G__11394, G__11395, G__11396, G__11397, G__11398);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11399 = a;
    var G__11400 = b;
    var G__11401 = c;
    var G__11402 = d;
    var G__11403 = e;
    var G__11404 = f;
    var G__11405 = g;
    var G__11406 = h;
    var G__11407 = i;
    var G__11408 = j;
    var G__11409 = k;
    var G__11410 = l;
    var G__11411 = m;
    var G__11412 = n;
    var G__11413 = o;
    var G__11414 = p;
    var G__11415 = q;
    var G__11416 = r;
    var G__11417 = s;
    var G__11418 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11399, G__11400, G__11401, G__11402, G__11403, G__11404, G__11405, G__11406, G__11407, G__11408, G__11409, G__11410, G__11411, G__11412, G__11413, G__11414, G__11415, G__11416, G__11417, G__11418) : self__.dispatch_fn.call(null, G__11399, G__11400, G__11401, G__11402, G__11403, G__11404, G__11405, G__11406, G__11407, G__11408, G__11409, G__11410, G__11411, G__11412, G__11413, G__11414, 
    G__11415, G__11416, G__11417, G__11418);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11419 = a;
  var G__11420 = b;
  var G__11421 = c;
  var G__11422 = d;
  var G__11423 = e;
  var G__11424 = f;
  var G__11425 = g;
  var G__11426 = h;
  var G__11427 = i;
  var G__11428 = j;
  var G__11429 = k;
  var G__11430 = l;
  var G__11431 = m;
  var G__11432 = n;
  var G__11433 = o;
  var G__11434 = p;
  var G__11435 = q;
  var G__11436 = r;
  var G__11437 = s;
  var G__11438 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11419, G__11420, G__11421, G__11422, G__11423, G__11424, G__11425, G__11426, G__11427, G__11428, G__11429, G__11430, G__11431, G__11432, G__11433, G__11434, G__11435, G__11436, G__11437, G__11438) : target_fn.call(null, G__11419, G__11420, G__11421, G__11422, G__11423, G__11424, G__11425, G__11426, G__11427, G__11428, G__11429, G__11430, G__11431, G__11432, G__11433, G__11434, G__11435, G__11436, G__11437, 
  G__11438);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11440 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__11440);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4421__auto__, writer__4422__auto__, opt__4423__auto__) {
  return cljs.core._write(writer__4422__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__11445 = msg;
      return Error(G__11445);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__11450 = x;
      var G__11451 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11450, G__11451) : pred.call(null, G__11450, G__11451);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__11452 = y;
        var G__11453 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11452, G__11453) : pred.call(null, G__11452, G__11453);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("h2t.hello");
goog.require("cljs.core");
alert("Hello from ClojureScript!");
